---
http_interactions:
- request:
    method: get
    uri: https://terminal.turing.edu/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.8.1 Ruby/3.0.0p0 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - terminal.turing.edu
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Fri, 25 Jun 2021 23:42:30 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Content-Type:
      - text/html; charset=utf-8
      Etag:
      - W/"f0e898f84d1b963e5031ebe624a040d4"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _terminal_session=OJDLTHsnFp%2Fze9qstMKNzoQrundha0h2cPJh0HIOAt7IpOBtC%2FGrMshkWgXwRXPWKKKoC8ZtC09W2nYNpli7RGa4iA3P%2B2j0m3yyObvyRgtrIOC4dNOgsPuvQXwCzuizT5ybzDKj6mlLflDpwURK7BT2SpcoYlhdaN1lH2LgPi06m9p%2FOJL5psqJ8Xy15MxCtPqE9aO0Dczxo8i3N1wFwXLAPq97H%2BLAV%2FGM8C1Rqw%2F3Mh9V3arJJGZPKn2mlFIx2mVI7UpKhLS32wmWqYG0nFuH7X0bskP2XA%3D%3D--tzl%2FJozIpU43UjUv--O%2FUTtl6NphpThBBZmHTedQ%3D%3D;
        path=/; secure; HttpOnly
      X-Request-Id:
      - 2011b2a7-b1b1-4891-b720-7fecb2a6f57d
      X-Runtime:
      - '1.638708'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ+CiAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogIDx0aXRsZT4KICAgIFRlcm1pbmFsIC0KICAgIFR1cmluZyBhbHVtbmkgcHJvZmlsZXMKICA8L3RpdGxlPgogIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJXZSBtYXRjaCB5b3VyIHNraWxscywgZXhwZXJpZW5jZSBhbmQgZGVzaXJlZCBiZW5lZml0cyB0byB0aGUgcmlnaHQgY29tcGFueSBmb3IgeW91LiI+CiAgPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiB0eXBlPSJpbWFnZS94LWljb24iIGhyZWY9Ii9hc3NldHMvZmF2aWNvbi0xMDc3YjVlY2E1NWJhMTg4ZWJhYzVhODVlMWQxNTk1NmM4ZDNhNDM5NTM5YWUzZTMyNDViMWU1N2Y4MTcwYjA5LmljbyIgLz4KCiAgICA8IS0tIEdsb2JhbCBzaXRlIHRhZyAoZ3RhZy5qcykgLSBHb29nbGUgQW5hbHl0aWNzIC0tPgo8c2NyaXB0IGFzeW5jIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RhZy9qcz9pZD1VQS0xMDMyOTU1MTQtMSI+PC9zY3JpcHQ+CjxzY3JpcHQ+CiAgd2luZG93LmRhdGFMYXllciA9IHdpbmRvdy5kYXRhTGF5ZXIgfHwgW107CiAgZnVuY3Rpb24gZ3RhZygpe2RhdGFMYXllci5wdXNoKGFyZ3VtZW50cyk7fQogIGd0YWcoJ2pzJywgbmV3IERhdGUoKSk7CgogIGd0YWcoJ2NvbmZpZycsICdVQS0xMDMyOTU1MTQtMScpOwo8L3NjcmlwdD4KCgogIDwhLS0gRmFjZWJvb2sgT3BlbiBHcmFwaCBkYXRhIC0tPgogIDxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iVGVybWluYWwgLSBKb2JzIFlvdSBXYW50LiIgLz4KICA8bWV0YSBwcm9wZXJ0eT0ib2c6dHlwZSIgY29udGVudD0id2Vic2l0ZSIgLz4KICA8bWV0YSBwcm9wZXJ0eT0ib2c6dXJsIiBjb250ZW50PSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUiIC8+CiAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvYXNzZXRzL3R1cmluZ19sb2dvXzI1Ni1mNTM3ZGE2ZGI5MzNkMDVmMmJhY2Q3Y2UyNDI1N2JkODZhNDY2NDQxMzFhMjNmNzUwZWZmOTQxZWIzOTJlNDkyLnBuZyIgLz4KICA8bWV0YSBwcm9wZXJ0eT0ib2c6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IldlIG1hdGNoIHlvdXIgc2tpbGxzLCBleHBlcmllbmNlIGFuZCBkZXNpcmVkIGJlbmVmaXRzIHRvIHRoZSByaWdodCBjb21wYW55IGZvciB5b3UuIiAvPgogIDxtZXRhIHByb3BlcnR5PSJvZzpzaXRlX25hbWUiIGNvbnRlbnQ9IlRlcm1pbmFsIC0gSm9icyBZb3UgV2FudC4iIC8+CgogIDwhLS0gVHdpdHRlciBDYXJkIGRhdGEgLS0+CiAgPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5X2xhcmdlX2ltYWdlIj4KICA8bWV0YSBuYW1lPSJ0d2l0dGVyOnNpdGUiIGNvbnRlbnQ9IkB0dXJpbmdzY2hvb2wiPgogIDxtZXRhIG5hbWU9InR3aXR0ZXI6dGl0bGUiIGNvbnRlbnQ9IlRlcm1pbmFsIC0gSm9icyBZb3UgV2FudC4iPgogIDxtZXRhIG5hbWU9InR3aXR0ZXI6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IlR1cmluZyBTY2hvb2wgaXMgYSA3IG1vbnRoLCBmdWxseSBpbW1lcnNpdmUgdGVjaG5pY2FsIHRyYWluaW5nIHByb2dyYW0gaW4gRGVudmVyLCBDTy4gV2UgdHVybiBncmVhdCBwZW9wbGUgaW50byBvdXRzdGFuZGluZyBzb2Z0d2FyZSBkZXZlbG9wZXJzLiI+CiAgPG1ldGEgbmFtZT0idHdpdHRlcjpjcmVhdG9yIiBjb250ZW50PSJAdHVyaW5nc2Nob29sIj4KICA8bWV0YSBuYW1lPSJ0d2l0dGVyOmltYWdlOnNyYyIgY29udGVudD0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L2Fzc2V0cy90dXJpbmdfbG9nb18yNTYtZjUzN2RhNmRiOTMzZDA1ZjJiYWNkN2NlMjQyNTdiZDg2YTQ2NjQ0MTMxYTIzZjc1MGVmZjk0MWViMzkyZTQ5Mi5wbmciPgoKICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEsIG1heGltdW0tc2NhbGU9NSI+CiAgPG1ldGEgbmFtZT0iY3NyZi1wYXJhbSIgY29udGVudD0iYXV0aGVudGljaXR5X3Rva2VuIiAvPgo8bWV0YSBuYW1lPSJjc3JmLXRva2VuIiBjb250ZW50PSIvREhrTW9oNXI3dWRPU0RHUkR2Z1VvY04rUWJPYTN3RCsxZERsRFhXU3Z5bG1RU3JqbGZKN0tKemV0RUcrWExiZDM4NEoyWWZRdnZGN05TN0xHbWJTUT09IiAvPgogIAogIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iLy9jZG4ucmF3Z2l0LmNvbS9rb25wYS9kZXZpY29uL2RmNjQzMWUzMjM1NDdhZGQxYjRjZjQ1OTkyOTEzZjE1Mjg2NDU2ZDMvZGV2aWNvbi5taW4uY3NzIj4KICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii8vdXNlLmZvbnRhd2Vzb21lLmNvbS9yZWxlYXNlcy92NS4wLjEzL2Nzcy9hbGwuY3NzIiBpbnRlZ3JpdHk9InNoYTM4NC1ETk9IWjY4VThoWmZLWE9ydGpXdmp4dXNHbzlXUW5yTngyc3FHMHRmc2doQXZ0VmxSVzN0dmtYV1poNThOOWpwIiBjcm9zc29yaWdpbj0iYW5vbnltb3VzIj4KICA8bGluayByZWw9InN0eWxlc2hlZXQiIG1lZGlhPSJhbGwiIGhyZWY9Ii9hc3NldHMvYXBwbGljYXRpb24tYzc1ZTAxY2ZlOGFiNzI2ODE4MDlmYzE0MThhYzUzNDQzNWFjYTM0NTA3ZTg3ZTk3ODNiYWUzNjdkODAzZDg0MS5jc3MiIC8+CjwvaGVhZD4KCjxib2R5PgoKICA8ZGl2IGNsYXNzPSJtYWluLWJvZHkgc3BhY2UtZm9yLW5hdmJhciI+CiAgICAKCiAgICA8ZGl2IGNsYXNzPSJtYWluLW5hdmJhciBuYXZiYXIgbmF2YmFyLWV4cGFuZC1tZCBuYXZiYXItbGlnaHQgZml4ZWQtdG9wIj4KCgogIDxhIGhyZWY9Ii8iPgogICAgPGltZyBjbGFzcz0ibWwtYXV0byIgYWx0PSJUdXJpbmcgbG9nbyIgc3JjPSIvYXNzZXRzL3R1cmluZ19sb2dvX2dyYXktMmJjNmJkYzczNjg5MDkwN2Y1MzZmMmQxODhkN2QyMGZmZThlOGIyODc2NGJkYzcyNDg2N2RjZmI3OGNkMWI3Ny5wbmciIC8+CjwvYT4gIDxidXR0b24gY2xhc3M9Im5hdmJhci10b2dnbGVyIiB0eXBlPSJidXR0b24iIGRhdGEtdG9nZ2xlPSJjb2xsYXBzZSIgZGF0YS10YXJnZXQ9IiNuYXZiYXJDb2xsYXBzZSIgYXJpYS1jb250cm9scz0ibmF2YmFyQ29sbGFwc2UiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIiBhcmlhLWxhYmVsPSJUb2dnbGUgbmF2aWdhdGlvbiI+CiAgICA8c3BhbiBjbGFzcz0ibmF2YmFyLXRvZ2dsZXItaWNvbiI+PC9zcGFuPgogIDwvYnV0dG9uPgogIDxkaXYgY2xhc3M9ImNvbGxhcHNlIG5hdmJhci1jb2xsYXBzZSBqdXN0aWZ5LWNvbnRlbnQtZW5kIiBpZD0ibmF2YmFyQ29sbGFwc2UiPgogICAgPHVsIGNsYXNzPSJuYXZiYXItbmF2IGJsb2NrLXRleHQgYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIj4KICA8YSBjbGFzcz0ibmF2LWxpbmsiIGhyZWY9Ii9kZXZlbG9wZXJzL3NpZ25faW4iPkFsdW1uaSBMb2cgSW48L2E+CjwvbGk+CgogICAgPC91bD4KICA8L2Rpdj4KPC9kaXY+CgoKICAgIDxtYWluPgogICAgICAKPGRpdiBjbGFzcz0icHJvZmlsZS1saXN0Ij4KICA8aGVhZGVyIGNsYXNzPSJwcm9maWxlLWxpc3QtaGVhZGVyIHctMTAwIj4KICAgIDxoMSBjbGFzcz0idGl0bGUiPkFsdW1uaSBQb3J0Zm9saW9zPC9oMT4KCiAgICAgIDxwIGNsYXNzPSJ0YWdsaW5lIj5FeHBsb3JlIG91ciByZWNlbnQgZ3JhZHVhdGVzIHRvIGZpbmQgeW91ciBuZXh0IGVtcGxveWVlPC9wPgoKICAgICAgPGRpdiBjbGFzcz0ic3RhdC1saXN0Ij4KICAgICAgICA8c3BhbiBjbGFzcz0ic3RhdC1saXN0LWl0ZW0iPgogICAgICAgICAgPHNwYW4gY2xhc3M9InN0YXQtbnVtYmVyIiBhcmlhLWRlc2NyaWJlZGJ5PSJncmFkdWF0ZXMtY291bnQtbGFiZWwiPgogICAgICAgICAgICAxMzAKICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDxzcGFuIGlkPSJncmFkdWF0ZXMtY291bnQtbGFiZWwiIGNsYXNzPSJzdGF0LWxhYmVsIj5ncmFkdWF0ZXM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJzdGF0LWxpc3QtaXRlbSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ic3RhdC1udW1iZXIiIGFyaWEtZGVzY3JpYmVkYnk9InNraWxscy1jb3VudC1sYWJlbCI+CiAgICAgICAgICAgIDExMwogICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPHNwYW4gaWQ9InNraWxscy1jb3VudC1sYWJlbCIgY2xhc3M9InN0YXQtbGFiZWwiPnNraWxsczwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9InN0YXQtbGlzdC1pdGVtIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdGF0LW51bWJlciIgYXJpYS1kZXNjcmliZWRieT0iaW5kdXN0cmllcy1jb3VudC1sYWJlbCI+CiAgICAgICAgICAgIDk5CiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8c3BhbiBpZD0iaW5kdXN0cmllcy1jb3VudC1sYWJlbCIgY2xhc3M9InN0YXQtbGFiZWwiPnByZXZpb3VzIGluZHVzdHJpZXM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPHNlY3Rpb24gY2xhc3M9ImNvbnRhaW5lci1sZyI+CiAgICA8Zm9ybSBjbGFzcz0icm93IG1iLTIgcHJvZmlsZS1maWx0ZXJzIiBhY3Rpb249Ii8iIGFjY2VwdC1jaGFyc2V0PSJVVEYtOCIgbWV0aG9kPSJnZXQiPgogICAgICA8ZGl2IGNsYXNzPSJjb2wtc20gbXQtMCBtdC1zbS00Ij4KICAgICAgICA8c2VsZWN0IG5hbWU9InByb2dyYW0iIGlkPSJwcm9ncmFtIiBjbGFzcz0iZHMtc2VsZWN0Ij48b3B0aW9uIHZhbHVlPSIiPkFsbDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9ImJlIj5CYWNrLUVuZDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJmZSI+RnJvbnQtRW5kPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9ImJlZmUiPkJFICZhbXA7IEZFPC9vcHRpb24+PC9zZWxlY3Q+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJkcy1zZWxlY3QtbGFiZWwiIGZvcj0icHJvZ3JhbSI+UHJvZ3JhbTwvbGFiZWw+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0iY29sLXNtIG10LTAgbXQtc20tNCI+CiAgICAgICAgPHNlbGVjdCBuYW1lPSJza2lsbCIgaWQ9InNraWxsIiBjbGFzcz0iZHMtc2VsZWN0Ij48b3B0aW9uIHZhbHVlPSIiPkFsbDwvb3B0aW9uPjxvcHRpb24gdmFsdWU9IjEiPi5ORVQ8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMiI+QWRvYmUgSWxsdXN0cmF0b3I8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMyI+QWRvYmUgUGhvdG9zaG9wPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjQiPkFuZHJvaWQ8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNSI+QW5ndWxhckpTPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjgiPkFwcGxlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE0MCI+QVI8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iOSI+QXRvbTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNDIiPkF1dG9tYXRlZCBRQTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMCI+QVdTPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjExIj5CYWJlbDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNDMiPkJhc2g8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTMiPkJlaGFuY2U8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTQiPkJpdGJ1Y2tldDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNSI+Qm9vdHN0cmFwPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE0NCI+QnVzaW5lc3MgRGV2ZWxvcG1lbnQ8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTciPkM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTgiPkMjPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE5Ij5DKys8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMjIiPkNocm9tZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyNyI+Q29uZmx1ZW5jZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIyOSI+Q1NTMzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNDUiPkN5YmVyc2VjdXJpdHk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMzEiPkQzLmpzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE2OSI+RGFydDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIzNCI+RGphbmdvPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjM1Ij5Eb2NrZXI8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTMwIj5FbGl4aXI8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNDAiPkVtYmVyPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE0NyI+RW5naW5lZXJpbmcgTWFuYWdlbWVudDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMzgiPkVuenltZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI0MiI+RXhwcmVzczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI0MyI+RmFjZWJvb2s8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNDQiPkZpcmVmb3g8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTY4Ij5GbHV0dGVyPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjQ3Ij5HaW1wPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjQ4Ij5HaXQ8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNDkiPkdpdEh1Yjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI1MSI+R288L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTM0Ij5Hb2xhbmc8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNTIiPkdvb2dsZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNjciPkdyYXBoUUw8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNTciPkd1bHA8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNTkiPkhlcm9rdTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI2MCI+SFRNTDU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNjIiPklua3NjYXBlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjYzIj5JbnRlbGxpSjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNDkiPmlPUzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI2NiI+SmF2YTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI2NyI+SmF2YVNjcmlwdDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMzkiPkplc3Q8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNjkiPkpldGJyYWluczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI3MCI+alF1ZXJ5PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE1MCI+S290bGluPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEzNSI+S3ViZXJuZXRlczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI3MiI+TGFyYXZlbDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI3NCI+TGlua2VkSW48L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNzUiPkxpbnV4PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE1MSI+TWFuYWdlbWVudDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNTIiPk1BVExBQjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNTMiPk1lbnRvcnNoaXA8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iNzciPk1vY2hhPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9Ijc4Ij5Nb25nb0RCPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjgwIj5NeVNRTDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI4MiI+Tm9kZS5qczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI4MyI+Tm9kZXdlYmtpdDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI4NCI+TnBtPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9Ijg1Ij5PcmFjbGU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iODYiPlBIUDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI4OCI+UG9zdGdyZVNRTDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNTYiPlByb2R1Y3QgTWFuYWdlbWVudDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI5MSI+UHl0aG9uPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE1NyI+UXVhbGl0eSBBc3N1cmFuY2UgLyBRQTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNTgiPlI8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iOTIiPlJhaWxzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjkzIj5SZWFjdDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNTkiPlJlYWN0IE5hdGl2ZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSI5NSI+UmVkaXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iOTYiPlJlZHV4PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEzNiI+UlNwZWM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iOTciPlJ1Ynk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iOTgiPlJ1YnlNaW5lPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9Ijk5Ij5SdXN0PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEzNyI+U2Fhczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNjAiPlNhYVM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTAwIj5TYWZhcmk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTMyIj5TYWxlc2ZvcmNlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEwMSI+U2Fzczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMDIiPlNjYWxhPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEwMyI+U2VxdWVsaXplPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEwNCI+U2tldGNoPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEwNSI+U2xhY2s8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTQxIj5Tb2Z0d2FyZSBBcmNoaXRlY3R1cmU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTI5Ij5TUUw8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTA3Ij5TU0g8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTA5Ij5Td2lmdDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNjEiPlRlY2huaWNhbCBTYWxlczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMTIiPlRyYXZpczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMTMiPlRyZWxsbzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMTQiPlR3aXR0ZXI8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTE1Ij5UeXBlU2NyaXB0PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjExNiI+VWJ1bnR1PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE2MiI+VXNlciBFeHBlcmllbmNlIERlc2lnbiAvIFVYPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjE2MyI+VXNlciBJbnRlcmZhY2UgRGVzaWduIC8gVUk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iMTE3Ij5WYWdyYW50PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjExOCI+VmltPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjExOSI+VmlzdWFsIFN0dWRpbzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxNjQiPlZSPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEyMCI+VnVlLmpzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IjEyMSI+V2VicGFjazwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMjMiPldpbmRvd3MgODwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMjQiPldvcmRwcmVzczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSIxMjUiPllhcm48L29wdGlvbj48L3NlbGVjdD4KICAgICAgICA8bGFiZWwgY2xhc3M9ImRzLXNlbGVjdC1sYWJlbCIgZm9yPSJza2lsbCI+U2tpbGw8L2xhYmVsPgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbSBtdC0wIG10LXNtLTQiPgogICAgICAgIDxzZWxlY3QgbmFtZT0iaW5kdXN0cnkiIGlkPSJpbmR1c3RyeSIgY2xhc3M9ImRzLXNlbGVjdCI+PG9wdGlvbiB2YWx1ZT0iIj5BbGw8L29wdGlvbj48b3B0aW9uIHZhbHVlPSJBY2NvdW50aW5nIj5BY2NvdW50aW5nPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkFpcmxpbmVzL0F2aWF0aW9uIj5BaXJsaW5lcy9BdmlhdGlvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJBbmltYXRpb24iPkFuaW1hdGlvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJBcHBhcmVsICZhbXA7IEZhc2hpb24iPkFwcGFyZWwgJmFtcDsgRmFzaGlvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJBcmNoaXRlY3R1cmUgJmFtcDsgUGxhbm5pbmciPkFyY2hpdGVjdHVyZSAmYW1wOyBQbGFubmluZzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJBcnRzIGFuZCBDcmFmdHMiPkFydHMgYW5kIENyYWZ0czwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJBdXRvbW90aXZlIj5BdXRvbW90aXZlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkF2aWF0aW9uICZhbXA7IEFlcm9zcGFjZSI+QXZpYXRpb24gJmFtcDsgQWVyb3NwYWNlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkJhbmtpbmciPkJhbmtpbmc8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iQmlvdGVjaG5vbG9neSI+QmlvdGVjaG5vbG9neTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJCcm9hZGNhc3QgTWVkaWEiPkJyb2FkY2FzdCBNZWRpYTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJDaGVtaWNhbHMiPkNoZW1pY2Fsczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJDaXZpYyAmYW1wOyBTb2NpYWwgT3JnYW5pemF0aW9uIj5DaXZpYyAmYW1wOyBTb2NpYWwgT3JnYW5pemF0aW9uPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkNpdmlsIEVuZ2luZWVyaW5nIj5DaXZpbCBFbmdpbmVlcmluZzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJDb21wdXRlciAmYW1wOyBOZXR3b3JrIFNlY3VyaXR5Ij5Db21wdXRlciAmYW1wOyBOZXR3b3JrIFNlY3VyaXR5PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkNvbXB1dGVyIEdhbWVzIj5Db21wdXRlciBHYW1lczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJDb21wdXRlciBIYXJkd2FyZSI+Q29tcHV0ZXIgSGFyZHdhcmU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iQ29tcHV0ZXIgTmV0d29ya2luZyI+Q29tcHV0ZXIgTmV0d29ya2luZzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJDb21wdXRlciBTb2Z0d2FyZSI+Q29tcHV0ZXIgU29mdHdhcmU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iQ29uc3RydWN0aW9uIj5Db25zdHJ1Y3Rpb248L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iQ29uc3VtZXIgRWxlY3Ryb25pY3MiPkNvbnN1bWVyIEVsZWN0cm9uaWNzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkNvbnN1bWVyIFNlcnZpY2VzIj5Db25zdW1lciBTZXJ2aWNlczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJDb3NtZXRpY3MiPkNvc21ldGljczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJEZWZlbnNlICZhbXA7IFNwYWNlIj5EZWZlbnNlICZhbXA7IFNwYWNlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkRlc2lnbiI+RGVzaWduPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkUtTGVhcm5pbmciPkUtTGVhcm5pbmc8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iRWR1Y2F0aW9uIE1hbmFnZW1lbnQiPkVkdWNhdGlvbiBNYW5hZ2VtZW50PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkVsZWN0cmljYWwvRWxlY3Ryb25pYyBNYW51ZmFjdHVyaW5nIj5FbGVjdHJpY2FsL0VsZWN0cm9uaWMgTWFudWZhY3R1cmluZzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJFbnRlcnRhaW5tZW50Ij5FbnRlcnRhaW5tZW50PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkVudmlyb25tZW50YWwgU2VydmljZXMiPkVudmlyb25tZW50YWwgU2VydmljZXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iRXZlbnRzIFNlcnZpY2VzIj5FdmVudHMgU2VydmljZXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iRXhlY3V0aXZlIE9mZmljZSI+RXhlY3V0aXZlIE9mZmljZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJGYWNpbGl0aWVzIFNlcnZpY2VzIj5GYWNpbGl0aWVzIFNlcnZpY2VzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkZhcm1pbmciPkZhcm1pbmc8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iRmluYW5jaWFsIFNlcnZpY2VzIj5GaW5hbmNpYWwgU2VydmljZXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iRmluZSBBcnQiPkZpbmUgQXJ0PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkZvb2QgJmFtcDsgQmV2ZXJhZ2VzIj5Gb29kICZhbXA7IEJldmVyYWdlczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJGb29kIFByb2R1Y3Rpb24iPkZvb2QgUHJvZHVjdGlvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJGdW5kLVJhaXNpbmciPkZ1bmQtUmFpc2luZzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJGdXJuaXR1cmUiPkZ1cm5pdHVyZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJHYW1ibGluZyAmYW1wOyBDYXNpbm9zIj5HYW1ibGluZyAmYW1wOyBDYXNpbm9zPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkdvdmVybm1lbnQgQWRtaW5pc3RyYXRpb24iPkdvdmVybm1lbnQgQWRtaW5pc3RyYXRpb248L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iR3JhcGhpYyBEZXNpZ24iPkdyYXBoaWMgRGVzaWduPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkhlYWx0aCwgV2VsbG5lc3MgYW5kIEZpdG5lc3MiPkhlYWx0aCwgV2VsbG5lc3MgYW5kIEZpdG5lc3M8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iSGlnaGVyIEVkdWNhdGlvbiI+SGlnaGVyIEVkdWNhdGlvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJIb3NwaXRhbCAmYW1wOyBIZWFsdGggQ2FyZSI+SG9zcGl0YWwgJmFtcDsgSGVhbHRoIENhcmU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iSG9zcGl0YWxpdHkiPkhvc3BpdGFsaXR5PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9Ikh1bWFuIFJlc291cmNlcyI+SHVtYW4gUmVzb3VyY2VzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkluZGl2aWR1YWwgJmFtcDsgRmFtaWx5IFNlcnZpY2VzIj5JbmRpdmlkdWFsICZhbXA7IEZhbWlseSBTZXJ2aWNlczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJJbmZvcm1hdGlvbiBUZWNobm9sb2d5IGFuZCBTZXJ2aWNlcyI+SW5mb3JtYXRpb24gVGVjaG5vbG9neSBhbmQgU2VydmljZXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iSW5zdXJhbmNlIj5JbnN1cmFuY2U8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iSW50ZXJuYXRpb25hbCBBZmZhaXJzIj5JbnRlcm5hdGlvbmFsIEFmZmFpcnM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iTGF3IFByYWN0aWNlIj5MYXcgUHJhY3RpY2U8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iTGVnYWwgU2VydmljZXMiPkxlZ2FsIFNlcnZpY2VzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IkxlaXN1cmUsIFRyYXZlbCAmYW1wOyBUb3VyaXNtIj5MZWlzdXJlLCBUcmF2ZWwgJmFtcDsgVG91cmlzbTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJMb2dpc3RpY3MgYW5kIFN1cHBseSBDaGFpbiI+TG9naXN0aWNzIGFuZCBTdXBwbHkgQ2hhaW48L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iTHV4dXJ5IEdvb2RzICZhbXA7IEpld2VscnkiPkx1eHVyeSBHb29kcyAmYW1wOyBKZXdlbHJ5PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9Ik1hcml0aW1lIj5NYXJpdGltZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJNYXJrZXRpbmcgYW5kIEFkdmVydGlzaW5nIj5NYXJrZXRpbmcgYW5kIEFkdmVydGlzaW5nPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9Ik1lY2hhbmljYWwgb3IgSW5kdXN0cmlhbCBFbmdpbmVlcmluZyI+TWVjaGFuaWNhbCBvciBJbmR1c3RyaWFsIEVuZ2luZWVyaW5nPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9Ik1lZGlhIFByb2R1Y3Rpb24iPk1lZGlhIFByb2R1Y3Rpb248L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iTWVkaWNhbCBQcmFjdGljZSI+TWVkaWNhbCBQcmFjdGljZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJNZW50YWwgSGVhbHRoIENhcmUiPk1lbnRhbCBIZWFsdGggQ2FyZTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJNaWxpdGFyeSI+TWlsaXRhcnk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iTW90aW9uIFBpY3R1cmVzIGFuZCBGaWxtIj5Nb3Rpb24gUGljdHVyZXMgYW5kIEZpbG08L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iTXVzZXVtcyBhbmQgSW5zdGl0dXRpb25zIj5NdXNldW1zIGFuZCBJbnN0aXR1dGlvbnM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iTXVzaWMiPk11c2ljPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9Ik5ld3NwYXBlcnMiPk5ld3NwYXBlcnM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iTm9uLVByb2ZpdCBPcmdhbml6YXRpb24gTWFuYWdlbWVudCI+Tm9uLVByb2ZpdCBPcmdhbml6YXRpb24gTWFuYWdlbWVudDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJPaWwgJmFtcDsgRW5lcmd5Ij5PaWwgJmFtcDsgRW5lcmd5PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9Ik9ubGluZSBNZWRpYSI+T25saW5lIE1lZGlhPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IlBhY2thZ2UvRnJlaWdodCBEZWxpdmVyeSI+UGFja2FnZS9GcmVpZ2h0IERlbGl2ZXJ5PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IlBlcmZvcm1pbmcgQXJ0cyI+UGVyZm9ybWluZyBBcnRzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IlBoaWxhbnRocm9weSI+UGhpbGFudGhyb3B5PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IlBob3RvZ3JhcGh5Ij5QaG90b2dyYXBoeTwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJQcmltYXJ5L1NlY29uZGFyeSBFZHVjYXRpb24iPlByaW1hcnkvU2Vjb25kYXJ5IEVkdWNhdGlvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJQcm9mZXNzaW9uYWwgVHJhaW5pbmcgJmFtcDsgQ29hY2hpbmciPlByb2Zlc3Npb25hbCBUcmFpbmluZyAmYW1wOyBDb2FjaGluZzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJQcm9ncmFtIERldmVsb3BtZW50Ij5Qcm9ncmFtIERldmVsb3BtZW50PC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IlB1YmxpYyBQb2xpY3kiPlB1YmxpYyBQb2xpY3k8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iUHVibGljIFJlbGF0aW9ucyBhbmQgQ29tbXVuaWNhdGlvbnMiPlB1YmxpYyBSZWxhdGlvbnMgYW5kIENvbW11bmljYXRpb25zPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IlB1YmxpYyBTYWZldHkiPlB1YmxpYyBTYWZldHk8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iUHVibGlzaGluZyI+UHVibGlzaGluZzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJSZWFsIEVzdGF0ZSI+UmVhbCBFc3RhdGU8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iUmVjcmVhdGlvbmFsIEZhY2lsaXRpZXMgYW5kIFNlcnZpY2VzIj5SZWNyZWF0aW9uYWwgRmFjaWxpdGllcyBhbmQgU2VydmljZXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iUmVuZXdhYmxlcyAmYW1wOyBFbnZpcm9ubWVudCI+UmVuZXdhYmxlcyAmYW1wOyBFbnZpcm9ubWVudDwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJSZXNlYXJjaCI+UmVzZWFyY2g8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iUmVzdGF1cmFudHMiPlJlc3RhdXJhbnRzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IlJldGFpbCI+UmV0YWlsPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IlNlY3VyaXR5IGFuZCBJbnZlc3RpZ2F0aW9ucyI+U2VjdXJpdHkgYW5kIEludmVzdGlnYXRpb25zPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IlNwb3J0cyI+U3BvcnRzPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IlN0YWZmaW5nIGFuZCBSZWNydWl0aW5nIj5TdGFmZmluZyBhbmQgUmVjcnVpdGluZzwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJUZWxlY29tbXVuaWNhdGlvbnMiPlRlbGVjb21tdW5pY2F0aW9uczwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJUZXh0aWxlcyI+VGV4dGlsZXM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iVHJhbnNsYXRpb24gYW5kIExvY2FsaXphdGlvbiI+VHJhbnNsYXRpb24gYW5kIExvY2FsaXphdGlvbjwvb3B0aW9uPgo8b3B0aW9uIHZhbHVlPSJUcmFuc3BvcnRhdGlvbi9UcnVja2luZy9SYWlscm9hZCI+VHJhbnNwb3J0YXRpb24vVHJ1Y2tpbmcvUmFpbHJvYWQ8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iV2FyZWhvdXNpbmciPldhcmVob3VzaW5nPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9Ildob2xlc2FsZSI+V2hvbGVzYWxlPC9vcHRpb24+CjxvcHRpb24gdmFsdWU9IldpbmUgYW5kIFNwaXJpdHMiPldpbmUgYW5kIFNwaXJpdHM8L29wdGlvbj4KPG9wdGlvbiB2YWx1ZT0iV3JpdGluZyBhbmQgRWRpdGluZyI+V3JpdGluZyBhbmQgRWRpdGluZzwvb3B0aW9uPjwvc2VsZWN0PgogICAgICAgIDxsYWJlbCBjbGFzcz0iZHMtc2VsZWN0LWxhYmVsIiBmb3I9ImluZHVzdHJ5Ij5QcmV2LiBJbmR1c3RyeTwvbGFiZWw+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1tZC1hdXRvIG10LTMgbXQtc20tNCBwcm9maWxlLWZpbHRlci1idXR0b25zIj4KICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tbGcgbXItMSBtci1zbS0yIG1iLTEgbWItc20tMCI+RmlsdGVyPC9idXR0b24+CiAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tbGcgZHMtYnV0dG9uLXNlY29uZGFyeSIgaHJlZj0iLyI+Q2xlYXI8L2E+CiAgICAgIDwvZGl2Pgo8L2Zvcm0+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICA8cCBjbGFzcz0iY29sLTEyIGRzLWZvbnQtbGcgbXktMiBweS0zIj4KICAgICAgICBGb3VuZCAxMzAgZ3JhZHVhdGVzCiAgICAgIDwvcD4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQmVuIExlZSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJtOUZJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1hYjMzZDkxZjRjZWI5OTE3Y2I2YjJhZTUyYWZjZDNhYjE1OTJjYzJjL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL3Byb2ZpbGUlMjBjcm9wcGVkLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQmVuIExlZQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgU29mdHdhcmUgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEJlbiBMZWUiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYmVuZGVsb25sZWUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQmVuIExlZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2JlbmphbWluLWxlZS04NDA2ODgxOCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBCZW4gTGVlIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJuTkZJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0zOWEyNDA5ZWVjOGU5NThmNTBiODc0NTU1MGNlZGRmNzNiMGIxM2MwL3Jlc3VtZS1ibHVlLXNpZGUlMjAyMDIxLTQtMS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBBcyBhIHNvZnR3YXJlIGRldmVsb3BlciwgSSBlbmpveSBoZWxwaW5nIGNvbXBhbmllcyBmaXggYnVncywgYnVpbGQgZmVhdHVyZXMsIGFuZCBnZXQgdGhlaXIgd2ViIGFwcGxpY2F0aW9ucyB1cCBhbmQgcnVubmluZy4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXV0b21hdGVkIFFBCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZpc3VhbCBTdHVkaW8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBdG9tCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBGbHV0dGVyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQaGlsYW50aHJvcHkKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVjcmVhdGlvbmFsIEZhY2lsaXRpZXMgYW5kIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJldGFpbAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS82NzUtYmVuLWxlZSI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIE1hc29uIEZyYW5jZSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJITkdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS00ZDFlYjgxNjk3ZjFlODllMDM1YjgwMzQ4MmIwNzU0NmVkOTRiZTIyL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL1NjcmVlbiUyMFNob3QlMjAyMDIxLTAxLTA2JTIwYXQlMjA5LjA1LjE3JTIwQU0ucG5nIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBNYXNvbiBGcmFuY2UKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIE1hc29uIEZyYW5jZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9mcmFuY2VwYWNrIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIE1hc29uIEZyYW5jZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL21hc29uZnJhbmNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIE1hc29uIEZyYW5jZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJiSGRHSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMzBhYzU1ZjVlZmRjMzZjMDdmMDEzODYzYjFiMzdiY2YwNDI5ZmYwOS9tYXNvbl9mcmFuY2VfMjAyMS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBBcyBhIG11c2ljaWFuIG1ha2luZyBhIGNhcmVlciBjaGFuZ2UgdG8gd2ViIGRldmVsb3BtZW50LCBJIGFwcHJlY2lhdGUgdGhlIHN0cnVjdHVyZSBhbmQgcGF0dGVybnMgb2YgY29kZS4gQ29kaW5nIGlzIGxpa2UgcGllY2luZyB0b2dldGhlciByZXVzYWJsZSBtdXNpY2FsIHBocmFzZXMgY3JlYXRpdmVseSB0byBtYWtlIGEgdW5pcXVlIHNvbmcuIExpa2UgbXVzaWMsIGNvZGUgc2hvdWxkIG5vdCBvbmx5IGJlIGFydGZ1bCBjb25zdHJ1Li4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZhZ3JhbnQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV29yZHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFuZ3VsYXJKUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWdWUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRW50ZXJ0YWlubWVudAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBFZHVjYXRpb24gTWFuYWdlbWVudAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBNdXNpYwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS8yODQtbWFzb24tZnJhbmNlIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQW50b25pbyBGcnkiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQlBRVDA5SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNjIzODA0NWE0ZDA1N2Q0MTJmNWQ2NjRlZGJkNGE3OTFjNjRhZWEyZC9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9BbnRvbmlvLTIwRnJ5LTIwLS0yMEYuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBBbnRvbmlvIEZyeQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQtRW5kIFdlYiBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQW50b25pbyBGcnkiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQW50b25pb0ZyeSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBBbnRvbmlvIEZyeSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2FudG9uaW8tZnJ5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEFudG9uaW8gRnJ5IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCUFVUMDlJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0zZDQ3ZTg5NTRmODBkNzQzYzcxODYyMDA4MTg0N2IzYmZmNzg2YTU2L05ldy0yMFJlc3VtZS0yMC0yODEtMjkucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgQXMgYSBGcm9udC1FbmQgV2ViIERldmVsb3BlciwgSSBlbmpveSBjaGFsbGVuZ2luZyBjb2RlIGFuZCBhbSBkcml2ZW4gdG8gbGVhcm4gb3V0IG9mIGN1cmlvc2l0eS4gTXkgc3Ryb25nZXN0IHNraWxscyBhcmUgd2l0aGluIGRlYnVnZ2luZywgbWFraW5nIGR5bmFtaWMgYW5kIHJlLXVzYWJsZSBjb2RlLCBhcyB3ZWxsIGFzIHBhaXJpbmcuIE15IGhvcGVzIGZvciB0aGUgZnV0dXJlIGFyZSB0byBidWlsZCBhIGNhcmVlciBhcm91bmQgcy4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVzdGF1cmFudHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNjgwLWFudG9uaW8tZnJ5Ij4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgTm9haCBHaWJzb24iIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQldaejA5SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYWZkNmVhM2Y1MjQxNmE5Mzg3NDdkNTJlNGUwOTExZDEwNjA2N2IwZi9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9Ob2FoLTIwR2lic29uLTIwLS0yMEYuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBOb2FoIEdpYnNvbgogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgV2ViIERldmVsb3BlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBOb2FoIEdpYnNvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9OLUdpYnNvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBOb2FoIEdpYnNvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL25vYWgtZ2lic29uLTQ3ODE1MTE5MSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBOb2FoIEdpYnNvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkSE5JSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tOWQ5M2ZlMjlmMzI0YjliOTkzYTJhNTcwNzk3ZTg1NDY5NGI2ZGQ2Yi9SZXN1bWUtMjEucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSBhbSBhIHNvZnR3YXJlIGVuZ2luZWVyIGxvb2tpbmcgdG8gdXRpbGl6ZSBteSBza2lsbHMgYW5kIHBhc3Npb24gZm9yIHRoZSBiZXR0ZXJtZW50IG9mIG15IGNvbW11bml0eS4gQSB3ZWJzaXRlwqBpcyB0aGUgZmlyc3QgcG9pbnQgb2YgY29udGFjdCBmb3IgYSBwb3RlbnRpYWwgY2xpZW50IGFuZCBjcmVhdGluZyBjb21mb3J0YWJsZcKgaW50ZXJmYWNlIHdoZXJlIHVzZXJzIHdpbGwgcmV0dXJuIGlzIGltcGVyYXRpdmUuIEkgYmVsaWV2Li4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFB5dGhvbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQ29uc3RydWN0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJldGFpbAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS8yOTItbm9haC1naWJzb24iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBNaWNoYWVsIFNjaG5laWRlciIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmF6UkdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0yMDEwMGRiMmVlNzhhNTFmOGQ4NmM2YTUxNDEyMjc2MmM5NDU0NTA5L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL1Byb2ZpbGVQaWNNYXJjaC5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIE1pY2hhZWwgU2NobmVpZGVyCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgU29mdHdhcmUgRGVzaWduZXIvRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIE1pY2hhZWwgU2NobmVpZGVyIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21zY2huZWlkZXIyNDciPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgTWljaGFlbCBTY2huZWlkZXIiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9tc2NobmVpZGVyMjQ3Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIE1pY2hhZWwgU2NobmVpZGVyIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFEQkpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS05NTY3OWI4Y2U2OTJhNGMwYTI1NTdjNzkyMWM3YTU4ZWViYmVkMmJmL01pY2hhZWxTY2huZWlkZXIucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgTXkgcGFzc2lvbiBmb3IgZ2FtZXMsIGdyYXBoaWMtZGVzaWduIGFuZCBjbGllbnQgcmVsYXRpb25zaGlwcyBwYWlyIGRpcmVjdGx5IHdpdGggc29mdHdhcmUgZGV2ZWxvcG1lbnQsIHdoZXJlIHRoZSB1c2Vy4oCZcyBleHBlcmllbmNlIGlzIHBhcmFtb3VudC4gSSBiZWNhbWUgaW50ZXJlc3RlZCBpbiBjb2RpbmcgYXMgYSBtZWFucyB0byBhbXBsaWZ5IHRoZSByZWFjaCBvZiBteSBhcnR3b3JrIHRocm91Z2ggd2Vic2l0ZSBkZXNpZ24gYW5kLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0IE5hdGl2ZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWUgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZpc3VhbCBTdHVkaW8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBJbnRlcmZhY2UgRGVzaWduIC8gVUkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBFeHBlcmllbmNlIERlc2lnbiAvIFVYCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFkb2JlIFBob3Rvc2hvcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFuZHJvaWQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQyMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZpbmUgQXJ0CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEdyYXBoaWMgRGVzaWduCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEx1eHVyeSBHb29kcyAmYW1wOyBKZXdlbHJ5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzEyNi1taWNoYWVsLXNjaG5laWRlciI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEplc3NpZSBMZS1IbyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCUVVUMDlJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS05NTlkYjQ4NTZmNDQ1OGY3Mzg0ZTQ0MDM2N2Q5ODQ4NDMzMjJhYzg3L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0ltYWdlLTEuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBKZXNzaWUgTGUtSG8KICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgSmVzc2llIExlLUhvIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2plc3NpZXdpdGhhbmkiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgSmVzc2llIExlLUhvIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vSmVzc2lldGhhbmgwMiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBKZXNzaWUgTGUtSG8iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY1RSR0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTA4NTljYjllMzhkMDRkYjI3ZmU4ZjRlOWFjMjVmZWNmMmM4YTkzZDgvSmVzc2llJTIwTGUtSG8lMjAyMDIxJTIwUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEZyb20gbXkgeWVhcnMgb2YgYmVpbmcgaW4gdGhlIGZvb2QgYW5kIGJlYXV0eSBpbmR1c3RyaWVzLCBJJ3ZlIGNvbWUgdG8gdmFsdWUgZGVzaWduLCBpbm5vdmF0aW9uLCBhbmQgZW1wYXRoeSBmb3Igb3RoZXJzLiBJJ3ZlIGVuam95ZWQgbWFraW5nIGEgc2lnbmlmaWNhbnQgY2FyZWVyIGNoYW5nZSBhbmQgYXBwbHlpbmcgdGhlc2Ugc2tpbGxzIGluIG15IHRlY2ggZWR1Y2F0aW9uIGFuZCBzdWJzZXF1ZW50IHByb2Zlc3Npb25hbCByb2wuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDb3NtZXRpY3MKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNTM5LWplc3NpZS1sZS1obyI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIENvbGluIEtpeW9zaGkgS29nYSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCaWR6MDlJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS01NGMyZjNhNTcyMjViY2VhN2YzNzY5OWZhZTBlNTMxZjM3MzYxZjQ4L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0NvbGluLTIwS29nYS0yMC0tMjBGLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQ29saW4gS2l5b3NoaSBLb2dhCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIENvbGluIEtpeW9zaGkgS29nYSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9ja29nYSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBDb2xpbiBLaXlvc2hpIEtvZ2EiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9jb2xpbi1raXlvc2hpLWtvZ2EiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgQ29saW4gS2l5b3NoaSBLb2dhIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNsbEVJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS05NjBkYmRmY2JiNjU1ZGQxM2EwMTU4OGM0ZTJmYzdmOWNhM2Q2MTUxL0NvbGluJTIwS29nYS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBPbiBteSBwYXRoIG9mIHNlbGYgaW1wcm92ZW1lbnQgYSBjYXJlZXIgY2hhbmdlIGZyb20gcmV0YWlsIHNhbGVzIHdhcyBpbmV2aXRhYmxlIGJ1dCBpdCB0b29rIG1lIGEgbG9uZyB0aW1lIHRvIGRlY2lkZSB3aGF0IGZpdHMgbWUgYmVzdC7CoCBJIGhhdmUgYWx3YXlzIGhhZCBhIHBhc3Npb24gZm9yIHRlY2hub2xvZ3ksIGEgZGVzaXJlIHRvIGNyZWF0ZSwgYW4gYXB0aXR1ZGUgZm9yIGNyaXRpY2FsIHRoaW5raW5nIGFuZCBhIGRyaXZlIC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdCBOYXRpdmUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgalF1ZXJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEplc3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmV0YWlsCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzY4My1jb2xpbi1raXlvc2hpLWtvZ2EiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBBbGxpc29uIFdhZ25lciIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCaFp6MDlJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1jMmI1ZjY4YjdiMTYxOGRjNzk0OTUzNzI2MmEzOTBkZTZkZGEzZjdhL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzU0OTgyMF81NjEzMDEyMjM4OTkxMjVfMTc3NTg5NjA0NV9uLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQWxsaXNvbiBXYWduZXIKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250ZW5kIERldmVsb3BlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBBbGxpc29uIFdhZ25lciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9hbGxpc29uanciPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQWxsaXNvbiBXYWduZXIiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9hbGxpc29uandhZ25lciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBBbGxpc29uIFdhZ25lciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJiRUZFSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tODdmOWYyY2QyNDFmMTBmNTgwOWIxZmU4MzZjZDA3ODg3ZGI1MzlkOS9BbGxpc29uX1dhZ25lci1SZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgVG8gbWUsIGxpZmUgaXMgYSBVbml2ZXJzaXR5IGZ1bGwgb2Yga25vd2xlZGdlLiBNeSBpbnRlcmVzdCBpbiBzb2Z0d2FyZSBkZXZlbG9wbWVudCBpcyBzcGFya2VkIGJ5IG15IHplc3QgZm9yIGxlYXJuaW5nLCBiZWluZyBuYXR1cmFsbHkgY3VyaW91cyBhbmQgZmFzY2luYXRlZCB3aXRoIG5ldyB0ZWNobm9sb2d5LiBJIGhhdmUgb3ZlciAyMCsgeWVhcnMgaW4gY3VzdG9tZXIgc2VydmljZSwgbWFuYWdlbWVudCwgcHJvamVjdCBwbGFubi4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCaXRidWNrZXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QgTmF0aXZlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIGpRdWVyeQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXZWJwYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb2NoYQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEVuenltZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENvbmZsdWVuY2UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWdWUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgR292ZXJubWVudCBBZG1pbmlzdHJhdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQdWJsaWMgUG9saWN5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFB1YmxpYyBTYWZldHkKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvMTM4LWFsbGlzb24td2FnbmVyIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgRnJlZCBSb25kaW5hIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYkhOQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTMwYTY1MTAxOGY3MWVjNDk2ZDBlYzM3MGYyMWU3YmNjOGRlNDE5MWUvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvMC5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEZyZWQgUm9uZGluYQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEZyZWQgUm9uZGluYSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9mcmVkcm9uZGluYTk2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEZyZWQgUm9uZGluYSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2ZyZWQtcm9uZGluYSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBGcmVkIFJvbmRpbmEiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYkVsR0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLThjMTU0Yjg5ZTdjZTZmNzVjNmYzNTU5YTBjNGJmNzQ0NDFkNjQ4YWYvUmVzdW1lTWFyY2gyMDIxLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEFmdGVyIGdyYWR1YXRpbmcgZnJvbSBGbG9yaWRhIFN0YXRlIFVuaXZlcnNpdHkgd2l0aCBhIEJhY2hlbG9ycyBpbiBNYXJrZXRpbmcsIEkgcmVhbGl6ZWQgSSBlbmpveWVkIG1ha2luZyBuZXcgcHJvZHVjdHMgYXMgd2VsbCBhcyBwcm9tb3RpbmcgdGhlbS4gSSBhbSBhIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIG1hcmtldGluZyBhbmQgY3VzdG9tZXIgc2VydmljZSBleHBlcmllbmNlLiBJIFNwZWNpYWxpemUgaW4gRGF0YWJhc2UgYmEuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRG9ja2VyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQWRvYmUgUGhvdG9zaG9wCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFB5dGhvbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRGphbmdvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGaW5hbmNpYWwgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvMzk2LWZyZWQtcm9uZGluYSI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIERhdmlkIEF0a2lucyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQldXYzlJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1jYWQxNmU1YzkxN2Y5NzgxZTNhMGFkZDUyZGM3NGEzODlkYzRmYTlmL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL3BvcnRyYWl0LmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgRGF2aWQgQXRraW5zCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrLUVuZCBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgRGF2aWQgQXRraW5zIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2QtYXRraW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIERhdmlkIEF0a2lucyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2QtYXRraW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIERhdmlkIEF0a2lucyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJiVmxHSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMmE2YWM4NGY0NDZjZWQ4MDRjMWJlNDAzNmE1NmNhYmVmMTFmMWI1Ni9EYXZpZCUyMEF0a2lucy5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJJ20gYW4gQXBwbGllZCBNYXRoZW1hdGljcy9Db21wdXRlciBTY2llbmNlIG1ham9yIHR1cm5lZCB0ZWFjaGVyIHR1cm5lZCBkZXZlbG9wZXIuwqAKaW50ZXJlc3RlZCBpbiBkYXRhIHN0cnVjdHVyZXMgYW5kIGFsZ29yaXRobXMuCkkgbG92ZSBsZWFybmluZywgdGVhY2hpbmcsIGFuZCBidWlsZGluZyB0aGluZ3MuCmFuZCBidWxsZXQgcG9pbnRzLgpNeSBwcmkuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRWxpeGlyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQyMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUHJpbWFyeS9TZWNvbmRhcnkgRWR1Y2F0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzE0NS1kYXZpZC1hdGtpbnMiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBCZW5qYW1pbiBGb3giIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJXbTg5SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tN2RjOGQwNjA4MDUzYmZjNWIwZjE2NDg2MGQ5YWYzOTg5ZDQxN2VmOS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9JTUdfNDMwMC0yMGNvcHlfMS5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBCZW5qYW1pbiBGb3gKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEJhY2sgRW5kIERldmVsb3BlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBCZW5qYW1pbiBGb3giIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYmVuZm94MTIxNiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBCZW5qYW1pbiBGb3giIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9iZW5mb3gxMjE2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEJlbmphbWluIEZveCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkVVZISWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tZGE5N2EyNmUxYTlmOThhZGU3YzIzZWEzYmVhMzcxMDI1NTJkM2IxYS9CZW5qYW1pbiUyMEZveCUyMCgxKS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBBZnRlciBzcGVuZGluZyAyMCB5ZWFycyBpbiBjdXN0b21lciBzZXJ2aWNlIGFuZCBtYW5hZ2VtZW50LCBJJ20gZXhjaXRlZCB0byBiZSBzdGFydGluZyBhIGNhcmVlciBpbiBzb2Z0d2FyZSBkZXZlbG9wbWVudC4gTXkgYnJvdGhlciBoYXMgYmVlbiBhIHNvZnR3YXJlIGRldmVsb3BlciBmb3IgMjAgeWVhcnMsIGFuZCB3YXMgYSBodWdlIGluZmx1ZW5jZSBpbiBnZXR0aW5nIG1lIGludG8gaXQuIEkgZm91bmQgbXlzZWxmIGZhc2NpbmF0Li4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEJhc2gKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZvb2QgJmFtcDsgQmV2ZXJhZ2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZvb2QgUHJvZHVjdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIb3NwaXRhbGl0eQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXN0YXVyYW50cwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXRhaWwKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvMjU3LWJlbmphbWluLWZveCI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEtldmluIE1jR3JldmV5IiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCWjBsQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTg5ZTRlYzRkMmMyNmFkNmRmYzBiMjI3MWZkMWY0ZjJiZDc3ZGY4NzcvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvaGVhZHNob3RfdXRhaF8wLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgS2V2aW4gTWNHcmV2ZXkKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIEVuZ2luZWVyIEJFCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEtldmluIE1jR3JldmV5IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2ttY2dyZXZleSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBLZXZpbiBNY0dyZXZleSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luLyVFMiU4MCU4RWtldmlubWNncmV2ZXklRTIlODAlOEUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgS2V2aW4gTWNHcmV2ZXkiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCWjBsTElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTA2ZWU5NmM5ZTdiMDQ3YzNmNjM1ZGE2Y2FlOTFkYzcxYWNlNmJmZTAvbWNncmV2ZXlfcmVzdW1lXzIxNS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBDcmVhdG9yLiBQcm9ibGVtIFNvbHZlci4gV29ya2VyLsKgIEFzIGEgZm9ybWVyIDNEIGRlc2lnbmVyIHNwZWNpYWxpemluZyBpbiB2aXNpdG9yIGV4cGVyaWVuY2VzLCBJIHNvbGlkaWZpZWQgYSByZXB1dGF0aW9uIGZvciBjb25zaXN0ZW50bHkgZGVsaXZlcmluZyBlZmZlY3RpdmUsIG9uLXRpbWUsIG9uLWJ1ZGdldCBzb2x1dGlvbnMgdG8gcHJvamVjdHMgcmFuZ2luZyBpbiBzY29wZSBmcm9tIG11bmRhbmUgdG8gbXVsdGktbWlsbGlvbi4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCaXRidWNrZXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEJvb3RzdHJhcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBZG9iZSBJbGx1c3RyYXRvcgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDb25mbHVlbmNlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFkb2JlIFBob3Rvc2hvcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBdG9tCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQXJjaGl0ZWN0dXJlICZhbXA7IFBsYW5uaW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIERlc2lnbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBFdmVudHMgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTWFya2V0aW5nIGFuZCBBZHZlcnRpc2luZwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS8zNDAta2V2aW4tbWNncmV2ZXkiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBUeWxlciBUb21saW5zb24iIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhVlZDSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYWM4MDQ5ZWQyNjc4NzI3NDE3OTBmMzU5M2JhNTc2YjMxMTNlYmFhYy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9wcm9maWxlX3BpYy5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBUeWxlciBUb21saW5zb24KICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIERldmVsb3BlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBUeWxlciBUb21saW5zb24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdHlsZXJ0b21saW5zb24iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgVHlsZXIgVG9tbGluc29uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vdHlsZXItdG9tbGluc29uLTY2ODE3NDEzYSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBUeWxlciBUb21saW5zb24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYVZsQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTVmM2M1ZjBmN2Y5MzFjN2U3ZDg3ODQ5ZGZjZTc3N2Q1N2Y4NzZiZDkvUmVzdW1lXzMzLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIENvbXBsZXggcHJvYmxlbS1zb2x2ZXIgd2l0aCBhbiBhbmFseXRpY2FsIGFuZCBnb2FsLW9yaWVudGVkIG1pbmRzZXQuIEkgYW0gZWFnZXIgdG8gY29udHJpYnV0ZSBpbiB0ZWFtIHN1Y2Nlc3MgdGhyb3VnaCBoYXJkIHdvcmssIGF0dGVudGlvbiB0byBkZXRhaWwsIGFuZCBleGNlbGxlbnQgY29tbXVuaWNhdGlvbiBza2lsbHMuIENsZWFyIGFuZCB0aG9yb3VnaCB1bmRlcnN0YW5kaW5nIG9mIFJ1YnksIEphdmFTY3JpcHQsIEhUTUwsIGEuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWVudG9yc2hpcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgaU9TCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQeXRob24KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QgTmF0aXZlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgTm9uZSBsaXN0ZWQKICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83MDAtdHlsZXItdG9tbGluc29uIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQ29saW4gQWxleGFuZGVyIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYUZsQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWVkNWFlNDlhOWUyYzMxNGFjMWIzYTJhY2Q0Mjc5YTdkZThmMjMyMmYvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvNTc3NDk5ODEuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQ29saW4gQWxleGFuZGVyCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrZW5kIFNvZnR3YXJlIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIENvbGluIEFsZXhhbmRlciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9jb2xpbnRhbGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIENvbGluIEFsZXhhbmRlciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2NvbGludGFsZXgiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgQ29saW4gQWxleGFuZGVyIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJVbEZJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0zMTRmYjI1ZWExZjMxMGU4NWNmZmRlNDRjMjRiZjhiZmE0NjQzMjZhL0NvbGluX0FsZXhhbmRlcl9SZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgVGhyb3VnaG91dCBteSBsaWZlIGFuZCB3b3JrLCBJIGhhdmUgYWx3YXlzIGdyYXZpdGF0ZWQgdG93YXJkcyB0aGUgaGFyZGVyIGFuZCBtb3JlIGNvbXBsZXggdGFza3MuIEkgd2FzIHJhaXNlZCBkb2luZyB5YXJkIHdvcmsgb24gU2F0dXJkYXlzLCBhbmQgd2FzIGFsd2F5cyB0YXVnaHQgdGhhdCBtb3N0IHRoaW5ncyBjYW4gYmUgZml4ZWQgd2l0aCBhIGxpdHRsZSBrbm93LWhvdyBhbmQgZWxib3cgZ3JlYXNlLiBJIHRvb2sgbWFueSBvZi4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTZXF1ZWxpemUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9uZ29EQgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOcG0KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHcmFwaFFMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRG9ja2VyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFB5dGhvbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQXV0b21vdGl2ZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDb25zdW1lciBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGb29kICZhbXA7IEJldmVyYWdlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXN0YXVyYW50cwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXRhaWwKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNDE1LWNvbGluLWFsZXhhbmRlciI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIFJ5YW4gQ2FtcCIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQlpYYzlJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1kMThlM2VjZTZkYmM0MjI0OTAxMGFlYWVmY2Y0MGQzNDgzOTYzMTMyL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzI3RTQ2MkRCLTAyNTMtNDhGRC04NjEzLTBGNTY2QTNFMDU5QV8xLmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIFJ5YW4gQ2FtcAogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgU29mdHdhcmUgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgUnlhbiBDYW1wIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2NtcHByZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBSeWFuIENhbXAiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9jYW1wcHJnIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIFJ5YW4gQ2FtcCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjM2RHSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tOWViZDllNGRjZDNiOWU2NWM0M2EyMGE4ZWM3NTY2MTI3Mjg2ZTIxNy9SeWFuJTIwQ2FtcCUyMFJlc3VtZSUyMDMtMjAyMS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBCYWNrZW5kIEVuZ2luZWVyIChSdWJ5LCBSYWlscywgUHl0aG9uLCBEamFuZ28sIFBvc3RncmVzKSB0aGF0IGxvdmVzIHRvIGxlYXJuIG5ldyB0aGluZ3MsIHNvbHZlIHByb2JsZW1zLCBhbmQgbWFrZSB0aGluZ3MgaHVtLiBXaGV0aGVyIHdvcmtpbmcgc29sbyBvciBpbiB0ZWFtcywgSSBhaW0gdG8gZGVzaWduIGFuZCB3cml0ZSBjb2RlIHRoYXQgd2lsbCBtYWtlIGEgcG9zaXRpdmUgaW1wYWN0IGZvciBhIGJ1c2luZXNzIGFuZCB0aGUgLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIERqYW5nbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBBcmNoaXRlY3R1cmUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVnVlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEJvb3RzdHJhcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTGlua2VkSW4KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFB5dGhvbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRmx1dHRlcgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQXZpYXRpb24gJmFtcDsgQWVyb3NwYWNlCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzE3My1yeWFuLWNhbXAiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBSdWJ5IFJpbmtlbiIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQllYTTlJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1hMTdkMGYxZTdlMzkyN2JmNzMxMjVhNzQ2NDIwNGU5NDliMGUwZGRkL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL1J1YnktMjBSaW5rZW4tMjAtLTIwRl8wLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgUnVieSBSaW5rZW4KICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250IEVuZCBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgUnVieSBSaW5rZW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcnVieXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgUnVieSBSaW5rZW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9ydWJ5LXJpbmtlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBSdWJ5IFJpbmtlbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJaMk5GSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNjViNzAzZjkyZjVhYzk0NWI0ZDIwYWRhNWZjMGIwY2UwMDlmYWJlYi9SZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSBhbSBhIGRyaXZlbiwgaGFyZC13b3JraW5nIHNvZnR3YXJlIGRldmVsb3BlciBsb29raW5nIHRvIGNyZWF0ZSBzb2Z0d2FyZSB0aGF0IGJlbmVmaXRzIG90aGVycy4gSSBjb25zdGFudGx5IHNlZWsgbmV3IGNoYWxsZW5nZXMsIHdoZXRoZXIgdGhleSBiZSBzbWFsbCwgc3VjaCBhcyBhIG5ldyBsaWJyYXJ5IHRvIGxlYXJuLCBvciBsYXJnZSwgbGlrZSBhbiBlbnRpcmVseSBuZXcgbGFuZ3VhZ2UgYW5kIGZyYW1ld29yay7CoAoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVYnVudHUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWRpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDb25zdW1lciBFbGVjdHJvbmljcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDb25zdW1lciBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS8xOTEtcnVieS1yaW5rZW4iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBDaGFybGVzIFdlZnNvIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCWmpBOUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTAxYTE4ZTk0ZDdiNDQxMDRmNzgxMzVhYjY1YWU5NDBlZDNhOTA1OWUvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvMF8yMl80MDBfNDAwX0NoYXJsZXMuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBDaGFybGVzIFdlZnNvCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBDaGFybGVzIFdlZnNvIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2N3ZWZzbyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBDaGFybGVzIFdlZnNvIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vY2hhcmxlcy13ZWZzbyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBDaGFybGVzIFdlZnNvIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRqUkhJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1jZmMyMWI1NDVkZjliYTljODcwM2I5NzJhMDc3ZjliYjBjNjlkZmNiL1Jlc3VtZSUyMDQtMjgtMjEucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgUmFpc2VkIGluIHRoZSBCbGFjayBIaWxscyBvZiBTb3V0aCBEYWtvdGEsIEkgbGl2ZWQgYW5kIHdvcmtlZCBhcyBhIHdyaXRlciBpbiBEZW52ZXIgZm9yIHNldmVyYWzCoHllYXJzIGJlZm9yZSBleHBhbmRpbmcgbXkgaG9yaXpvbnMgaW50byB0aGUgd29ybGQgb2Ygc29mdHdhcmUgZGV2ZWxvcG1lbnQuwqBJIGVudGVyZWQgVHVyaW5nIFNjaG9vbCBvZiBTb2Z0d2FyZSBhbmQgRGVzaWduIGluIE1hcmNoIG9mIDIwMjAsIGFuZCBncmFkdWF0Li4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmVsbG8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb2NoYQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEV4cHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHcmFwaFFMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QgTmF0aXZlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFXUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRW50ZXJ0YWlubWVudAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGb29kICZhbXA7IEJldmVyYWdlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBHYW1ibGluZyAmYW1wOyBDYXNpbm9zCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhvc3BpdGFsaXR5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE1hcmtldGluZyBhbmQgQWR2ZXJ0aXNpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUGVyZm9ybWluZyBBcnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJlc3RhdXJhbnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFdyaXRpbmcgYW5kIEVkaXRpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvODYtY2hhcmxlcy13ZWZzbyI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEVkd2luIE1vbnRlYWx2byIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQlp6QkNJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS00NWYwNmFiMGE0ZmNhYzAzZDE3NjYzNDQ2Zjg4MDUzNzM0YjU3MGUxL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL2hlYWRzaG90XzQuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgRWR3aW4gTW9udGVhbHZvCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEVkd2luIE1vbnRlYWx2byIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9lZG1kYyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBFZHdpbiBNb250ZWFsdm8iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9lZG1kYyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBFZHdpbiBNb250ZWFsdm8iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYUhkRklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTViN2VhZmRlNzJjOTA3NDNiZWJhMjVlNDg0NjI3OGE5MDQwODJmNmYvZWRtZGNfdjJfcmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEVudGh1c2lhc3RpYyBzb2Z0d2FyZSBlbmdpbmVlciBzcGVjaWFsaXppbmcgaW4gdGhlIG1vZGVybiBXZWIgZWNvc3lzdGVtIHdpdGggYSBrbmFjayBmb3IgcmVzZWFyY2hpbmcgYW5kIGFkb3B0aW5nIG5ldyB0ZWNobm9sb2dpZXMuIEVxdWlwcGVkIHdpdGggYSBzZW5zZSBvZiBjcmFmdHNtYW5zaGlwLCBJIHNlZWsgdG8gY3JlYXRlIHBsZWFzYW50IGV4cGVyaWVuY2VzIGZvciBib3RoIHVzZXJzIGFuZCBkZXZlbG9wZXJzIGJ5IGFkdm8uLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVmltCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEd1bHAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgWWFybgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWdWUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdlYnBhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmVzdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQVdTCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBMZWlzdXJlLCBUcmF2ZWwgJmFtcDsgVG91cmlzbQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS82OTctZWR3aW4tbW9udGVhbHZvIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgSm9lIEhhZWZsaW5nIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCWjJOQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTRlNTIwZDZiMTAzNDdhMjBlMGVjMWIxOThmZjlhM2NjZmMyZWFlNjEvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvam9lX3Byb2Zlc3Npb25hbC1waG90b18xLmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEpvZSBIYWVmbGluZwogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnRlbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgSm9lIEhhZWZsaW5nIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0pvc2VwaGhhZWZsaW5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEpvZSBIYWVmbGluZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2pvZS1oYWVmbGluZyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBKb2UgSGFlZmxpbmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCWjJkQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWYzZGQ0MzQyYmQzNWQzNzE5NGJlNzk1NzBjZWJkNjcyZjgyMWYzNjIvam9lSGFlZmxpbmdSZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSBhbSBhIGZvcm1lciBzb2NpYWwgd29ya2VyLCBmcm9udCBlbmQgZW5naW5lZXIsIG1lbnRvciwgdGVjaG5pY2FsIGJsb2dnZXIsIG11c2ljaWFuLCBhbmQgYSBmb29kaWUuIFdoZW4gSSBiZWdhbiBleHBsb3Jpbmcgc29mdHdhcmUgZGV2ZWxvcG1lbnQsIEkgcmVhbGl6ZWQgdGhhdCB0aGUgc2tpbGxzIHRoYXQgSSBsZWFybmVkIHByZXZpb3VzbHkgaW4gbXkgbGlmZSB3ZXJlIGdvaW5nIHRvIGJlIGV4dHJlbWVseSBoZWxwZnVsLiBNeS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZXdlYmtpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDaXZpYyAmYW1wOyBTb2NpYWwgT3JnYW5pemF0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEluZGl2aWR1YWwgJmFtcDsgRmFtaWx5IFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE1lbnRhbCBIZWFsdGggQ2FyZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBNdXNpYwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQcm9mZXNzaW9uYWwgVHJhaW5pbmcgJmFtcDsgQ29hY2hpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVjcmVhdGlvbmFsIEZhY2lsaXRpZXMgYW5kIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzQwNC1qb2UtaGFlZmxpbmciPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBCZWNjYSBTdGVpbmJyZWNoZXIiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJZMnM5SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYTNiNWNkYTE1NGY0NjE0NDhkMjE2MzE1NmQzNDBkYmFlYWVlYzkwNS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy8xMTY0MzQ5MTRfMTAyMjMxNDI2NjA5MzM4MDlfNTI1NDYxOTYzNzA0MzE3Mjc2OF9vLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQmVjY2EgU3RlaW5icmVjaGVyCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udCBFbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEJlY2NhIFN0ZWluYnJlY2hlciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9iLXN0ZWluIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEJlY2NhIFN0ZWluYnJlY2hlciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2JlY2NhLXN0ZWluYnJlY2hlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBCZWNjYSBTdGVpbmJyZWNoZXIiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCWTI4OUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTQ5ZjQ4MDkwODEyYjE5YWUwYWJiOTVjY2VjZjRlNDFmODA0YzE4ZDUvQmVjY2EtMjBTdGVpbmJyZWNoZXItMjAtLTIwRkVFXzAucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSdtIGFuIGVuZXJnZXRpYyBhbmQgY29sbGFib3JhdGl2ZSBkZXZlbG9wZXIgd2l0aCBhIHBhc3Npb24gZm9yIGNvbnRpbnVvdXMgaW1wcm92ZW1lbnQuIEkgaGF2ZSBkZXZlbG9wZWQgbnVtZXJvdXMgd2ViIGFuZCBtb2JpbGUgYXBwcywgaGF2ZSBhIGJhY2tncm91bmQgaW4gaHVtYW4gc2VydmljZXMgYW5kIGhlYWx0aCBjYXJlLCBhbmQgc3BlbmQgbW9zdCBvZiBteSBmcmVlIHRpbWUgZWl0aGVyIGluIHRoZSBvdXRkb29ycyBvciB3by4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFbWJlcgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWdWUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmVzdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhlYWx0aCwgV2VsbG5lc3MgYW5kIEZpdG5lc3MKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSG9zcGl0YWwgJmFtcDsgSGVhbHRoIENhcmUKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTm9uLVByb2ZpdCBPcmdhbml6YXRpb24gTWFuYWdlbWVudAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQcmltYXJ5L1NlY29uZGFyeSBFZHVjYXRpb24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNjk0LWJlY2NhLXN0ZWluYnJlY2hlciI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIE1lbGlzc2EgVmFuS2VtcGVuIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCWmtFOUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTQ2MDk5ZWE5NTRmMDM4YmFmYmU5OThjYjQ4MDAzODI0MGQ4MmVjODYvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvTWVsaXNzYVJMRF8xLkpQRyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgTWVsaXNzYSBWYW5LZW1wZW4KICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBTb2Z0d2FyZSBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBNZWxpc3NhIFZhbktlbXBlbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9tZWxpenpvIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIE1lbGlzc2EgVmFuS2VtcGVuIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vbWVsaXNzYXZhbmtlbXBlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBNZWxpc3NhIFZhbktlbXBlbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJaa1U5SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tN2M5YmYyNzliNzA1ZDJjYmE3M2ZjMzU3MWZjMDRlZjlkMzNjMGEwNC9tdmFua2VtcGVuUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEEgdHJ1ZSBwZW9wbGUgcGVyc29uIHRoYXQgZW5qb3lzIGNvZGluZywgaGVscGluZyBhbmQgZW5nYWdpbmcgd2l0aCBvdGhlcnMuIMKgSSd2ZSBsZWFybmVkIHRoYXQgaWYgeW91IGFyZSBhYmxlIHdlbGwgd2l0aCBjb21tdW5pY2F0ZSB3aXRoIG90aGVycywgaHVtYmxlIGFuZCBncmF0ZWZ1bCwgeW91IGFyZSBwcm9uZSB0byBiZSBzdWNjZXNzZnVsIGFnaWxlIGRldmVsb3BlciBhbmQgd2lsbCBkZWxpdmVyIGEgcHJvamVjdCB0aGF0IG5vLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZ1ZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEh1bWFuIFJlc291cmNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS8xMTMtbWVsaXNzYS12YW5rZW1wZW4iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBBbGV4IFBhcmlzZWF1IiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYkZGQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTM4NTdmNmM3YTFkZDAyMzk4OTk4YTcwMjMxMDM1MjRlZWM0NjM5NzEvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvSU1HXzIwMjAwODE0XzE0NDk1NC0yMC0yODEtMjlfMC5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEFsZXggUGFyaXNlYXUKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEJhY2sgRW5kIEVuZ2luZWVyaW5nCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEFsZXggUGFyaXNlYXUiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYXJwYXJpc2VhdSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBBbGV4IFBhcmlzZWF1IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vYWxleGFuZGVyLXBhcmlzZWF1Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEFsZXggUGFyaXNlYXUiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYkZWQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTZlN2QyZjZjNGM5MWNmMDIyYWY1ODVlMjc2MjE3NjAxMGNkYzhhNjMvdHVyaW5nLUlJLXJlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBBcyBzb21lb25lIHdobydzIGFsd2F5cyBoYWQgYSBiYWNrZ3JvdW5kIGFuZCBwYXNzaW9uIGluIHRlY2hub2xvZ3ksIEknbSB3b3JraW5nIHRvd2FyZHMgYmVjb21pbmcgYcKgc29mdHdhcmUgZW5naW5lZXIsIHNwZWNpYWxpemluZyBpbiBiYWNrIGVuZCBkZXZlbG9wbWVudC4gSSd2ZSBhbHdheXMgYmVlbiBzb21lb25lIHdobydzIGJlZW4gZ29vZCB3aXRoIG51bWJlcnMsIGRldGFpbHMgYW5kIGxvZ2ljIGNoYWlucywgYW5kwqBJJ20gbG8uLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQeXRob24KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNjYWxhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIERqYW5nbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDb25zdW1lciBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBPaWwgJmFtcDsgRW5lcmd5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFByaW1hcnkvU2Vjb25kYXJ5IEVkdWNhdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83MDUtYWxleC1wYXJpc2VhdSI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIENoYXNlIEdhZGRpcyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQldVMDlJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1hZDY5YTRkOGRjNmU0NjM0Y2VhYjUwMGM1M2IxNmZhZjc2ZmFkZjdiL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL2hlYWRzaG90XzE4LmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQ2hhc2UgR2FkZGlzCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGdWxsIFN0YWNrIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIENoYXNlIEdhZGRpcyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9jZ2FkZGlzMzYiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQ2hhc2UgR2FkZGlzIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vY2hyaXN0b3BoZXJjZ2FkZGlzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIENoYXNlIEdhZGRpcyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJaMFZMSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tZTVjYzhkODJiNzZhN2E2NmFhY2U1ZmYzYTQ0MDJhZTc4YmFlZGFiMS9jZ2FkZGlzcmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEZ1bGxzdGFjayBlbmdpbmVlciBmb2N1c2VkIGluIG1heGltaXppbmcgZWZmaWNpZW5jeSB0b8KgaGVscCBlbmQtdXNlcidzIGFjaGlldmUgYSBtb3JlwqBlbmpveWFibGUgZXhwZXJpZW5jZSB3aXRoIHRoZWlyIHRlY2hub2xvZ3kgYW5kIGRhdGEuIFBhc3Npb25hdGUgaW4gY3JlYXRpbmcgcGVyc29uYWJsZSBhcHBsaWNhdGlvbnMgdG8gaGVscCBzb2x2ZSBldmVyeWRheSBwcm9ibGVtcy4gQ3VycmVudGx5IGJ1aWxkaW5nIGFuIGFwcGxpYy4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBpT1MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQnVzaW5lc3MgRGV2ZWxvcG1lbnQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQeXRob24KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0IE5hdGl2ZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQ29tcHV0ZXIgU29mdHdhcmUKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTG9naXN0aWNzIGFuZCBTdXBwbHkgQ2hhaW4KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNjg3LWNoYXNlLWdhZGRpcyI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgR3JleXNvbiBFbGtpbnMiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhMDFDSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tOWNiZDhhYWFiMjU1YTViNzk3ZTNhZjExNGY3NzY1ZjNjZWU1YTlmNi9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9wcm9mZXNzaW9uYWwuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBHcmV5c29uIEVsa2lucwogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgU29mdHdhcmUgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgR3JleXNvbiBFbGtpbnMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ3JleXNvbmVsa2lucyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBHcmV5c29uIEVsa2lucyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2dyZXlzb24tZWxraW5zIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEdyZXlzb24gRWxraW5zIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmExRkNJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS01MDUxZGU0ZDI2OWU2MDFlYjk3MmEyNDBhOTA1NWUzYjBjYzk5ZmY5L0dyZXlzb24tMjBFbGtpbnMucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgTXkgb2JzZXNzaW9uIHdpdGggc2lnbmFsIGZsb3cgbWlnaHQgYmUgdGhlIHByaW1hcnkgZHJpdmVyIG9mIG15IGNhcmVlci4gSXQncyBhIHRlcm0gSSBwaWNrZWQgdXAgYXMgYW4gYXVkaW8gZW5naW5lZXIgd2hpY2ggaXMgZ2VuZXJhbGx5IHRhbGtlZCBhYm91dCB3aGVuIHRyb3VibGVzaG9vdGluZy4gSXQgZGVtYW5kcyB0aGUgaGFiaXR1YWwgZXhhbWluYXRpb24gb2YgYSB3YXZlZm9ybXMnIHBhdGggdGhyb3VnaCBhaXIgdG8gYSAuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgWWFybgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBGYWNlYm9vawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUd2l0dGVyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEZpcmVmb3gKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXBwbGUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXZWJwYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZpc3VhbCBTdHVkaW8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTGlua2VkSW4KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmVzdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdvb2dsZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDaHJvbWUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQWRvYmUgUGhvdG9zaG9wCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDKysKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQVdTCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBCcm9hZGNhc3QgTWVkaWEKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRW50ZXJ0YWlubWVudAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBMZWdhbCBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBNZWRpYSBQcm9kdWN0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE11c2ljCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE9ubGluZSBNZWRpYQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQZXJmb3JtaW5nIEFydHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgV3JpdGluZyBhbmQgRWRpdGluZwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83MDMtZ3JleXNvbi1lbGtpbnMiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBSaW9uICZxdW90O0RvcmlvbiZxdW90OyBIdXRzZWxsIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYzJkQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTI0ZDU4ZWQwNjM4MGE1M2YzNDFiNjBkNzJiOTYzYTk2Y2QwNTdlOTcvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvMjEwM0QxQkItMzYwMS00RTlBLTk3MDMtNDUyNTlERDdDNTc4XzFfMTA1X2MuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgUmlvbiAmcXVvdDtEb3Jpb24mcXVvdDsgSHV0c2VsbAogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIFJpb24gJnF1b3Q7RG9yaW9uJnF1b3Q7IEh1dHNlbGwiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vc2NpZW5jZWZpeGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBSaW9uICZxdW90O0RvcmlvbiZxdW90OyBIdXRzZWxsIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vcmlvbi1odXRzZWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIFJpb24gJnF1b3Q7RG9yaW9uJnF1b3Q7IEh1dHNlbGwiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYzJ0Q0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWM4YTFkZTgzZWJhODI4Y2Y0NTYzNzRkOTBiZmFiMjg0NGU3ZmM3NjIvUmlvbi0yMEh1dHNlbGwtMjBSZXN1bWVfMC5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBUaGUgZWFybGllc3QgbWVtb3J5IEkgaGF2ZSBpcyBhIGRlZXAgZGVzaXJlIHRvIGV4cHJlc3MgbXlzZWxmLCBhbmQgdGhlIGFjdXRlIGF3YXJlbmVzcyB0aGF0IGl0wqB3YXMgbm90IGN1cnJlbnRseSBwb3NzaWJsZS4gTGFuZ3VhZ2UsIEkgY291bGQgdGVsbCwgd2FzIGltcG9ydGFudCwgYnV0IEkgZGlkIG5vdCBrbm93IHRoZSBtZWFuaW5nIG9mIGFsbCB0aGUgd29yZHMgSSBoZWFyZC4gQWZ0ZXIgaW50ZXJuYWxpemluZyB0aGUgYmFzaS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFwcGxlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEludGVsbGlKCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmVsbG8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUHl0aG9uCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWaXN1YWwgU3R1ZGlvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZhZ3JhbnQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIExpbnV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEplc3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDb21wdXRlciBIYXJkd2FyZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDb21wdXRlciBTb2Z0d2FyZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBJbmZvcm1hdGlvbiBUZWNobm9sb2d5IGFuZCBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBNZWRpYSBQcm9kdWN0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJldGFpbAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBXcml0aW5nIGFuZCBFZGl0aW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzcxNC1yaW9uLWRvcmlvbi1odXRzZWxsIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQ29yYmluIE1hcmNoIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYnpoR0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWRlMTRhYjI0MTVjZGU2NzYyZmU4OTkzYjg3MTZjMDI3ODRkZjkzNzEvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvQ29yYmluLTYxNzUuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBDb3JiaW4gTWFyY2gKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBDb3JiaW4gTWFyY2giIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vTWFyY2hDb3JiaW4iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQ29yYmluIE1hcmNoIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vbWFyY2hjb3JiaW4iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgQ29yYmluIE1hcmNoIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNFRkdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0yNjBmZTRmMjIwZjkyNDMwODYyZjYyNWJmZTdjZGYyYmQ4ZmE2YzQyL0NvcmJpbiUyME1hcmNoJTIwUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEkgYW0gYSBtb3RpdmF0ZWQgZnJvbnQtZW5kIGdyYWR1YXRlIG9mIFR1cmluZyBzY2hvb2wgb2YgdGVjaG5vbG9neSBhbmQgZGVzaWduLiBXaXRoIGEgYmFja2dyb3VuZCBpbiBtYW5hZ2VtZW50LCBJIGVuam95IHdvcmtpbmcgd2l0aCB0ZWFtcyB0byBzb2x2ZSBpc3N1ZXMgYW5kIG1ha2UgcHJvZHVjdHMgdGhhdCBhcmUgZnVuIGFuZCBpbXBhY3RmdWwuIEkgYW0gYSBmYXN0IGxlYXJuZXIgYW5kIGVuam95IHdvcmtpbmcgd2l0aCBuZXcuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QgTmF0aXZlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZ1ZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FhUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEplc3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIdW1hbiBSZXNvdXJjZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUHVibGljIFBvbGljeQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXN0YXVyYW50cwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXRhaWwKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzIwLWNvcmJpbi1tYXJjaCI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEphbmUgR3JlZW5lIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCWkdNOUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWNlNzQyYmI2ZGE2ZGY2MzY4ZDJlNjk5ZmYwZjllY2FiNTFhN2VmM2QvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvSU1HXzkyNzcuSlBHIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBKYW5lIEdyZWVuZQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgU29mdHdhcmUgRGV2ZWxvcGVyIHwgU2NydW0gTWFzdGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEphbmUgR3JlZW5lIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2phbmVncmVlbmUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgSmFuZSBHcmVlbmUiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9qYW5lLWdyZWVuZS1tYmEiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgSmFuZSBHcmVlbmUiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY1ZGRUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTU3M2QwMDMzMWI3YThkNzhmYzU5MDA5ODBiODgxNWQxOTU3ZTBjY2YvX0phbmUlMjBSZXN1bWUlMjAyMDIxLTMtNSUyMCgyKS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJIGFtIGEgc29mdHdhcmUgZW5naW5lZXIgd2l0aCBhbiBBZ2lsZSBwcm9qZWN0IG1hbmFnZW1lbnQgYmFja2dyb3VuZC4gSSBsb3ZlIGJlaW5nIGEgcGFydCBvZiBjb2xsYWJvcmF0aXZlIHRlYW1zIGFuZCBmaW5kaW5nIGNyZWF0aXZlIHNvbHV0aW9ucyB0byBwcm9ibGVtcy4gU2Vla2luZyBuZXcgd2F5cyB0byBhcHBseSBteSBjcmVhdGl2ZSBkaXNwb3NpdGlvbnMgYW5kIGRlc2lyZSBmb3IgdGVjaG5pY2FsIGxlYXJuaW5nLCBsZWQgLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHb2xhbmcKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEFjY291bnRpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQXV0b21vdGl2ZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBJbmZvcm1hdGlvbiBUZWNobm9sb2d5IGFuZCBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBPaWwgJmFtcDsgRW5lcmd5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzQ2OS1qYW5lLWdyZWVuZSI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIFBoaWxsaXAgU3Ryb20iIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhM2RDSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYjAxZTY2YTQ1NzU5NDU3MDQ5NmNkMDRiZWY2MTQ4YTI1MzBjYWM1Yy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9QaG90b18wLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgUGhpbGxpcCBTdHJvbQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIFBoaWxsaXAgU3Ryb20iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vc3Ryb21weSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBQaGlsbGlwIFN0cm9tIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vcGhpbGxpcHN0cm9tIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIFBoaWxsaXAgU3Ryb20iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYXpCQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTU0OGFlODhjZGJjZGIyNmQ2YjI1NTcxZmVmZDg4YjEzMTE4Y2RiZWYvUGhpbGxpcC0yMFN0cm9tLTIwUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIFdpdGggYSBiYWNrZ3JvdW5kIGluIGNsYXNzaWNhbCBtdXNpYyBhbmQgYnVzaW5lc3MsIEkgYnJpbmcgYSBzdHJvbmcgYmxlbmQgb2YgY3JlYXRpdmUgcHJvYmxlbSBzb2x2aW5nIGFuZCBhbmFseXRpY2FsIHRoaW5raW5nIHRvIG15IHRlYW0uIE15IGJhY2tncm91bmQgaW4gbXVzaWMgbGVuZHMgaXRzZWxmIHRvIHNvZnR3YXJlIGRldmVsb3BtZW50IGJ5IHV0aWxpemluZyBteSBza2lsbHMgb2YgYnJlYWtpbmcgcHJvYmxlbXMgaW50byAuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXV0b21hdGVkIFFBCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBRdWFsaXR5IEFzc3VyYW5jZSAvIFFBCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHcmFwaFFMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE11c2ljCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzQxMS1waGlsbGlwLXN0cm9tIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQXNoa2FuIEFiYmFzaSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRWRkNJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1kM2I5M2JjMzY2YzkyMzk2MGQ4YTFmMGVlYzYwOTRiYTM2Zjg0ZmVhL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0FzaGthbi0yMEFiYmFzaS0yMC0tMjBCXzAuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBBc2hrYW4gQWJiYXNpCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrZW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEFzaGthbiBBYmJhc2kiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQXNoa2FudGhlZ3JlYXQiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQXNoa2FuIEFiYmFzaSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL0FzaGthbiBBYmJhc2kgIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEFzaGthbiBBYmJhc2kiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCZFZWQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTAwOTY5MmE5Yjk3YTdlZDA3MDAzMjM0YTQwYWQwNzNjMjRiNGQ1OGQvQXNoX3Jlc3VtZV8wLlBERiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEFmdGVyIG1vcmUgdGhhbiAxOCB5ZWFycyBpbiB0aGUgbWlsaXRhcnksIEkgd2FudGVkIGEgY2hhbmdlIGluIG15IGNhcmVlciBwYXRoLiDCoEluIHRoZSBtaWxpdGFyeSwgSSBzcGVjaWFsaXplZCBpbiBJbnRlbGxpZ2VuY2UsIENvbW1hbmQgYW5kIENvbnRyb2wsIGFuZCBTcGVjaWFsIE9wZXJhdGlvbnMuIEkgaGF2ZSBhbHdheXMgaGFkIGEgcGFzc2lvbiBmb3IgcHJvYmxlbSBzb2x2aW5nLCBtYXRoLCBhbmQgZ2FkZ2V0cywgYW5kIHRoLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSYWlscwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJlbGxvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgWWFybgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXb3JkcHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRWxpeGlyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFB5dGhvbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHcmFwaFFMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQVdTCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBBdmlhdGlvbiAmYW1wOyBBZXJvc3BhY2UKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgR292ZXJubWVudCBBZG1pbmlzdHJhdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBJbnRlcm5hdGlvbmFsIEFmZmFpcnMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTWlsaXRhcnkKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgU2VjdXJpdHkgYW5kIEludmVzdGlnYXRpb25zCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzM5NC1hc2hrYW4tYWJiYXNpIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgVGFyeW4gTWFydGluIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYWtsQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTQ1MGEzNzkxOGRlYzlhYjRlMTA2ZDNhYzZlYzQ1ZDJiOWUzOTYzMTkvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvUlNQXzQxNTEtMjAtLTIwVGFyeW4tMjBNLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgVGFyeW4gTWFydGluCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udGVuZCBTb2Z0d2FyZSBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBUYXJ5biBNYXJ0aW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGFyeW5tYXJ0aW4iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgVGFyeW4gTWFydGluIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vdGFyeW5tYXJ0aW45MTkiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgVGFyeW4gTWFydGluIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFrMUNJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS03Yzk4ZWM2MWE4ZGQ3NzE3NmE5M2RkMzk4MGNjNDQ2NWMxNDJlOWEwL2Jhc2ljLTIwcmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIE15IGdvYWwgaW4gbGlmZSBpcyB0byBtYWtlIHRoZSB3b3JsZCBhIGJldHRlciBwbGFjZSwgd2hldGhlciB0aGF0IGlzIGhlbHBpbmcgYW4gaW5kaXZpZHVhbCBvciBoZWxwaW5nIG1hbnkgcGVvcGxlIGF0IHRoZSBzYW1lIHRpbWUuIEkgd2FudCB0byBmaW5kIHdheXMgdG8gaGVscCBvdGhlcnMgdGhhdCB1c2VzIG15IHNraWxscyBhbmQgc3RyZW5ndGhzLiBXaXRoIGEgYmFja2dyb3VuZCBpbiBlZHVjYXRpb24sIGh1bWFuIHNlcnZpY2UuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb2NoYQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBMaW5rZWRJbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWVudG9yc2hpcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWdWUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QgTmF0aXZlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIZWFsdGgsIFdlbGxuZXNzIGFuZCBGaXRuZXNzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEluZGl2aWR1YWwgJmFtcDsgRmFtaWx5IFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE1lbnRhbCBIZWFsdGggQ2FyZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQcmltYXJ5L1NlY29uZGFyeSBFZHVjYXRpb24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmV0YWlsCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFNwb3J0cwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS8zMjctdGFyeW4tbWFydGluIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQWxleCBMeW5jaCIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNtdEZJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0xMzAyYjA1ZDY5MWU1MDI5N2E3Yzg3YTA2Mjg1NjNhM2Q2ZmM2MTVhL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0FsZXgyMDE5LnBuZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQWxleCBMeW5jaAogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQWxleCBMeW5jaCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9tbHluY2g1MTg3Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEFsZXggTHluY2giIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9tbHluY2g1MTg3Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEFsZXggTHluY2giIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYkZWSklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWZkM2NkZGNkODZlY2UyMTcyMTI4MzM1ODc0NDIwYmI1NDQ4OWIzZWUvTUFMeW5jaFJlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBBZG1pbmlzdHJhdGl2ZSBwcm9mZXNzaW9uYWwgd2l0aCBleHRlbnNpdmUgc2FsZXMgZXhwZXJpZW5jZSB0dXJuZWQgc29mdHdhcmUgZGV2ZWxvcGVyLiBOb3RoaW5nIGV4Y2l0ZXMgbWUgbW9yZSB0aGFuIG1hc3RlcmluZyBsYW5ndWFnZXMgZnJvbSBGcmVuY2ggdG8gUnVieSBvbiBSYWlscyB0aGVuIHVzaW5nIHRob3NlIGxhbmd1YWdlcyB0byBidWlsZCBxdWFsaXR5IHByb2R1Y3RzIGFuZCByZWxhdGlvbnNoaXBzLiBJIHdvdWxkIGxvLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFbGl4aXIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEV4ZWN1dGl2ZSBPZmZpY2UKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvMjc1LWFsZXgtbHluY2giPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBCZW4gTWNDbHVuZyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFsbERJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS05ZWVkZjJmNDRmZTAyZmRkMzJkOGM3M2RmZTdhOWI1MjdhZjc2NDg1L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0lNR18zMzk4LmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEJlbiBNY0NsdW5nCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQmVuIE1jQ2x1bmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vQXVydW1WYWxpYW4iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQmVuIE1jQ2x1bmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9hdXJ1bXZhbGlhbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBCZW4gTWNDbHVuZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJha2xISWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tZWVlZGI4OWU0ZWY1MGQzNWE5YmNjNTAzMTIyYjRkYjBiYmNhNjA4MC9CZW4lMjBNY0NsdW5nJTIwUmVzdW1lJTIwMjAyMS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJJ20gYSBmcm9udC1lbmQgc29mdHdhcmUgZGV2ZWxvcGVyIHNraWxsZWQgaW4gZnVuY3Rpb25hbCBsb2dpYyBhbmQgZXhjaXRlZCB0byBncm93LiBJIGhhdmUgYSBiYWNrZ3JvdW5kIGluIEJhY2sgb2YgSG91c2UgZm9vZCBzZXJ2aWNlIGFuZCBtYW5hZ2VtZW50LCBtYWtpbmcgdGhlIHN3aXRjaCB0byBwcm9ncmFtbWluZyBhZnRlciBsZWFybmluZyBJIGVuam95ZWQgaXQgZmFyIG1vcmUuIEkgZW5qb3kgdGhlIHByb2JsZW0tc29sdmluLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0IE5hdGl2ZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEplc3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGb29kIFByb2R1Y3Rpb24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzI4LWJlbi1tY2NsdW5nIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgUnlhbiBMYWxlaCIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJsRkNJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1hYzI2NmVmNmE0NjMxZWQ0YzBiMzg5ZDY1MmM4Mzg3NWJkMzE2ODdiL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0lNR182MDY3XzEuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBSeWFuIExhbGVoCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrZW5kIFNvZnR3YXJlIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIFJ5YW4gTGFsZWgiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vUnlOMjEiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgUnlhbiBMYWxlaCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL3J5YW4tbGFsZWgtMGE4MTUxMWE3Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIFJ5YW4gTGFsZWgiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYkUxR0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTFhYjg0NzcyYzBlZTA0NDViODNkODliYjcwNDkzMDRjZTcxMmVlY2YvUllBTiUyMExBTEVIJTIwLSUyMEJhY2tlbmQlMjBTb2Z0d2FyZSUyMEVuZ2luZWVyLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEkgYW0gYSBCYWNrLUVuZCBTb2Z0d2FyZSBFbmdpbmVlcsKgd2l0aCBhIGxvdmUgZm9yIHNvbHZpbmcgY29tcGxleCBwcm9ibGVtcyB0aHJvdWdowqBsb2dpY2FsIGFuZCBjcmVhdGl2ZSB0aGlua2luZy4gSSBoYXZlIGFuIGV4Y2VsbGVudCBleWUgZm9yIGRldGFpbCBhbmQgYmVpbmcgYWJsZSB0byBsb29rIGF0IHByb2JsZW1zIGluIGEgdmFyaWV0eSBvZiB1bmlxdWUgcGVyc3BlY3RpdmVzLiBNeSBnb2FsIGlzIHRvwqBsaXZlIGEgbGlmZSAuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRWxpeGlyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSU3BlYwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSYWlscwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJlbGxvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTbGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdlYnBhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIENvbnN0cnVjdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGaW5lIEFydAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGdXJuaXR1cmUKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmV0YWlsCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzcwNy1yeWFuLWxhbGVoIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgS2F0aHJ5biBKYWNrc29uIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY21OQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTZjYjQ5ZDgzZjUyZTJjYjQ0NjMwZmU4MzEwZTZhZjM4YjhhMzA5MTkvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvaGVhZHNob3RfNy5wbmciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEthdGhyeW4gSmFja3NvbgogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQtRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEthdGhyeW4gSmFja3NvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9rYXRocnlubGphY2tzb24iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgS2F0aHJ5biBKYWNrc29uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4va2F0aHJ5bmxvcnJhaW5laiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBLYXRocnluIEphY2tzb24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCZEVsRUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTlmMDE3ZmVmZWU2YWVlNDRjNDAyMWU0NWY0ODU5ODBmODZhMzgxM2MvS19KYWNrc29uX1Jlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBUZWFjaGVyIHR1cm5lZCBzb2Z0d2FyZSBlbmdpbmVlciHCoEkgZW5qb3kgYXBwbHlpbmcgbXkgeWVhcnMgYXMgYSBjbGFzc3Jvb20gdGVhY2hlciBhcyB3ZWxsIGFzIHVzaW5nIG15IGludGVyZXN0cyBpbiB0ZWNobm9sb2d5LCBrbm93bGVkZ2Ugb2YgY29taWMgYm9va3MsIGFuZCBtdXNpY2FsIGJhY2tncm91bmQgdG8gdHJ5IHRvIHJlYWNoIG5vbnRyYWRpdGlvbmFsIGFuZCBkaXZlcnNlwqB1c2Vycy7CoCBNeSBvYmplY3RpdmUgYXMgYSBwLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0IE5hdGl2ZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVmlzdWFsIFN0dWRpbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJlbGxvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhYVMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTGlua2VkSW4KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWVudG9yc2hpcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE15U1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdvcmRwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFByaW1hcnkvU2Vjb25kYXJ5IEVkdWNhdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQcm9mZXNzaW9uYWwgVHJhaW5pbmcgJmFtcDsgQ29hY2hpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzEyLWthdGhyeW4tamFja3NvbiI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIE5hdGhhbiBEYXJyaW5ndG9uIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY0d0Q0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTJlMzg0NDAyMjhlNzNkMGIwMTdlNmQ3NTAyZTZmNWE0ZWQyNTdiOGUvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvcHJvZmlsZV9waWNfc21hbGwuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBOYXRoYW4gRGFycmluZ3RvbgogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQgRW5kIERldmVsb3BlciB8IEZ1bGwgU3RhY2sgU29mdHdhcmUgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgTmF0aGFuIERhcnJpbmd0b24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vbnBkYXJyaW5ndG9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIE5hdGhhbiBEYXJyaW5ndG9uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vbmF0aGFuZGFycmluZ3RvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBOYXRoYW4gRGFycmluZ3RvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjRzlDSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNzgxMDA5ZjM0NTE2NTdjMmFkM2U0MDM5Y2QwNDY5NTkzOTk4MDY3MS9uZC1yZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSGV5IHRoZXJlISBJJ20gTmF0aGFuIERhcnJpbmd0b24sIFNvZnR3YXJlIEVuZ2luZWVyL0Z1bGwgU3RhY2sgRnJlZWxhbmNlIERldmVsb3Blci4gTXkgcGFzc2lvbiBmb3IgdGhlIHNvZnR3YXJlIGVuZ2luZWVyaW5nIGFuZCBkZXZlbG9wbWVudCBzZWN0b3IgZ3Jvd3MgZXZlcnkgZGF5LiBPbiB0aGUgZnJvbnQgZW5kLCBJIGhhdmUgYnVpbHQgcHJvamVjdHMgd2l0aCBKYXZhU2NyaXB0IEVTNS1FUzEwLCBUeXBlU2NyaXB0LCBQSFAsIC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQSFAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgLk5FVAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBMYXJhdmVsCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEMjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdvcmRwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBqUXVlcnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVnVlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEJvb3RzdHJhcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBJbnRlcmZhY2UgRGVzaWduIC8gVUkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBFeHBlcmllbmNlIERlc2lnbiAvIFVYCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEplc3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWVudG9yc2hpcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTXlTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBMaW5rZWRJbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCdXNpbmVzcyBEZXZlbG9wbWVudAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFbmdpbmVlcmluZyBNYW5hZ2VtZW50CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNlcXVlbGl6ZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ3liZXJzZWN1cml0eQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBbmd1bGFySlMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHcmFwaFFMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0IE5hdGl2ZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQ29tcHV0ZXIgU29mdHdhcmUKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQ29uc3VtZXIgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgR3JhcGhpYyBEZXNpZ24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNTEzLW5hdGhhbi1kYXJyaW5ndG9uIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQ2hyaXN0b3BoZXIgQW50aG9ueSBDYXN0YW51ZWxhIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYzFGQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWVjZTA0ZjAxZmUxZWQ5Y2NjMmRmMzk4YzJhYjBlYmNiYzQyMWNiNzQvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvQ2hyaXN0b3BoZXJDYXN0YW51ZWxhLTMzX0Vhc3ktUmVzaXplLmNvbV8uanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBDaHJpc3RvcGhlciBBbnRob255IENhc3RhbnVlbGEKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250IGVuZCBlbmdpbmVlciB8IE5pY2UgcGVyc29uCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIENocmlzdG9waGVyIEFudGhvbnkgQ2FzdGFudWVsYSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9DaHJpc2Nhc3RhbnVlbGEiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQ2hyaXN0b3BoZXIgQW50aG9ueSBDYXN0YW51ZWxhIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vY2hyaXN0b3BoZXItY2FzdGFudWVsYSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBDaHJpc3RvcGhlciBBbnRob255IENhc3RhbnVlbGEiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYlVsSUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWIyNjdmYTJjMTMwZWQzYTRmMGNjYWIxY2NjODQ4OTY5NWM3NDVjYWEvQ2FzdGFudWVsYV9SZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgVVMgTmF2eSB2ZXRlcmFuIHR1cm5lZCBpbnN1cmFuY2UgYWRqdXN0ZXIgd2hvIGhhcyBhbHdheXMgaGFkIGEgcGFzc2lvbiBmb3IgdGVjaG5vbG9neS7CoEkgZW5qb3kgbGVhcm5pbmcsIGdyb3d0aCwgYW5kIGZpbmRpbmcgc29sdXRpb25zIHRvIHByb2JsZW1zLiBJIHdhbnQgdG8gYmUgdGhlIGJlc3QgZGV2ZWxvcGVyIHRoYXQgSSBjYW4gYmUgc28gbXkgZ29hbCBpcyB0byBiZWNvbWUgdmVyeSB3ZWxsIHJvdW5kZWQgYW5kIGdhaW4gYXMuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXZWJwYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOcG0KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb2NoYQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEV4cHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSW5zdXJhbmNlCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE1pbGl0YXJ5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzcxMy1jaHJpc3RvcGhlci1hbnRob255LWNhc3RhbnVlbGEiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBMb2dhbiBSaWZmZWxsIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYlVGQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWQxYzg4ZGE2YWIwYWQ5YjJhNzA3YjMxMTk2ZDAwNGM4M2Y0NTkzZDMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvU2NyZWVuLTIwU2hvdC0yMDIwMjAtMTItMDktMjBhdC0yMDEwLjE1LjA1LTIwQU0ucG5nIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBMb2dhbiBSaWZmZWxsCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrZW5kIEVuZ2luZWVyaW5nCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIExvZ2FuIFJpZmZlbGwiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vbGtyaWZmZWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIExvZ2FuIFJpZmZlbGwiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9sb2dhbi1yaWZmZWxsIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIExvZ2FuIFJpZmZlbGwiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYlVWQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTYxM2QwMGU0MDhjMmRjNzcxMDA1YmFiOTI1MTk2MzFiMjYxODRkNmIvTG9nYW4tMjBSaWZmZWxsLTIwU29mdHdhcmUtMjBEZXZlbG9wZXItMjBSZXN1bWVfMC5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBIaSwgSSdtwqBMb2dhbiEgSSdtIGEgc29mdHdhcmUgZGV2ZWxvcGVyIHJlY2VudGx5IGdyYWR1YXRlZCBmcm9twqBUdXJpbmcgU2Nob29sIG9mIFNvZnR3YXJlICZhbXA7YW1wOyBEZXNpZ24uIEJlZm9yZSBUdXJpbmcgSSB3YXMgYXR0ZW5kaW5nIGNvbGxlZ2UgYXMgYSBTb2Z0d2FyZSBEZXZlbG9wbWVudCBtYWpvciBhbmQgaGF2ZSBsb3ZlZCBjb2Rpbmcgc2luY2UgSSBzdGFydGVkLiBPbmUgdGhpbmcgSSBsaWtlIGFib3V0IGRldmVsb3BtZW50Li4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmVzdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFB5dGhvbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEVsZWN0cmljYWwvRWxlY3Ryb25pYyBNYW51ZmFjdHVyaW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzIzMi1sb2dhbi1yaWZmZWxsIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgTWljaGFlbCAgV2Fsa2VyIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYnpoQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTBhY2FmZDJjZmIxMDlhYTRmOWMwNzVjYzIwYzRhNDA3NzY1NzJhZTYvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvMzM2OTMuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgTWljaGFlbCAgV2Fsa2VyCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIE1pY2hhZWwgIFdhbGtlciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9NaWNoYWVsRVdhbGtlcjg3Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIE1pY2hhZWwgIFdhbGtlciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL21pY2hhZWwtd2Fsa2VyLTcxOTQ3MTE0MSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBNaWNoYWVsICBXYWxrZXIiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYjBWRUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTQ2MzNjOTUwOGJjOGIwMTk4MjgyMGY3MTQ1N2FmZDAyNzljOGRhMWIvUmVzdW1lX1QucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgTXkgbmFtZSBpcyBNaWNoYWVsIFdhbGtlciwgYW5kIEkgYW0gYSBGcm9udC1FbmQgU29mdHdhcmUgRGV2ZWxvcGVyIGFuZCBQcm9kdWN0IE1hbmFnZXIuIEkgZW5qb3kgd29ya2luZyB3aXRoIGFuZCBtYW5hZ2luZyBncm91cHMgYm90aCBsYXJnZSBhbmQgc21hbGwgYW5kIGF3YXJkZWQgZm9yIG9yZ2FuaXphdGlvbmFsIGFuZCBtYW5hZ2VyaWFsIHNraWxscyBvbiBhIGxvY2FsIGFuZCBuYXRpb25hbCBzY2FsZS4gSSBzdHJpdmUgdG8gdy4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVYnVudHUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVGVjaG5pY2FsIFNhbGVzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhZmFyaQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXaW5kb3dzIDgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRmlyZWZveAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQcm9kdWN0IE1hbmFnZW1lbnQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQWRvYmUgSWxsdXN0cmF0b3IKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIExpbmtlZEluCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEplc3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHb29nbGUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENocm9tZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBZG9iZSBQaG90b3Nob3AKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRW5naW5lZXJpbmcgTWFuYWdlbWVudAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXb3JkcHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVnVlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBEZXNpZ24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRW50ZXJ0YWlubWVudAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGaW5lIEFydAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBHcmFwaGljIERlc2lnbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBJbmZvcm1hdGlvbiBUZWNobm9sb2d5IGFuZCBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBNaWxpdGFyeQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQZXJmb3JtaW5nIEFydHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmV0YWlsCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFRlbGVjb21tdW5pY2F0aW9ucwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS81MTQtbWljaGFlbC13YWxrZXIiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBCcmV0IE1lcnJpdHQiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhVGhKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMGQ4NjAzNzlkZmI1NDcxYWViZmRhOTU3ZmJhZDEwYjdiMGI3N2M3NS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9uZXctcHJvZmlsZS1waWN0dXJlLTA1LTI2LS0xLnBuZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQnJldCBNZXJyaXR0CiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQnJldCBNZXJyaXR0IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2JyZXRtOSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBCcmV0IE1lcnJpdHQiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9icmV0LW1lcnJpdHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgQnJldCBNZXJyaXR0IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRsRkZJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1lOGM2MGMyZGNlMzE1OTQzOTI4MDcwYjVjNzQ2NWJkMTU3NjdkN2U0L2JyZXQtbWVycml0dC1yZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSGV5IHRoZXJlISBJJ20gQnJldCAoaGUvaGltKS4gSSdtIGEgc29mdHdhcmUgZGV2ZWxvcGVyIGRyaXZlbiBieSBjcmVhdGl2aXR5IGFuZCBoaWdobHktZm9jdXNlZCBwcm9ibGVtLXNvbHZpbmcuIApJIGJlbGlldmUgaW4gY29kaW5nIGZvciBnb29kIGFuZCB1c2luZyB0ZWNobm9sb2d5IGFzIGEgZHJpdmluZyBmb3JjZSB0b3dhcmRzIGEgbW9yZSBhY2Nlc3NpYmxlLCBpbmNsdXNpdmUsIGRpdmVyc2UsIGFuZCBwcm9ncmVzc2l2ZSBmLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEMjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIERhcnQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRmx1dHRlcgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDKysKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVnVlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEplc3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhbGVzZm9yY2UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTXlTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdCBOYXRpdmUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQVdTCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDb21wdXRlciBHYW1lcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGb29kICZhbXA7IEJldmVyYWdlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS81MTUtYnJldC1tZXJyaXR0Ij4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgS2F0eSBTdCBTYXV2ZXVyIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYW1kSElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTAxMzFiNTE3YWE5ODAzMjQ5ODViY2U0ZTJhZmM1NjQxNTliNmJjODMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvZnVsbHNpemVvdXRwdXRfMjAuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgS2F0eSBTdCBTYXV2ZXVyCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEthdHkgU3QgU2F1dmV1ciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9rcm9nb3dzazUzMSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBLYXR5IFN0IFNhdXZldXIiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9rcm9nb3dzazUzMSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBLYXR5IFN0IFNhdXZldXIiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYWxsSElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWU3MmFhYzE4OWRkOTBmNTBiZDk4ODUwOWI5YTc4OTEzM2NkYzc3ODkvU0VSZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSBncmV3IHVwIGluIENvbG9yYWRvLCBob3dldmVyIGFmdGVyIGNvbGxlZ2UgSSBtb3ZlZCB0byBBcml6b25hIEkgaGF2ZSBsaXZlZCBmb3Igc2V2ZXJhbCB5ZWFycyBub3cuIEkgaGF2ZSBhIGJhY2tncm91bmQgaW4gZmluYW5jZSBhbmQgdXNlZCB0byB3b3JrIHdpdGggbWFraW5nIEVGVCBwYXltZW50cyB0byB0aGUgSVJTIGZvciBtYW55IHNtYWxsIGJ1c2luZXNzZXMuIEkgZGVjaWRlZCB0aGF0IEkgbmVlZGVkIGEgY2FyZWVyIGNoYS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb25nb0RCCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIExpbnV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXZWJwYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTbGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOcG0KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEV4cHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0IE5hdGl2ZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRmluYW5jaWFsIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE1hcmtldGluZyBhbmQgQWR2ZXJ0aXNpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzExLWthdHktc3Qtc2F1dmV1ciI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIFRpbSBLZXJlc2V5IiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYjBsQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTQ2OTc3OWQwNjIxZDMwMTY4ZDMzMTExNmIyZGRmNWQ4YzI0N2ViYWEvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvMDAxMDBsclBPUlRSQUlUXzAwMTAwX0JVUlNUMjAyMDA5MDcxNTA1MTYyMDdfQ09WRVJfMS5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIFRpbSBLZXJlc2V5CiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBUaW0gS2VyZXNleSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90aW1rZXJlc2V5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIFRpbSBLZXJlc2V5IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vdGltLWtlcmVzZXkiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgVGltIEtlcmVzZXkiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY1VsS0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWZiNTRhOTJjZDQxMGI4NGE3OWM3ZDk4YTRkNWY5NjkzMzM4M2YxYTUvVGltX0tlcmVzZXktUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEkgYW0gYSBzb2Z0d2FyZSBkZXZlbG9wZXIgd2l0aCBhIGhpc3Rvcnkgb2Ygd29yayBpbiBmaWxtLCB2aWRlb2dyYXBoeSwgcGhvdG9ncmFwaHksIGFuZCBkaWdpdGFsIG1hcmtldGluZy4gSW4gbXkganVtcCB0byBiZWNvbWluZyBhIGRldmVsb3BlciwgSSBicmluZyBhIGZhc2NpbmF0aW9uIHdpdGggbWVkaWEgc3R1ZGllcyBhbmQgY29tbXVuaWNhdGlvbiB0aGF0IGNvbnRyaWJ1dGUgdG8gYSBwYXNzaW9uIGZvciBVWCBhbmQgbWFrZSAuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgWWFybgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBGYWNlYm9vawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUd2l0dGVyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNTSAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXb3JkcHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFkb2JlIElsbHVzdHJhdG9yCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWaXN1YWwgU3R1ZGlvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTbGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOcG0KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWFuYWdlbWVudAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBMaW5rZWRJbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR29vZ2xlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ2hyb21lCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFkb2JlIFBob3Rvc2hvcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYWxlc2ZvcmNlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1lbnRvcnNoaXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb25nb0RCCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QgTmF0aXZlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGb29kICZhbXA7IEJldmVyYWdlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBHcmFwaGljIERlc2lnbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIb3NwaXRhbGl0eQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBNZWRpYSBQcm9kdWN0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE1vdGlvbiBQaWN0dXJlcyBhbmQgRmlsbQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBPbmxpbmUgTWVkaWEKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUGhvdG9ncmFwaHkKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVzdGF1cmFudHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNDY1LXRpbS1rZXJlc2V5Ij4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgRXJpYyBIYWxlIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYkZGRElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWM0ZmU4NzliM2JjY2IwYTVlN2I2MmRmYTYzOGY2ZDIxMDVlYWU2MDEvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvMkZFM0JGQ0MtQUQ5QS00MEQ0LTk0MEUtRTdDM0MwNDAxMEUyXzFfMjAxX2EuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgRXJpYyBIYWxlCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrIEVuZCBFbmdpbmVlcmluZwogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBFcmljIEhhbGUiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vRUhhbGU2NCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBFcmljIEhhbGUiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9FcmljIEhhbGUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgRXJpYyBIYWxlIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJGVkRJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1iNjRmZTMzM2ZjOWRmZDM4MjJhOWQwYTZmNDUyYjEzYjc2NTQ2ZmNjL0VyaWNfSGFsZV9SZXN1bWVfMC5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBTZWN1cml0eSBHdWFyZCB0dXJuZWQgc29mdHdhcmUgZW5naW5lZXIuIEFzIGEgYmFja2VuZCBlbmdpbmVlciwgSSBhbSB1c2VkIHRvIHdvcmtpbmcgd2l0aCBsYXJnZSBkYXRhIHNldHMsIEFQSSBjb25zdW1wdGlvbiBhbmQgY3JlYXRpb24sIHdpdGggYSBoZWF2eSBmb2N1cyBvbiBPT1AgcHJpbmNpcGxlcy4gSSBsb3ZlIHdvcmtpbmcgd2l0aCBncm91cHMgd2hpY2ggc2hhcmUgbXkgdmFsdWVzIG9mIGNvbW11bml0eSwgZ3Jvd3RoLCBsLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF1dG9tYXRlZCBRQQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSU3BlYwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSYWlscwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVmlzdWFsIFN0dWRpbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTGlua2VkSW4KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFXUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSG9zcGl0YWxpdHkKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgU2VjdXJpdHkgYW5kIEludmVzdGlnYXRpb25zCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzUwOC1lcmljLWhhbGUiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBKdWRpdGggIFBpbGxhZG8gIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYWpCSUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWVhNTMwODI5YTIxMjIxYTM1NGEyM2QxMjM5NmU2OTRkZGFmYTU2NjYvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvV2hhdHNBcHAlMjBJbWFnZSUyMDIwMjEtMDQtMjUlMjBhdCUyMDEyLjQ4LjU4JTIwUE0uanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgSnVkaXRoICBQaWxsYWRvIAogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgU29mdHdhcmUgRW5naW5lZXIgCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEp1ZGl0aCAgUGlsbGFkbyAiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vanVkaXRocGlsbGFkbyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBKdWRpdGggIFBpbGxhZG8gIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vanVkaXRoLXBpbGxhZG8iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgSnVkaXRoICBQaWxsYWRvICIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhbmRJSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNTgyNTU3OGQ2M2U5M2ZiOTgzNTQwMTQ2YjFlNjJmZDJmMDA3YjU1MS9SZXN1bWUlQ0MlODElMjBTRSUyMC5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJIGFtIGEgcGFzc2lvbmF0ZSBhbmQgaGFyZHdvcmtpbmcgaW5kaXZpZHVhbCB3aG8gd2FudHMgdG8gbWFrZSBhIGRpZmZlcmVuY2UgaW4gdGhlIHdvcmxkIHRocm91Z2ggc29mdHdhcmUgZW5naW5lZXJpbmcuIENsaWNow6kgdG8gYSBjZXJ0YWluIGRlZ3JlZSwgSSBrbm93LCBidXQgSSB2YWx1ZcKgZGl2ZXJzaXR5wqB3aXRoaW4gdGVhbXMsIGFuZCBJIHBsYW4gb24gbWFraW5nIHBvc2l0aXZlIGFuZCB3ZWxsLW5lZWRlZCBjaGFuZ2VzIHdpLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZpc3VhbCBTdHVkaW8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHcmFwaFFMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhvc3BpdGFsICZhbXA7IEhlYWx0aCBDYXJlCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZvb2QgJmFtcDsgQmV2ZXJhZ2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE1lZGljYWwgUHJhY3RpY2UKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUHJpbWFyeS9TZWNvbmRhcnkgRWR1Y2F0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJlc3RhdXJhbnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJldGFpbAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS80NTctanVkaXRoLXBpbGxhZG8iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBFcmljICBCZXJnbHVuZCIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNGRkNJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0xNzFmNTZiYTk2YTZhOTFiMDU5ZWQ0MzM5YmI0ZGEzNGRiYTFkMDk0L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzEwMTcyMF9FcmljQmVyZ2x1bmQtMi5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEVyaWMgIEJlcmdsdW5kCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEVyaWMgIEJlcmdsdW5kIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2VyaWNiZXJnbHVuZDExNyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBFcmljICBCZXJnbHVuZCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2VyaWMtYmVyZ2x1bmQxMTciPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgRXJpYyAgQmVyZ2x1bmQiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYkhORklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTkwZmU4YWY5NWZlMzBlMzZmNGJjMmQ1OGMwOTlhMGE2ZDM5MmU5OGMvUmVzdW1lJTIwU2luZ2xlLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEZvcm1lciBoaWdoIHNjaG9vbCBTb2NpYWwgU3R1ZGllcyB0ZWFjaGVyIHR1cm5lZCBmcm9udC1lbmQgZGV2ZWxvcGVyIGluIERlbnZlciwgQ08uIEkgYW0gYSBwZXJzb27CoHdobyB2aWV3cyBhbnnCoHByb2JsZW0gYXMgYW4gb3Bwb3J0dW5pdHkgdG8gbGVhcm4sIGdyb3csIGFuZCBidWlsZCBjb25uZWN0aW9ucy4gQXMgYSAnZm9yZXZlciBzdHVkZW50IGFuZCB0ZWFjaGVyJywgbXkgZ29hbCBpcyB0byBjcmVhdGUvdXBkYXRlL21haW50YS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCYWJlbAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXZWJwYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZpc3VhbCBTdHVkaW8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhbGVzZm9yY2UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FhcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1lbnRvcnNoaXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0IE5hdGl2ZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRWR1Y2F0aW9uIE1hbmFnZW1lbnQKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSGlnaGVyIEVkdWNhdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBFLUxlYXJuaW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzUwNy1lcmljLWJlcmdsdW5kIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgR2VvcmdlIFNvZGVyaG9sbSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNqQkRJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1lOTMzYjZkYzY4MWEzY2ZiYzI3MWY4N2YzOTYzYThlNTQ4ZDM4M2E4L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0lNR18wNDMxXzAuSlBHIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBHZW9yZ2UgU29kZXJob2xtCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgR2VvcmdlIFNvZGVyaG9sbSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9HZW9yZ2llR2lybDI0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEdlb3JnZSBTb2RlcmhvbG0iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9nZW9yZ2Utc29kZXJob2xtLTA1Nzc2OTQ3Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEdlb3JnZSBTb2RlcmhvbG0iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCZGxGSUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWM5ZGIyMDBmZTdjOTJjZTVhM2UxYjE5NmFiYTY0M2M2MWVjYWJkMzMvR2VvcmdlJTIwU29kZXJob2xtJTIwUmVzdW1lLTIucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSeKAmW0gYmFydGVuZGVyIHR1cm5lZCBTb2Z0d2FyZSBFbmdpbmVlci4gSeKAmXZlIGFsd2F5cyBoYWQgYSBrbmFjayBmb3Igc29sdmluZyBwdXp6bGVzIGFuZCBidWlsZGluZyB0aGluZ3MuIEnigJl2ZSBmb3VuZCB0aGF0IHByb2dyYW1taW5nIGlzIHRoZSBwZXJmZWN0IGNvbWJpbmF0aW9uIG9mIHRoZSB0d28uIEkgaGF2ZSBmb3VuZCB0aGF0IG15IHllYXJzIGluIHRoZSBzZXJ2aWNlIGluZHVzdHJ5IGFyZSBhIGdyZWF0IGFzc2V0IGFzIEkgbC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSU3BlYwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHcmFwaFFMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUHl0aG9uCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQcm9mZXNzaW9uYWwgVHJhaW5pbmcgJmFtcDsgQ29hY2hpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVzdGF1cmFudHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzU1LWdlb3JnZS1zb2RlcmhvbG0iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBDYWxlYiBDeXBoZXJzIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY1ZGQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTgzN2QzODM1ODM5ZWFlMTRlNWM0NGMxMzMyYWM4OTRkNGM4ZjM5NjEvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvSU1HXzEwODgtMjAzLmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIENhbGViIEN5cGhlcnMKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LWVuZCBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQ2FsZWIgQ3lwaGVycyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9DYWxlYkN5cGhlcnMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQ2FsZWIgQ3lwaGVycyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2NhbGViLWN5cGhlcnMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgQ2FsZWIgQ3lwaGVycyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhRzlKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tM2ZmNjMxM2RiZmU5Y2U4YTBmZDRjZjViNTNhM2E0NjY0OTIxZDIzNy9DYWxlYkN5cGhlcnNfcmVzdW1lX01heTIwMjEucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSW4gTWlkZGxlIFNjaG9vbCwgSSBwcm9ncmFtbWVkIGEgdGV4dCBhZHZlbnR1cmUgUlBHIGluIEJBU0lDIG9uIGEgVEktODQgY2FsY3VsYXRvci4gVGhhdCB3YXMgbXkgZmlyc3QgZXhwZXJpZW5jZSB3aXRoIGNvZGUuIEkgc3R1ZGllZCBhcnQgYW5kIGRlc2lnbiB0aHJvdWdoIHNjaG9vbCB3aGlsZSBwcmFjdGljaW5nIGNvZGUgYXMgYSBob2JieS4gTm93LCBJJ20gZGl2aW5nIGludG8gcHJvZ3JhbW1pbmcgYW5kIGZpbmRpbmcgb3V0IC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUd2l0dGVyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIEFyY2hpdGVjdHVyZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQWRvYmUgSWxsdXN0cmF0b3IKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZpc3VhbCBTdHVkaW8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTGlua2VkSW4KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmVzdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFkb2JlIFBob3Rvc2hvcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQyMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QgTmF0aXZlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBBbmltYXRpb24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQXV0b21vdGl2ZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83MTAtY2FsZWItY3lwaGVycyI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIENoYWRyaWNrIERpY2tlcnNvbiIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNFVkNJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS02MTgzN2M5ZWZjYjJhMmUyNDFhMTQwMDVmZTY1YTIxYjhiZGZmMTc0L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL1JNRy0yMDIwMTkuSlBHIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBDaGFkcmljayBEaWNrZXJzb24KICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250IEVuZCBXZWIgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIENoYWRyaWNrIERpY2tlcnNvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9jaGFkcmljay1kLWRldiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBDaGFkcmljayBEaWNrZXJzb24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9jaGFkcmljay1kaWNrZXJzb24iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgQ2hhZHJpY2sgRGlja2Vyc29uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNFbENJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS00NWQ5YjBjYTYzZGY3YjQ1YjVjODc4NjNhMzgwY2Q5OGViOGI3MjNlL0NoYWRyaWNrLTIwRGlja2Vyc29uLTIwLTI4MS0yOS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBSZWNlbnQgVHVyaW5nIEdyYWR1YXRlLCBNYXJjaCAyMDIxLiBDdXJyZW50bHkgb3BlbiB0byB3b3JrLCBzZWVraW5nIG9wcG9ydHVuaXRpZXMgaW4gUUEgVGVzdGluZywgU0RFVCwgRnJvbnQgRW5kIFdlYiBEZXZlbG9wbWVudCwgYW5kIEZ1bGwgU3RhY2sgV2ViIERldmVsb3BtZW50LgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXaW5kb3dzIDgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFwcGxlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZpc3VhbCBTdHVkaW8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUXVhbGl0eSBBc3N1cmFuY2UgLyBRQQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOcG0KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTGlua2VkSW4KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmVzdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBbmd1bGFySlMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZvb2QgJmFtcDsgQmV2ZXJhZ2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhlYWx0aCwgV2VsbG5lc3MgYW5kIEZpdG5lc3MKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmV0YWlsCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzcwOC1jaGFkcmljay1kaWNrZXJzb24iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBEYW5pIENvbGVtYW4iIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjMEZDSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMDM4NmM5ZDBjNmQyZDk0MDcwNmI3YmYzY2I0MjBhMTYxZjM4NTgxMi9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9CODA1QzdCQi00N0EyLTQzQUUtQjZDMC05MjQ2QkFENDU3NEUuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgRGFuaSBDb2xlbWFuCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrIEVuZCBFbmdpbmVlcmluZwogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBEYW5pIENvbGVtYW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZGNvbGVtYW4yMSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBEYW5pIENvbGVtYW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9kY29sZW1hbi0yMSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBEYW5pIENvbGVtYW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYzBWQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWVlNjA4MmJhNjQ3ZWJiMGIxZjE4YjcyMWI0MjE3NjJhZmQ1Yzk0MzUvRGFuaWVsbGVDb2xlbWFuUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIENvbXBhc3Npb25hdGUsIGVtcGF0aGV0aWMgYW5kIGRyaXZlbiBpbmRpdmlkdWFsIHdpdGggYSBwYXNzaW9uIGZvciBmaW5kaW5nIHdheXMgdG8gcmVzdG9yZSBvdXIgbmF0dXJhbCB3b3JsZCB0aHJvdWdoIGVkdWNhdGlvbiBhbmQgdGVjaG5vbG9neS4gTXkgYmFja2dyb3VuZCBpbiBhdGhsZXRpY3MgYW5kIGN1c3RvbWVyIHNlcnZpY2UgcGFyYWxsZWwgdGhlIHdvcmxkIG9mIHRlY2hub2xvZ3kgYmVjYXVzZSB0aGV5IGJvdGggcmVseSAuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUGhvdG9ncmFwaHkKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmV0YWlsCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFNwb3J0cwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS82MDEtZGFuaS1jb2xlbWFuIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgS2V2aW4gQ3VhZHJvcyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRsbENJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1lNjJlODdkODJmNjA5MmMwOGMzMDhiYzgzYTE4NDA3MjUzN2I2MTMxL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0NBNkEwNzNELTQ1Q0YtNDc0Mi05MkZBLUYyRDY0MTRCQjU4Ni5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBLZXZpbiBDdWFkcm9zCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrLUVuZCBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgS2V2aW4gQ3VhZHJvcyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9rZXZ4byI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBLZXZpbiBDdWFkcm9zIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4va2V2aW4tY3VhZHJvcyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBLZXZpbiBDdWFkcm9zIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJGRkZJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS00MDVlNDQ5MTkyY2Y4OGY0MDRiNmM2ODM5MmRmZmQxMDE3YTA1NzNlL0tldmluJTIwQ3VhZHJvcyUyMFJlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJIGFtIGEgYmFjay1lbmQgZGV2ZWxvcGVyLCB3aG8gaXMgZWFnZXIgdG8gbGVhcm4gbmV3IHRlY2hub2xvZ2llcy4gSSB3YW50IHRvIGNvbGxhYm9yYXRlIGFuZCBjcmVhdGUgYXBwbGljYXRpb25zIHRoYXQgY2FuIGhlbHAgdGhlIGNvbW11bml0eS4gSSB3YW50IHRvIGdyb3cgYXMgYSBkZXZlbG9wZXIgYW5kIGFzIGEgcGVyc29uLiBDb2RpbmcgaXMgc29tZXRoaW5nIEkgZW5qb3kgZG9pbmcgYW5kIGl0J3Mgc29tZXRoaW5nIHRoYXQgLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZpc3VhbCBTdHVkaW8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQeXRob24KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZvb2QgJmFtcDsgQmV2ZXJhZ2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzU4OS1rZXZpbi1jdWFkcm9zIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgT2xnYSBNb3JnYW4iIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkVUZDSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMzlkMjY3OWJjNDhiNDdlN2Q4NDkwNmVkNjIyY2U0NDFkYzA1ZGY3OS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9BQzgxOUI0RS1FMDEwLTQyRDItQkRBQy02MTIyRDJDMzFGRDBfMS5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBPbGdhIE1vcmdhbgogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQtRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIE9sZ2EgTW9yZ2FuIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3Njcmlwa2EiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgT2xnYSBNb3JnYW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9vbGdhbW9yZ2FuIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIE9sZ2EgTW9yZ2FuIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRVVkNJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1kYzEyMGM1Y2U4Mjg5ZTE0NTFhMTAyZTE0NWUzMjEzZjhmMjM0YjJjL09sZ2FfUmVzdW1lX1Jlcy5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBBZnRlciB3b3JraW5nIGluIGN1c3RvbWVyIHNlcnZpY2UsIGZpbmFuY2UsIGFuZCBkb2luZyBhcnQgSSBmb3VuZCBteSBwYXNzaW9uIGZvciBGcm9udC1FbmQgZGV2ZWxvcG1lbnQsIGEgc2FuZGJveCB3aGVyZSBJIGNhbiBjaGFsbGVuZ2UgbXlzZWxmIHRvIGNvbWJpbmUgYm90aCB0aGUgbG9naWMgb2YgcHJvZ3JhbW1pbmcgYW5kIHRoZSBiZWF1dHkgb2YgYXJ0IHRvIG1lcmdlIHRoZSB0d28gaW50byBzb21ldGhpbmcgdGhhdCB0cmFuLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNrZXRjaAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQWRvYmUgSWxsdXN0cmF0b3IKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb2NoYQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFkb2JlIFBob3Rvc2hvcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQyMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRDMuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBBY2NvdW50aW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZpbmFuY2lhbCBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS81MzQtb2xnYS1tb3JnYW4iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBNaWtlIEZseW5uIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCZEZsQ0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTIzM2M4NjljZWY3MTQ2YzNhYjZkMTIzYWMwYzI5NDhkOTYwMzViYzMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvV0VCXzEyMjkyMF9NaWtlRmx5bm4tMS5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIE1pa2UgRmx5bm4KICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIE1pa2UgRmx5bm4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vbWRmbHlubiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBNaWtlIEZseW5uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vbWlrZWZseW5ubWJhIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIE1pa2UgRmx5bm4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYkZGSklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWFmNTcyMjZjZTkxMzQyM2E4ZGRiMzFmMzVkMTZiNTY1MGRlNGJkYmEvTWljaGFlbF9GbHlubl9SZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSdtIGEgbGlmZWxvbmcgbGVhcm5lciB3aXRoIGEgcGFzc2lvbiBmb3IgcGVvcGxlLiBJIGxvdmUgYmVpbmcgaW4gYW4gZW52aXJvbm1lbnQgd2hlcmUgZXZlcnlvbmUgaXMgY29sbGFib3JhdGl2ZSBhbmQgd29ya2luZyB0b3dhcmRzIHNvbWV0aGluZyBiaWdnZXIuIEkndmUgYWx3YXlzIGJlZW4gaW50ZXJlc3RlZCBpbiBjb21wdXRlcnMsIGJ1aWxkaW5nIG15IGZpcnN0IG9uZSB3aGVuIEkgd2FzIDE2LiBUaGVzZSBwYXNzaW9ucyBoYS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUZWNobmljYWwgU2FsZXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWaXN1YWwgU3R1ZGlvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOcG0KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb2NoYQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ2hyb21lCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEV4cHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEJhbmtpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUHVibGljIFNhZmV0eQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBUZWxlY29tbXVuaWNhdGlvbnMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNTk0LW1pa2UtZmx5bm4iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBKb3NodWEgQ2FyZXkiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkbEZDSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMmJkNTE1YTcwNzE0NDUzM2NhNDQ4ZWFkMzIzNTNiYWIyOWUyNGRlOC9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9Db3B5LTIwb2YtMjBHRDNBNDcxOS5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBKb3NodWEgQ2FyZXkKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEJhY2stRW5kIFNvZnR3YXJlIERldmVsb3BlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBKb3NodWEgQ2FyZXkiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vamRjYXJleTEyOCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBKb3NodWEgQ2FyZXkiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9jYXJleS1qb3NodWEiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgSm9zaHVhIENhcmV5IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJqaEdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS02NTUwNGZjMTUzODk3OTNlYmU1N2JiZGM0YzBiYjNhODI4YmUzODBhL0pvc2h1YSUyMENhcmV5LnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIERyaXZlbiBieSB2YWx1ZXMgYW5kIHBlb3BsZSwgSSBhbSBlYWdlciB0byBmaW5kIHdheXMgdG8gdXNlIHdlYiBkZXZlbG9wbWVudCB0byBpbXByb3ZlIHRoZSBsaXZlcyBvZiBvdGhlcnMuIEFzIGEgcHJldmlvdXMgZWR1Y2F0b3IsIEkgdmFsdWUgdGhlIHByb2Nlc3Mgb2YgbGVhcm5pbmcsIHNlbGYtYWN0dWFsaXphdGlvbiwgYW5kIGFsdHJ1aXN0aWMgc2VydmljZS4gSW50ZXJlc3RlZCBpbiBmdWxsLXN0YWNrIGRldmVsb3BtZW50LiAKCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVnVlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSYWlscwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUHl0aG9uCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBLdWJlcm5ldGVzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFXUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQmlvdGVjaG5vbG9neQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQcmltYXJ5L1NlY29uZGFyeSBFZHVjYXRpb24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNTk1LWpvc2h1YS1jYXJleSI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIENhbWVyb24gUm9tbyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJGbERJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS03ZjZiYTQ3ZWJkNmUwMmU2ZTMwNWRkMmQzOGU2YTA5MDkxYjJmMzNmL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzYzMDEyOTUzLmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIENhbWVyb24gUm9tbwogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQgRW5kIERldmVsb3BlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBDYW1lcm9uIFJvbW8iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vY2FtZXJvblJvbW8iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQ2FtZXJvbiBSb21vIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vY2FtZXJvbi1yb21vLTY0YjNhNjliIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIENhbWVyb24gUm9tbyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjMWxHSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYjM3NzIwN2M3ODgwYmE5NmVkNWZlZTNhZjA3MWE0MzUyYzFhZWYxMC9DYW1lcm9uJTIwUm9tbyUyMFJlc3VtZSUyMCgyKS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBQYXNzaW9uYXRlwqBwcm9ncmFtbWVyIGxvb2tpbmcgdG8gam9pbiBhIGR5bmFtaWMgdGVhbSB0aGF0IGNhbiBiZW5lZml0IGZyb20gbXkgc2tpbGxzIGluIGZyb250LWVuZCBlbmdpbmVlcmluZyBhbmQgb3RoZXIgdGVjaG5vbG9naWVzLiBJIGFsc28gYnJpbmcgYSB1bmlxdWUgc2V0IG9mIHNraWxscyBmcm9tIHdvcmtpbmcgaW4gYm90aCB0aGUgbWVkaWNhbCBmaWVsZCBhbmQgaW4gYWNjb3VudGluZy4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QgTmF0aXZlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIGlPUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBqUXVlcnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdlYnBhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBFeHBlcmllbmNlIERlc2lnbiAvIFVYCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQWNjb3VudGluZwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIb3NwaXRhbCAmYW1wOyBIZWFsdGggQ2FyZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBUZXh0aWxlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83MzMtY2FtZXJvbi1yb21vIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQ29vcGVyIFRlcnJvbmVzIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY0c5R0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTA2ZTJiMGE0NDhjY2NlYmZkY2FhMDQ3NjVlYWFmZDkzZGM0MmZjMGMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvSGVhZHNob3QucG5nIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBDb29wZXIgVGVycm9uZXMKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBDb29wZXIgVGVycm9uZXMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vY29vcHRlcnJvbmVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIENvb3BlciBUZXJyb25lcyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2Nvb3Blci10ZXJyb25lcy0zOWI1MDgxODUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgQ29vcGVyIFRlcnJvbmVzIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNITkdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS03MTQ0MzdlZTQyZjRkNmI3NzNhZGUxOGQ4MGQxYmY4NmRiOTRhMDI0L2Nvb3BlclJ5dXVuVGVycm9uZXNSZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSB3b3JrIGRhaWx5IGluIEpTLCBSZWFjdCwgSFRNTC9DU1MuIFRlc3QgZHJpdmVuIGRldmVsb3BtZW50IHdpdGggQ3lwcmVzcy4gCk1lcmdpbmcgYSBiYWNrZ3JvdW5kIGluIGJyYW5kaW5nLCBzYWxlcywgYW5kIHNvZnR3YXJlIGRldmVsb3BtZW50LiBJIGhlbHAgYnVpbGQgZWZmZWN0aXZlIHdlYnNpdGVzIGZvciBjbGllbnRzIGFuZCBzY2FsZSBicmFuZHMuCkxldCdzIFdvcmshCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEJlaGFuY2UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQWRvYmUgSWxsdXN0cmF0b3IKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFXUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBZG9iZSBQaG90b3Nob3AKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdCBOYXRpdmUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEFwcGFyZWwgJmFtcDsgRmFzaGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS84MzUtY29vcGVyLXRlcnJvbmVzIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgU2hhd24gVHJ1ZXNkYWxlIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY3pCR0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTJhNjNmMmQyNTA5ZTY4YmZkMmRmYjI0Mjk0YzIwYzNhMmQ2OTgzZDUvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvMDAxMDB0clBPUlRSQUlUXzAwMTAwX0JVUlNUMjAyMDAyMTcxMDAzNTY2MjZfQ09WRVIuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBTaGF3biBUcnVlc2RhbGUKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBTaGF3biBUcnVlc2RhbGUiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vU2hhd250cnUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgU2hhd24gVHJ1ZXNkYWxlIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vc2hhd250cnVlc2RhbGUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgU2hhd24gVHJ1ZXNkYWxlIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRrMUlJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS05MzRiODRjMTMzNWE0NjkxM2RhN2JmNzYwZTdmZDEzNTkyNTQzNjYwL1NoYXduJTIwVHJ1ZXNkYWxlJTIwUmVzdW1lLCUyMFNvZnR3YXJlJTIwRW5naW5lZXIucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSdtIGEgc29mdHdhcmUgZGV2ZWxvcGVyIGFuZCBVUyBOYXZ5IHZldGVyYW4gd2hvIGlzIGluc2F0aWFibHkgY3VyaW91cyBhbmQgbWV0aWN1bG91c2x5IGRldGFpbCBvcmllbnRlZC4gTXkgcGFzc2lvbiBmb3IgYmVpbmcgYSBjcmVhdG9yIGlzIHdoYXQgZHJpdmVzIG1lIHRvIHByb2R1Y2UgZWxlZ2FudCB5ZXQgZW1wYXRoZXRpYyBjb2RlLCB3aXRoIGEgZm9jdXMgb24gc3RyZWFtbGluZWQgYW5kIGltcGFjdGZ1bCB1c2VyIGV4cGVyaS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBBcmNoaXRlY3R1cmUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXZWJwYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOcG0KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmVzdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFkb2JlIFBob3Rvc2hvcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEV4cHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIENvbXB1dGVyIEhhcmR3YXJlCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIENvbXB1dGVyIE5ldHdvcmtpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTWFyaXRpbWUKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTWlsaXRhcnkKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUGhvdG9ncmFwaHkKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvODM3LXNoYXduLXRydWVzZGFsZSI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEpvcmRvbiBTbWl0aCIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJFRkdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS03MjNkYjYwZmUwZjYzOTQyOGUwNGUzNmM0OTk4NDYyZDBjMDhhNjFlL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzc3RTdFMDJDLTExMjAtNEMyQy04OUZFLUVGNUMzODg1MUQyNy5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBKb3Jkb24gU21pdGgKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBKb3Jkb24gU21pdGgiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vamR4c21pdGgiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgSm9yZG9uIFNtaXRoIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vam9yZG9uLXNtaXRoLTY5NzM3YjFiYiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBKb3Jkb24gU21pdGgiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYkVWR0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTBhOGFjZTZhZGVhZTg1MGZiOGYwYjM3NzkwYTBlYWFlZmUwYWZhYTkvT2ZmaWNpYWwlMjBSZXN1bWUlMjAody0lMjBsaW5rcykucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgRHJpdmVuIGFuZCBkZWRpY2F0ZWQgRnJvbnQtRW5kIEVuZ2luZWVyLiAgSSdtIGxvb2tpbmcgZm9yIGEgcm9sZSB3aGVyZSBJIGNhbiBjb250aW51ZSB0byBncm93IHdoaWxlIHdvcmtpbmcgYXMgcGFydCBvZiBhIHRlYW0uIEknbSBleGNpdGVkIGZvciB3aGF0IHRoZSBmdXR1cmUgaG9sZHMgYW5kIGNhbid0IHdhaXQgdG8gc3RhcnQgbWFraW5nIGEgcG9zaXRpdmUgaW1wYWN0IGluIHRoZSB3b3JsZCBvZiB0ZWNoLiAgSW4gbXkgZnJlZS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb2NoYQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFB5dGhvbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUGFja2FnZS9GcmVpZ2h0IERlbGl2ZXJ5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJlc3RhdXJhbnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJldGFpbAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS84MzYtam9yZG9uLXNtaXRoIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgUm9iZXJ0byBCYXN1bHRvIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYUUxRElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTJjNWIyM2JjMjRmOWZlNWMxYWEzNDlmOTFiMjE1OGFiMDE5YjkwZWQvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvMjAxODA3MjZfMTUzOTAzLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgUm9iZXJ0byBCYXN1bHRvCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBSb2JlcnRvIEJhc3VsdG8iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vRXRlcm5hbC1GbGFtZTA4NSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBSb2JlcnRvIEJhc3VsdG8iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9yb2JlcnRvLWJhc3VsdG8iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgUm9iZXJ0byBCYXN1bHRvIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJUaEdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS05ZmVkMDUwNTc3OTgyNDFlMjM4YTgxMDNkN2ExYzBjZDNlODA0MDlhL1JvYmVydG9fQmFzdWx0b19SZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSBhbSBhIHNvZnR3YXJlIGRldmVsb3BlciBhbmQgZ3JhZHVhdGUgb2YgdGhlIFR1cmluZyBTY2hvb2wgb2YgU29mdHdhcmUgYW5kIERlc2lnbi4gSSBwaWNrIHVwIG5ldyBjb25jZXB0cyBxdWlja2x5IGFuZCBjb25zdGFudGx5IHNlZWsgbmV3IG9wcG9ydHVuaXRpZXMgdG8gbGVhcm4gYW5kIGdyb3cuIEkgaGF2ZSBhbHdheXMgYmVlbiBpbnRvIHRlY2hub2xvZ3kgYW5kIHZpZGVvZ2FtZXMsIG15IHBhc3Npb24gZm9yIGJvdGggbGVkIC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHcmFwaFFMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQeXRob24KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFXUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSG9zcGl0YWxpdHkKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVzdGF1cmFudHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzIzLXJvYmVydG8tYmFzdWx0byI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEd1cyBDdW5uaW5naGFtIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY1VsRElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTUwMjNhOTk0MTJiMDc2NGNjYWZlMmI3Y2QwZGY0MzhkYTQyNDRiODMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvcGhvdG9fMS5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBHdXMgQ3VubmluZ2hhbQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjayBFbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEd1cyBDdW5uaW5naGFtIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2N1bm5pbmdoYW1nZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBHdXMgQ3VubmluZ2hhbSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2dyYXlzb24tY3VubmluZ2hhbSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBHdXMgQ3VubmluZ2hhbSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkVzlLSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYzFlY2RkZTBiMjM3ZDkwODZmYmNjMTlhOTkzZDMxYjVkNGRjNTU3My9nY3VubmluZ2hhbV9yZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgRW50aHVzaWFzdGljIGxlYXJuZXIgJmFtcDsgcHJvYmxlbS1zb2x2ZXLCoHBhc3Npb25hdGUgYWJvdXQgdGFraW5nIG9uIG5ldyBjaGFsbGVuZ2VzIGFuZCBkZXZlbG9waW5nIG5ldyBza2lsbHMuIEkgaGF2ZSBhIGJhY2tncm91bmQgaW4gbm9uLXByb2ZpdCB3b3JrLCBhbmTCoHdoaWxlIEknbSBzdGlsbCB0aGUgc3RlYWRmYXN0IGlkZWFsaXN0IHdobyBmaXJzdCBwaWNrZWQgdXAgYSBoYW1tZXIgSSBhbSBub3cgbG9va2luZyB0byBkbyBzb21lIC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTZXF1ZWxpemUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmVzdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBBY2NvdW50aW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIENpdmljICZhbXA7IFNvY2lhbCBPcmdhbml6YXRpb24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQ29uc3RydWN0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZpbmFuY2lhbCBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGdW5kLVJhaXNpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNTM2LWd1cy1jdW5uaW5naGFtIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQ2hyaXN0aW5hIENvb2siIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJja1ZESWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMTNhYjZhZGJkMGMzMjRhNjIwOWQyYWI3Zjk4MGVkZDZiMmNkMjI3OS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9oZWFkc2hvdF8yNi5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIENocmlzdGluYSBDb29rCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRW5naW5lZXIgCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIENocmlzdGluYSBDb29rIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2NocmlzdGluYS1jb29rIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIENocmlzdGluYSBDb29rIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vY29va2NtYyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBDaHJpc3RpbmEgQ29vayIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJaemhKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tN2Q5ZWQ4MGFiNjAzNmZmODJiNGVjZDk3OTA1NjkwZWY0NWRkZWViMC9DaHJpc3RpbmFfQ29va19SZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgQ29tYmluaW5nIGEgYmFja2dyb3VuZCBpbiBqb3VybmFsaXNtIGFuZCBlZHVjYXRpb24gd2l0aCBhIGxvdmUgb2YgbGVhcm5pbmcsIEknbSBhIHNvZnR3YXJlIGRldmVsb3BlciB3aG8gaXMgcGFzc2lvbmF0ZSBhYm91dCBlbmhhbmNpbmcgdGhlIHVzZXIncyBleHBlcmllbmNlLiBJIGVuam95IGxlYXJuaW5nIG5ldyBjb2RpbmcgbGFuZ3VhZ2VzIGFuZCBmcmFtZXdvcmtzIGluIGEgY29sbGFib3JhdGl2ZSBlbnZpcm9ubWVudCBhbmQgYS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBBcmNoaXRlY3R1cmUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEJvb3RzdHJhcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBJbnRlcmZhY2UgRGVzaWduIC8gVUkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBFeHBlcmllbmNlIERlc2lnbiAvIFVYCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEV4cHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYWFzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBdG9tCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgT25saW5lIE1lZGlhCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFByaW1hcnkvU2Vjb25kYXJ5IEVkdWNhdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQdWJsaXNoaW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFdyaXRpbmcgYW5kIEVkaXRpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNjc0LWNocmlzdGluYS1jb29rIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgSm9lIEppYW5nIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY1hkR0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWEyN2FlN2I2Zjk3MzdmMzQxNjQ4ZWM3NmUxZjJhZWQzNDNkZWZmNjEvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvSm9lSmlhbmcyLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgSm9lIEppYW5nCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrLUVuZCBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBKb2UgSmlhbmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vbmluZXNreTAwIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEpvZSBKaWFuZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2pvZS1qaWFuZzAxIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEpvZSBKaWFuZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjVEJHSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tZTM5YmFhMWZjNzYxYjJjOGM4MzZkZTRjYzk3N2E5MjM5N2IyNDUzZS9Kb2UlMjBKaWFuZyUyMFJlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBQYXNzaW9uYXRlIGFib3V0IHByb2JsZW0gc29sdmluZy4gTG92ZSB0byBicmVhayBkb3duIGEgcHJvYmxlbSwgdW5kZXJzdGFuZCBpdCBpbiBwYXJ0cyBhbmQgbWFrZSBpdCBiZXR0ZXIuIEkgaGF2ZSBhIGJhY2tncm91bmQgaW4gbG9naXN0aWNzIHN0YXJ0aW5nIGluIHRoZSBNYXJpbmUgQ29ycHMsIHRoZW4gYSBmaW5hbmNlIGRlZ3JlZS4gUHJldmlvdXNseSB3b3JrZWQgYXQgYW4gaW5zdXJhbmNlIGNhcnJpZXIgdGhhdCBoYWQgb3V0Li4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSU3BlYwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSYWlscwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYWxlc2ZvcmNlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBLdWJlcm5ldGVzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIEFyY2hpdGVjdHVyZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBV1MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZpbmFuY2lhbCBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBJbnN1cmFuY2UKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTG9naXN0aWNzIGFuZCBTdXBwbHkgQ2hhaW4KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvODI2LWpvZS1qaWFuZyI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIFRoYW8gTWEiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjRFJJSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNWM2NWU5ZjM3ZTdlOTkzN2IyYzEyZmIzODkxMzZlZWZmMjYxNGIzZS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9JTUdfMDg1MyUyMGNvcHkuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBUaGFvIE1hCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgVGhhbyBNYSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90aGFvbW9uc3RlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBUaGFvIE1hIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vdGhhby1tYSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBUaGFvIE1hIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJFVkVJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS02OTNhMTAwZGJmMDE3YWYxOWUxNjZmNDg3NjNhZmJkYjMyYmFjZTI3L1RoYW8lMjBNYSYjMzk7cyUyMFJlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBFbmdsaXNoIGlzIG15IHNlY29uZCBsYW5ndWFnZSBhbmQgaXQgaXMgb25lIG9mIHRoZSBtYWluIHJlYXNvbnMgdGhhdCBtb3RpdmF0ZWQgbWUgdG8gYmUgYSBzb2Z0d2FyZSBkZXZlbG9wZXIuIEkgd2FudCB0byBidWlsZCBzb2Z0d2FyZSB0aGF0IGlzIGFjY2Vzc2libGUgYW5kIG15IGdvYWwgaXMgdG8gY3JlYXRlIHNvZnR3YXJlIG9yIHdvcmsgd2l0aCBhIGNvbXBhbnkgdGhhdCBtYWtlcyBwcm9kdWN0cyBmb3IgcGVvcGxlIHdobyBhLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXZWJwYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZpc3VhbCBTdHVkaW8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBJbnRlcmZhY2UgRGVzaWduIC8gVUkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBFeHBlcmllbmNlIERlc2lnbiAvIFVYCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1hbmFnZW1lbnQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmVzdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdvb2dsZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENocm9tZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBEMy5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFXUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSW5kaXZpZHVhbCAmYW1wOyBGYW1pbHkgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTm9uLVByb2ZpdCBPcmdhbml6YXRpb24gTWFuYWdlbWVudAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXN0YXVyYW50cwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXRhaWwKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzQyLXRoYW8tbWEiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBHYWJyaWVsbGUgSm95Y2UiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJia2xESWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNTIzZjgzODFlNTY0NDg2ZjY1N2FlMzc1NjhiYThiMWYxZjAxNzdlYS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9JTUdfMTQzOS5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEdhYnJpZWxsZSBKb3ljZQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgU29mdHdhcmUgRW5naW5lZXIgCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEdhYnJpZWxsZSBKb3ljZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9nYWoyMyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBHYWJyaWVsbGUgSm95Y2UiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9nYWoyMyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBHYWJyaWVsbGUgSm95Y2UiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYWpoRklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTdiMDFlODJmNzFlMzhmZmM3MjBhYjU1MDU1OWU1Nzc3MWU5YjA2OTkvdGVybWluYWwlMjByZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSmFwYW5lc2Utc3BlYWtpbmcgc29mdHdhcmUgZW5naW5lZXIgYW5kIHBhc3Npb25hdGUgYmlyZGVyIHdobyBob3BlcyB0byBhcHBseSB0ZWNobm9sb2d5IHRvwqBwcmVzZXJ2ZSBuYXR1cmUgYW5kIGNvbm5lY3QgcGVvcGxlIHRvIGFwcHMgdGhhdCBpbXByb3ZlIHRoZWlyIHF1YWxpdHkgb2YgbGlmZS4gClRhdWdodCBFbmdsaXNoIGFzIGEgRm9yZWlnbiBMYW5ndWFnZSBpbiBKYXBhbiBmb3IgNSB5ZWFycyAobmVhciBLYW5hemF3YSwuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2ltcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdlYnBhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBJbnRlcmZhY2UgRGVzaWduIC8gVUkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBFeHBlcmllbmNlIERlc2lnbiAvIFVYCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHb29nbGUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEV4cHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDaHJvbWUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWVudG9yc2hpcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEplc3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTXVzZXVtcyBhbmQgSW5zdGl0dXRpb25zCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFByaW1hcnkvU2Vjb25kYXJ5IEVkdWNhdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83MzktZ2FicmllbGxlLWpveWNlIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQWxpYSBQZXRlcnNvbiIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNHZERJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0wM2ViMWE0MDNkYTBiZjBkNzZlNWNlMzQ1MjM1MjYzMTZjNDgxNWFmL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL01lLTIxLmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEFsaWEgUGV0ZXJzb24KICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBTb2Z0d2FyZSBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQWxpYSBQZXRlcnNvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9hbGlhLXBldGVyc29uIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEFsaWEgUGV0ZXJzb24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9hbGlhLXBldGVyc29uIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEFsaWEgUGV0ZXJzb24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCZGxWRElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTUzNDIzZWQzYjViZDdhYzM5OWM3MzI3NjcwNGQzZjZjMmRjMjBjNWYvQWxpYSUyMFBldGVyc29uJTIwUmVzdW1lJTIwMjAyMS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJIGVuam95IGZpbmRpbmcgdGhlIG1vc3QgZWZmaWNpZW50IHdheSB0byBzb2x2ZSBhIHByb2JsZW0gd2hpbGUgY3JlYXRpbmcgYWNjZXNzaWJsZSBhbmQgYXR0cmFjdGl2ZSB3ZWJzaXRlcyBmb3IgdXNlcnMgdG8gZXhwZXJpZW5jZS4gQmVmb3JlIG1ha2luZyBteSBjYXJlZXIgY2hhbmdlIHRvIHdlYiBkZXZlbG9wbWVudCwgSSB3YXMgYSBDaXZpbCBFbmdpbmVlciwgYW5kIGVuam95ZWQgY29sbGFib3JhdGluZyB3aXRoIGEgdGVhbSB0Li4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0IE5hdGl2ZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWdWUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDaHJvbWUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQ2l2aWwgRW5naW5lZXJpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzQ2LWFsaWEtcGV0ZXJzb24iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBZZXNpIE1lemEiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjbmRESWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMmMxZDQwNzYyMGY0Y2Y5MjVmNmE3ZDcxZTI5ODI2MWZiOGMyNTY4NS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9FVkNIRTQ0OTVfMC5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIFllc2kgTWV6YQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFja2VuZCBTb2Z0d2FyZSBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgWWVzaSBNZXphIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL1llc2ktTUMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgWWVzaSBNZXphIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4veWVzaW1lemEiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgWWVzaSBNZXphIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFuZEZJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0zNjY4MmJmMWI5ODdiYTE5YzlkMWNmNjcwY2E1ZmZmNDRjNjliMjUxL1llc2klMjBSZXN1bWUlMjBCRUUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSBhbSBhIGJhY2tlbmQgc29mdHdhcmUgZGV2ZWxvcGVyIGFuZCBoYXZlIGV4cGVyaWVuY2Ugd2l0aCBUREQsIE9PUCBhbmQgVmVyc2lvbiBDb250cm9sLiBJIGhhdmUgYSBiYWNrZ3JvdW5kIGluIGN1c3RvbWVyIHNlcnZpY2UsIHByb3BlcnR5IG1hbmFnZW1lbnQsIGFuZCBlZHVjYXRpb24uIEkgaGF2ZSBhIHRyYWNrIHJlY29yZCBvZiBtb3ZpbmcgdXAgaW4gcm9sZXMgcXVpY2tseSBhbmQgYmVjb21pbmcgYSBjb3JlIG1lbWJlciBvZi4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZpc3VhbCBTdHVkaW8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEplc3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhpZ2hlciBFZHVjYXRpb24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUHJpbWFyeS9TZWNvbmRhcnkgRWR1Y2F0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJldGFpbAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83NTQteWVzaS1tZXphIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgTHVjYXMgTWVyY2hhbnQiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjVkZESWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMDAwNDU5MWQ1NWI1ODE3ZDRmNDI4ZmU3NTg2OTliM2I4YjFlNzA2NC9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9wcm9maWxlLTIwcGljdHVyZV8wLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgTHVjYXMgTWVyY2hhbnQKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgTHVjYXMgTWVyY2hhbnQiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vbGJtZXJjaGFudDkzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEx1Y2FzIE1lcmNoYW50IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vbHVjYXMtbWVyY2hhbnQ5MyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBMdWNhcyBNZXJjaGFudCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjRTFFSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tODM1MDRjNjQ2MzIwM2U0NjUzMTUyMTA0Y2ZkOWZjNGQwZDZlMzVjYi9SZXN1bWUlMjAucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgQW4gb3V0Z29pbmcgYW5kIGVhZ2VyIG5ldyBkZXZlbG9wZXIsIHdobyBpcyBzZWVraW5nIGEgY2hhbGxlbmdpbmcgcm9sZSB3aXRoIGEgdGVhbSB0aGF0IHZhbHVlcyBjb2xsYWJvcmF0aW9uLCBhZ2lsZSBwcm9jZXNzZXMsIGFuZCBkZXZlbG9wZXIgZ3Jvd3RoLiBQYXN0IGV4cGVyaWVuY2UgaGFzIGhlbHBlZCBjcmVhdGUgYW4gYWRhcHRhYmlsaXR5IHRvIHRocml2ZSBpbiBhIGZhc3QgcGFjZWQgd29yayBlbnZpcm9ubWVudC4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVnVlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGb29kICZhbXA7IEJldmVyYWdlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBNZWNoYW5pY2FsIG9yIEluZHVzdHJpYWwgRW5naW5lZXJpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzQ4LWx1Y2FzLW1lcmNoYW50Ij4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQ29ubmllIEhvbmciIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjREJESWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tY2U4OTgwYTNjNzQ5NWQxZWQ0ODUwMTY0MWQzNWM3M2VmYmU4YjlhZi9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9Db25uaWUtMjBIb25nLTIwSGVhZHNob3QtMjBDcm9wLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQ29ubmllIEhvbmcKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIERldmVsb3BlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBDb25uaWUgSG9uZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9jb25jb25hcnRpc3QiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQ29ubmllIEhvbmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9jb25uaWUtaC1ob25nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIENvbm5pZSBIb25nIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFFVkxJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1lNGFiYzIxMDI1MmNjNzU4NDczMjIzZmJmYzM3ZjcyNzM4NzJmZjAwL0Nvbm5pZSUyMEhvbmctJTIwU29mdHdhcmUlMjBEZXZlbG9wZXIlMjBSZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgRXhwZXJpZW5jZWQgbXVzaWNpYW4sIHNpbmdlci1zb25nd3JpdGVyLCBhbmQgY3JlYXRpdmUgdGhpbmtlci4gSSBzdHJpdmUgdG8gZmluZCBiZWF1dHkgYW5kIGFydGlzdGljIGV4cHJlc3Npb24gaW4gZXZlcnl0aGluZyBJIGRvLCBzbyBwcm9ncmFtbWluZyBpcyBubyBleGNlcHRpb24uIFJlY2VudCB3b3JsZCBhbmQgbGlmZSBldmVudHMgYWZmb3JkZWQgbWUgdGhlIG9wcG9ydHVuaXR5IHRvIGJlZ2luIGEgY2FyZWVyIGluIHNvZnR3YS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBJbmtzY2FwZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUd2l0dGVyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdvcmRwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBEMy5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTGlua2VkSW4KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENocm9tZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBdG9tCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE15U1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUHl0aG9uCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBBcHBhcmVsICZhbXA7IEZhc2hpb24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQXJ0cyBhbmQgQ3JhZnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEVudGVydGFpbm1lbnQKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTXVzaWMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUGVyZm9ybWluZyBBcnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFByaW1hcnkvU2Vjb25kYXJ5IEVkdWNhdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXRhaWwKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzQ3LWNvbm5pZS1ob25nIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgRXJpYyAgQ2FtcGJlbGwiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhR05JSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMDU0ZTEzMTRlY2RjZWY1YTEyNDY4NDI2NzIwYmU4YjZlN2U1ZmM2Ni9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9wcm9mX2ZhY2VzaG90LnBuZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgRXJpYyAgQ2FtcGJlbGwKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZ1bGwgU3RhY2sgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgRXJpYyAgQ2FtcGJlbGwiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vbWFpbmx5ZXRjZXRlcmEiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgRXJpYyAgQ2FtcGJlbGwiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9lcmljLWNhbXBiZWxsLTMyNTg0NzE5YSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBFcmljICBDYW1wYmVsbCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhR3RJSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNzAzOGY0ZWJkMGIxZmJiYzgxMzk4NDJiYzk0ODFhOWJjMjBmZDQ0Mi9yZXN1bWVfMjAyMS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBXaGF0IEkgbGlrZWQgYWJvdXQgbXVzaWM6IGNyZWF0aXZpdHkuIFdoYXQgSSBsaWtlZCBhYm91dCBiYW5raW5nOiBoaWdoLXN0YWtlcywgc29sdXRpb25zLWRyaXZlbiBlbnZpcm9ubWVudC4KV2hhdCBJIGRpZG4ndCBsaWtlOiBpbXBvc3NpYmxlIHRvIHN1c3RhaW4gYSBsaWZlc3R5bGUuCldoeSBzb2Z0d2FyZTogZXZlcnl0aGluZyBJIGxpa2VkIGJlZm9yZSBhbG9uZyB3aXRoIHN1c3RhaW5pbmcgYSBoZWFsdGh5IGxpZmVzLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEV4cHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBEb2NrZXIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9uZ29EQgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQeXRob24KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQmFua2luZwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBNdXNpYwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS84NDMtZXJpYy1jYW1wYmVsbCI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEFsaWNlIFJ1cHBlcnQiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJiVlZFSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMmNlNjRjMDcxOTExYzlmYzcxMGQ5MzJjMWRhNTYyN2Y2YjA4OWQ5Yy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9EU0NGMDU4MS1FbmhhbmNlZC1FZGl0LmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQWxpY2UgUnVwcGVydAogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQtRW5kIERldmVsb3BlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBBbGljZSBSdXBwZXJ0IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3Nyc2xpZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBBbGljZSBSdXBwZXJ0IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vYWxpY2VydXBwZXJ0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEFsaWNlIFJ1cHBlcnQiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYzI5RElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTVlNDE2NmJlZWI1M2YwYTZhOGFkZTNjNTU4NTFjNzRiMmY4OTNhZmIvUmVzdW1lJTIwLSUyMEFsaWNlJTIwUnVwcGVydC5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICDwn5GL8J+PvSBIaSwgSSBsb29rIGZvcndhcmQgdG8gY29ubmVjdGluZyB3aXRoIHlvdSEg8J+knQpJJ20gYW4gaW5xdWlzaXRpdmUgc29mdHdhcmUgZW5naW5lZXIgd2hvJ3MgZWFnZXIgdG8gZ3JvdyBhbmQgY29udHJpYnV0ZS4KRm9jdXNlZCBvbiB0YW5naWJsZSBwcm9ibGVtLXNvbHZpbmcgYW5kIGNvbnRpbnVlZCBsZWFybmluZywgSSdtIGV4Y2l0ZWQgYnkgbm92ZWwgaW1wbGVtZW50YXRpb25zIG9yIGAuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRmFjZWJvb2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTGludXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRmlyZWZveAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWaXN1YWwgU3R1ZGlvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIExpbmtlZEluCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR29vZ2xlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENocm9tZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNZW50b3JzaGlwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmVzdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhlYWx0aCwgV2VsbG5lc3MgYW5kIEZpdG5lc3MKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSG9zcGl0YWxpdHkKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUHJpbWFyeS9TZWNvbmRhcnkgRWR1Y2F0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzUyNS1hbGljZS1ydXBwZXJ0Ij4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQ29sZSBGaXNjdXMiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjVEJISWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tOTFlODU1ZTIzYjIzNTlkN2Q5YjAxNjFlMzY3NGRhMGM4ZjlhYjI3Yi9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9Qcm9maWxlX1BpYy5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBDb2xlIEZpc2N1cwogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQtRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIENvbGUgRmlzY3VzIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2NvbGVmaXNjdXMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQ29sZSBGaXNjdXMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9jb2xlZmlzY3VzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIENvbGUgRmlzY3VzIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRXOUlJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS02MTYwY2M4N2FkMWVmZTJmMTIwODEzYWRkMDM2YTVmYmQ2Y2YxYWE0L0Zpc2N1c19Db2xlX1Jlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJIHNwZW50IG9uZSB5ZWFyIGltbWVyc2VkIGluIHVyYmFuIEVjdWFkb3IgbGVhcm5pbmcgU3BhbmlzaCBvbiB0aGUgZmx5IGFuZCBmb3JnaW5nIGNvbm5lY3Rpb25zIGluIG15IGxvY2FsIGNvbW11bml0eS4KSSBzcGVudCBvbmUgeWVhciBhc3Npc3RpbmcgcmVjZW50IGltbWlncmFudHMgYXNzaW1pbGF0ZSBpbnRvIEJvc3RvbiwgTUEuCkkgY29tcGxldGVkIHRlbiBtb250aHMgb2YgcmFjaWFsIGp1c3RpY2UgZm9jdXNlZCBwLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZ1ZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWaXN1YWwgU3R1ZGlvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTGlua2VkSW4KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHb29nbGUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSW5kaXZpZHVhbCAmYW1wOyBGYW1pbHkgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUHJvZ3JhbSBEZXZlbG9wbWVudAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXRhaWwKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvODQwLWNvbGUtZmlzY3VzIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgSmVmZiBLZXJzdGluZyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJGVkZJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS03ZTExZjUwMDdiNWZiNTQ3M2NmODU1N2Q4Yzc0YWM4YWI1NWY0YmJlL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL2hlYWRzaG90LmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgSmVmZiBLZXJzdGluZwogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQtRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEplZmYgS2Vyc3RpbmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vSmVmZktlcnN0aW5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEplZmYgS2Vyc3RpbmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9qZWZmLWtlcnN0aW5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEplZmYgS2Vyc3RpbmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYkZsRklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTFjNjhlZTc1YTNmZDI5YzNkZjlhMGRiZDA5ZDA3NTQ3NDhmZWViZTgvSktlcnN0aW5nUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEkgYW0gYSBmcm9udCBlbmQgZGV2ZWxvcGVyIHdpdGggNyB5ZWFycyBleHBlcmllbmNlIHdvcmtpbmcgaW4gdGVhbXMgYW5kIHVuZGVyIHRpZ2h0IGRlYWRsaW5lcy4gSSBoYXZlIGEgcGFzc2lvbiBmb3IgcHV6emxlLXNvbHZpbmcgYW5kIGNvbnRpbnVvdXMgZWR1Y2F0aW9uLiBJIGFpbSB0byBicmluZyB1bmlxdWUgcGVyc3BlY3RpdmVzIGFuZCBhcHByb2FjaGVzIHRvIHByb2JsZW0gc29sdmluZywgd2hpbGUgYWJzb3JiaW5nIGFzIG0uLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEFjY291bnRpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQ29uc3RydWN0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzgxNi1qZWZmLWtlcnN0aW5nIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgUm9iZXJ0IEhlYXRoIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCWjI5SElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWQ0ODcyYTI3YWYwYmZhMDJhY2NjNzNlYzFiZTFmOGQwZDgzMDI2YjEvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvMTZHUFMyNzIyLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgUm9iZXJ0IEhlYXRoCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrZW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIFJvYmVydCBIZWF0aCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9rYWloZWlvbmdha3UiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgUm9iZXJ0IEhlYXRoIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vcm9iZXJ0LWhlYXRoLWlpIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIFJvYmVydCBIZWF0aCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJaM05ISWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNGFlOTFkMmY3OWMzNThmNTNkMmEwMDExNjg4ODFjMDBiZTZmNjA5Mi9SSGVhdGglMjBSZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSBsb3ZlIGJyaW5naW5nIHBlb3BsZSB0b2dldGhlciwgd2hldGhlciBpdCdzIGZvciBhIGdyZWF0IGNvbmNlcnQgb3IgdGhyb3VnaCBzb2Z0d2FyZS4gIEkgaGF2ZSBvdmVyIDE1IHllYXJzIG9mIG1pbGl0YXJ5IG11c2ljIGV4cGVyaWVuY2Ugd2l0aCB0b3VycyBpbiBib3RoIFdlc3QgVmlyZ2luaWEgKEFybXkgTmF0aW9uYWwgR3VhcmQpIGFuZCBTb3V0aGVhc3QgQXNpYSAoVVMgTmF2eSkuIFRocm91Z2ggYWxsIHRoYXQgdGltZSwgSS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBbmd1bGFySlMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQWRvYmUgUGhvdG9zaG9wCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUHJvZHVjdCBNYW5hZ2VtZW50CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBNaWxpdGFyeQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBNdXNpYwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQdWJsaWMgUG9saWN5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzExMS1yb2JlcnQtaGVhdGgiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBBbGxpc29uIERpZXR6IiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY205RElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWQ2MDkxYjdmMjAyNzIyMDZlMTBkOTg3NjBlODI5ZTA0M2Q1ZTk3MmIvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvbWFyY2hIZWFkc2hvdDQuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBBbGxpc29uIERpZXR6CiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQWxsaXNvbiBEaWV0eiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9kaWV0emEiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQWxsaXNvbiBEaWV0eiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2FsbGlzb24tZGlldHoiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgQWxsaXNvbiBEaWV0eiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkbXRISWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYjkzMWZhYzRiYjViMWY2ZmE0YTgxMDg3MzI2NDMzMzk2MDUyMGQxYy9BLkRJRVRaJTIwLSUyMEZFRSUyMFJlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJIGFtIGEgZnJvbnQtZW5kIGRldmVsb3BlciB3b3JraW5nwqB0b3dhcmQgdGFuZ2libGUgc29sdXRpb25zIHRvIGNvbXBsZXggcHJvYmxlbXMuIEFmdGVyIDEwK3lycyBkZXNpZ25pbmcgYW5kIGJ1aWxkaW5nIGN1c3RvbSBmcmFtaW5nIHNvbHV0aW9ucyBmb3IgY29udGVtcG9yYXJ5IGZpbmUgYXJ0d29yaywgSSBkZXRlcm1pbmVkIHRoYXQgSSBjb3VsZCBmaW5kIGEgc2ltaWxhciBzYXRpc2ZhY3Rpb24gZGVzaWduaW5nIGFuZCBidWlsZC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWdWUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdlYnBhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVmlzdWFsIFN0dWRpbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJlbGxvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEplc3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBdG9tCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWVudG9yc2hpcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9uZ29EQgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQVdTCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBBcnRzIGFuZCBDcmFmdHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRGVzaWduCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZpbmUgQXJ0CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJldGFpbAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83NTMtYWxsaXNvbi1kaWV0eiI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIENhbWVyb24gQXJhZ29uIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYm5ORElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWFhZmUxYzc5MGQyNzZhYmJkMWUzNmFhNTg0NWY1NzFiYTYxNDg2M2IvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvODFBREIzQjctQTRBNy00OTI0LUI0MzgtNkJDN0FGMjczQjdCLmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIENhbWVyb24gQXJhZ29uCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIENhbWVyb24gQXJhZ29uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2NhbWFyYWdvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBDYW1lcm9uIEFyYWdvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2NhbWFyYWdvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBDYW1lcm9uIEFyYWdvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJibmRESWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tZDA5YzhlMWI1ZTgyZTMzMGZiNTM1YTRiODQwODU0OWZjN2VlZWNjZS9SZXN1bWVfNDIucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSdtIGFsd2F5cyBzZWFyY2hpbmcgZm9yIGFuIG9wcG9ydHVuaXR5IHRvIGdyb3cgYnkgcHVzaGluZyBteXNlbGYgb3V0IG9mIG15IGNvbWZvcnQgem9uZSBhbmQgZXhwYW5kaW5nIG15IGtub3dsZWRnZS4gRnJvbnQtZW5kIGRldmVsb3BlciB3aXRoIGEgcGFzc2lvbiB0byBzb2x2ZSBwcm9ibGVtcyBhbmQgZGV2ZWxvcCBvdXRzdGFuZGluZyBVSSBieSB3cml0aW5nIGNsZWFuLCBlZmZlY3RpdmUgY29kZS4gSSBzdHJpdmUgdG8gd29yay4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEplc3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQ29tcHV0ZXIgJmFtcDsgTmV0d29yayBTZWN1cml0eQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDb21wdXRlciBIYXJkd2FyZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDb21wdXRlciBOZXR3b3JraW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZvb2QgJmFtcDsgQmV2ZXJhZ2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhvc3BpdGFsaXR5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJlc3RhdXJhbnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzc0MC1jYW1lcm9uLWFyYWdvbiI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEFpZGVuIE1lbmRleiIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQlozZEhJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS05OTE4ZGE4Y2Y5YTE5MTc0MTk0ZTdjNzI3NzU4OTNiYWRiYWZkNGU2L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL21lMi5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEFpZGVuIE1lbmRlegogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgU29mdHdhcmUgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQWlkZW4gTWVuZGV6IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2FpZGVubWVuZGV6Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEFpZGVuIE1lbmRleiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2FpZGVuLW1lbmRleiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBBaWRlbiBNZW5kZXoiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCWnpCSElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTdmMWVkNmI3NDA0YzFjOWQ2MDU1Y2U5N2I5MDMwYzlmYjJhZjc2MGMvYWlkZW5tZW5kZXpfcmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEJlZm9yZSBUdXJpbmcsIEkgd2FzIGEgY29udHJhY3RvciBpbiB0aGUgb3V0ZG9vciBpbmR1c3RyeS8gaW5mb3JtYXRpb24gdGVjaG5vbG9neSBzcGFjZS4gQWZ0ZXIgbGVhcm5pbmcgdGhlIGJhc2ljcyBvZiBGcm9udC1FbmQgZGV2ZWxvcG1lbnQgaW4gbXkgc3BhcmUgdGltZSBhbmQgY29tcGxldGluZyBhbiBpbnRlcm5zaGlwLCBJIGRlY2lkZWQgdG8gcHVyc3VlIG15IHBhc3Npb24gZm9yIGNyZWF0aW5nIHBvd2VyZnVsIGJhY2tlbmQuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBLdWJlcm5ldGVzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIERvY2tlcgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFXUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSW5mb3JtYXRpb24gVGVjaG5vbG9neSBhbmQgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVhbCBFc3RhdGUKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmV0YWlsCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzUzMi1haWRlbi1tZW5kZXoiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBSaWNoYXJkIFR5bGVyICIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmIyTkRJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1iYWZhMjE3YmU0OTY5NzhhYTZkNzA0ZmVjOTViNDQ2OGQ5MzFiM2NmL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzIwMTktMTEtMzAtMjAxNS4yMy4xMy5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIFJpY2hhcmQgVHlsZXIgCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIFJpY2hhcmQgVHlsZXIgIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3JpY2hhcmRsdHlsZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgUmljaGFyZCBUeWxlciAiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9yaWNoYXJkbHR5bGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIFJpY2hhcmQgVHlsZXIgIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQlowbEpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS01YzU5MTA4NjVkYzNkMjgyZGM2Y2EwYjk1ZTZiNDE1OTFlY2QxYmI1L3JpY2hhcmRfdHlsZXJfcmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEEgVVNNQyBWZXRlcmFuIHR1cm5lZCBTb2Z0d2FyZSBEZXZlbG9wZXIsIEkgYW0gcGFzc2lvbmF0ZSBhYm91dCBjcmVhdGluZywgbGVhcm5pbmcsIGFuZCBwcm9ncmVzcy4gSSBiZWxpZXZlIHRoYXQgZXZlcnl0aGluZyBJIGNyZWF0ZSBoYXPCoGFuIGltcGFjdCBvbiBteSBjb21tdW5pdGllcywgYW5kwqB3aGV0aGVyIEknbSBjcmVhdGluZyBhcHBzLCBtdXNpYywgb3IgaWRlYXMsIHRoZWlyIGltcGFjdCBpcyBhbHdheXMgbXkgcmVzcG9ucy4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWdWUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWVudG9yc2hpcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHcmFwaFFMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIb3NwaXRhbGl0eQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBNaWxpdGFyeQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXRhaWwKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgVHJhbnNsYXRpb24gYW5kIExvY2FsaXphdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83NDMtcmljaGFyZC10eWxlciI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEJyaWFuIEZvcmJlcyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJGbEhJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0zODkzMTY1NGE1N2IwOWJiOTU5ZTcxMTIwYjFmMGNhNmU1MGRkODA4L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0lNR18wNjY3LmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEJyaWFuIEZvcmJlcwogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgU29mdHdhcmUgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEJyaWFuIEZvcmJlcyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9Db2RlaGVyZGVyMTkiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQnJpYW4gRm9yYmVzIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vYnJpYW4tZm9yYmVzLTgzMzg4NzEzMCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBCcmlhbiBGb3JiZXMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYkZGSElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWYyMmViMzhhYjcxYzBlZGIzMDdhMTM3YmUzYjEyOTc4OWJkOWJkNmIvQmFzaWNfUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEkgaGF2ZSBhIHZhcmllZCB3b3JrIGhpc3RvcnksIGluY2x1ZGluZyB0b3VyaW5nIHRoZSBVUyBhcyBhIHByb2Zlc3Npb25hbCBtdXNpY2lhbiwgYW5kIG1vc3QgcmVjZW50bHkgSSB3YXMgdGhlIGRpcmVjdG9yIG9mIGN1bHRpdmF0aW9uIGZvciBhbiBhd2FyZCB3aW5uaW5nIGRpc3BlbnNhcnkgaW4gRGVudmVyLCBDTy4gSSBhbSB2ZXJ5IHBhc3Npb25hdGUgYWJvdXQgZW1iYXJraW5nIG9uIGEgbmV3IGNhcmVlciBwYXRoIGFzIGEgc28uLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRmlyZWZveAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJlbGxvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb2NoYQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBMaW5rZWRJbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENocm9tZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0IE5hdGl2ZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIE5vbmUgbGlzdGVkCiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvODA5LWJyaWFuLWZvcmJlcyI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIERyZXcgQnJhZGxleSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmIzZERJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1jMDQ1OWNjZmUzZGZiOWFmZGE2NTlhZDI2NTM4MDY0ZTQwNzExMWQ4L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0lNR181NjY1XzAuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBEcmV3IEJyYWRsZXkKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIERldmVsb3BlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBEcmV3IEJyYWRsZXkiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vRHJld0JyYWRsZXkiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgRHJldyBCcmFkbGV5IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vZHJldy1icmFkbGV5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIERyZXcgQnJhZGxleSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjREJHSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNDc2ZGRmNDcxYTlmYWIzNTkzOTYzNjcxYmYwMDA5MGE0NGFiMDM4YS9EcmV3QnJhZGxleS5UZWNobmljYWxSZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSBhbSBhbiBleHBlcmllbmNlZCBzbWFsbCBidXNpbmVzcyBvd25lciB3aXRoIGEgZGVtb25zdHJhdGVkIGhpc3Rvcnkgb2Ygd29ya2luZyBpbiB0aGUgbXVzaWMgaW5kdXN0cnkuIEFmdGVyIHllYXJzIG9mIHJ1bm5pbmcgbXkgb3duIHNtYWxsIGJ1c2luZXNzLCBJIHRyYW5zaXRpb25lZCB0byBwcm9ncmFtbWluZyBzbyB0aGF0IEkgY291bGQgYmV0dGVyIGxldmVyYWdlIG15IHNraWxscyBhcyBhbiBlZHVjYXRvciBhbmQgYWRtaW5pcy4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVmlzdWFsIFN0dWRpbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHb29nbGUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENocm9tZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHcmFwaFFMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBFbnRlcnRhaW5tZW50CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEV2ZW50cyBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBNdXNpYwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBQcmltYXJ5L1NlY29uZGFyeSBFZHVjYXRpb24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzQ0LWRyZXctYnJhZGxleSI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEx1a2UgTWFzb24iIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkV05FSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYzI2Yzc1ZWY0ZTgxZGQ3YjQxYTkyY2YyZjY1ZTljYmUwYTExNDAxNy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy8xMjQwMkM5OC03MDlELTRCRDUtODkyQy1DRkE3QUVERjJBMDFfMV8yMDFfYS5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBMdWtlIE1hc29uCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBMdWtlIE1hc29uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0x1a2VNYXNvbjMzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEx1a2UgTWFzb24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9sdWtlam1hc29uIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEx1a2UgTWFzb24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYVVGR0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTQ4NWQ4ZTA1MjE4YTgyOTY1NTQ2NzUyZjljYWJiOWI4ZmI1ZGQ1MmEvcmVzdW1lX2FwcmlsN3RoLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgICAgSSBhbSBhbiBlYXN5IGdvaW5nLCBwb3NpdGl2ZSBzb2Z0d2FyZSBlbmdpbmVlciB3aG8gc3BlY2lhbGl6ZXMgaW4gZnJvbnQtZW5kIHRlY2hub2xvZ2llcy4gSSBob2xkIGEgc3Ryb25nIHBhc3Npb24gZm9yIGNvbW11bml0eSBhbmQgdGVhbXdvcmsvY29sbGFib3JhdGlvbi4gQWRkaXRpb25hbGx5LCBJIGFtICoqdmVyeSBlYWdlciB0byBsZWFybiBuZXcgdGVjaG5vbG9naWVzIGFuZCBoYXZlIGEgY29tcGVsbGluZyBkZXNpcmUgdG8uLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgalF1ZXJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIEFyY2hpdGVjdHVyZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYWFTCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIExpbmtlZEluCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEplc3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZ1ZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgT25saW5lIE1lZGlhCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJlc2VhcmNoCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJlc3RhdXJhbnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFdhcmVob3VzaW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzExNy1sdWtlLW1hc29uIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgRWxzYSBGbHVzcyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNGVkRJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1iNGY1MjlkMDg1NTY1MWY1YjZkOTVhYmRkZTgyYjYzODdmYjFhMGNlL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL2hlYWRzaG90XzIxLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgRWxzYSBGbHVzcwogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQtRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEVsc2EgRmx1c3MiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZWxzYWZsdXNzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEVsc2EgRmx1c3MiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9lbHNhZmx1c3MiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgRWxzYSBGbHVzcyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkWGRJSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tY2QyNjcwYmQxZWI3ODgxNzkxMzAwYWJjOWNhMWU1ZTc4NzBhMTE5NC9FbHNhJTIwRmx1c3MlMjByZXN1bWUlMjBBVFMucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgVGhlIHJpZ2h0IHRvb2wgZm9yIHRoZSByaWdodCBwZXJzb24gd2lsbCBjaGFuZ2UgYSBsaWZlLCBhbmQgb25lIHBlcnNvbiBjYW4gY2hhbmdlIHRoZSB3b3JsZC4KSSBhbSBhIGNvbW11bmljYXRvciBhbmQgYSBjb21tdW5pdHkgYnVpbGRlciwgY3JlYXRpbmcgdG9vbHMgdG8gaGVscCBwZW9wbGUgdW5kZXJzdGFuZCB0aGUgd29ybGQgYXJvdW5kIHRoZW0gYW5kIGxpdmUgYXV0aGVudGljYWxseS4gV2hlbiBjcml0aWNhbCBpbmYuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHdpdHRlcgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaW1wCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBZG9iZSBJbGx1c3RyYXRvcgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXZWJwYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmVsbG8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDaHJvbWUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQWRvYmUgUGhvdG9zaG9wCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhbGVzZm9yY2UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEV4cHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEFjY291bnRpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQXJ0cyBhbmQgQ3JhZnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEV4ZWN1dGl2ZSBPZmZpY2UKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRnVuZC1SYWlzaW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE1hcmtldGluZyBhbmQgQWR2ZXJ0aXNpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgT25saW5lIE1lZGlhCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFB1Ymxpc2hpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmV0YWlsCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFdyaXRpbmcgYW5kIEVkaXRpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzQ1LWVsc2EtZmx1c3MiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBUcmV2b3IgU3V0ZXIiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjbEZFSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tM2ZmMDdiZmJkYzJmMzJiMTVmMmZlNjFjMWVlYWY1ZmM3ZmJhNjQ4My9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy82MzM4N0Q2RS1DREE0LTRFQzItQTZDMC04MjYwRTRERTExQjNfMV8yMDFfYS5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBUcmV2b3IgU3V0ZXIKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEJhY2sgRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIFRyZXZvciBTdXRlciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9UcmV2b3JzdXRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBUcmV2b3IgU3V0ZXIiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi90cmV2b3Itc3V0ZXItMjE2MjA3MjAzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIFRyZXZvciBTdXRlciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjRFJLSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNTUyZmUzNTc0NjhhNzUwMjYyNzYyNjNjMmMwZWQzYWYyMWIwMGUwMS9UcmV2b3IlMjBTdXRlciUyMFVwZGF0ZWQlMjBSZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSBhbSBhIHBhc3Npb25hdGUgZGV2ZWxvcGVyIHdobyBpbnRlbmRzIHRvIG1ha2UgaW1tZWRpYXRlIGltcGFjdCBpbiBldmVyeSBmYWNldCBvZiBsaWZlLiBUaHJvdWdoIG15IHByZXZpb3VzIGV4cGVyaWVuY2VzIGFzIGEgQ2hlZiwgSG9ja2V5IHBsYXllciwgYW5kIEVxdWluZSB0cmFpbmVyLCBJIHBvc3Nlc3MgYSBkaXZlcnNlIHNldCBvZiBwZXJzb25hbCBhbmQgcHJvZmVzc2lvbmFsIHNraWxscyB0aGF0IGFyZSB2YWx1YWJsZSBpbi4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSU3BlYwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSYWlscwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUHl0aG9uCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGb29kICZhbXA7IEJldmVyYWdlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIb3NwaXRhbGl0eQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBTcG9ydHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzg2LXRyZXZvci1zdXRlciI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEplc3NpY2EgSnVzdGljZSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNGVkZJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS03MmYwZGI4ODQ5OGMxM2I4Mjg3NzMzYmMyOTA0Zjk2ZGRmZDhlZjI2L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzAyODAyMjBBLTZDQTktNDQ5NC1BN0U1LTcxMDlCMzVGQjQzMCUyMDIuSlBHIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBKZXNzaWNhIEp1c3RpY2UKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBTb2Z0d2FyZSBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgSmVzc2ljYSBKdXN0aWNlIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL20xMDczNDk2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEplc3NpY2EgSnVzdGljZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2plc3NpY2EtanVzdGljZTIiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgSmVzc2ljYSBKdXN0aWNlIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFFbExJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS05M2UyNWNlZGZkY2Q4YzA5OWZlNzI0NTQ2ZmE5OTk4ZDZjNjNjMjQ3L0plc3NpY2ElMjBKdXN0aWNlJTIwR2VuZXJhbCUyMFJlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJIGFtIGEgZnJvbnQtZW5kIHNvZnR3YXJlIGRldmVsb3BlciBpbnRlcmVzdGVkIGluIHRlc3QtZHJpdmVuIGRldmVsb3BtZW50IChUREQpIGJlc3QgcHJhY3RpY2VzIGFuZCBhbnkgdGVjaG5vbG9naWVzIHRoYXQgbWF5IGNvbnRyaWJ1dGUgdG8gcHJvZHVjaW5nIHF1YWxpdHkgcHJvamVjdHMgdGhhdCBleGNlZWQgZXhwZWN0YXRpb25zIGZvciBmdW5jdGlvbmFsaXR5IGFuZCB1c2VyIGV4cGVyaWVuY2UuIEkgdmFsdWUgd29ya2luZyBpLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZ1ZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJlbGxvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEV4cHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhbGVzZm9yY2UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSGlnaGVyIEVkdWNhdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBXcml0aW5nIGFuZCBFZGl0aW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzc1OS1qZXNzaWNhLWp1c3RpY2UiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBKYWNvYiAgQXJlbGxhbm8iIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJiMEZKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMDdlN2ZjNWVmZWJmZTQ1ZjQ2NDM3ZDQwZDNjY2Y0MGVjNmE3MTdjZi9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9TY3JlZW4lMjBTaG90JTIwMjAyMS0wNC0yNCUyMGF0JTIwMTAuMjkuMDUlMjBBTS5wbmciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEphY29iICBBcmVsbGFubwogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgSmFjb2IgIEFyZWxsYW5vIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2pha2VqYWtlYXJlbGwiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgSmFjb2IgIEFyZWxsYW5vIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vamFjb2ItYXJlbGxhbm8tYWIyODkwMjA3Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEphY29iICBBcmVsbGFubyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJiMFZKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYWRkMmRiYjhlM2YxODBiYzI2N2FmMTBlMTk3MzQzNzk1M2ZhNzBjYi9KYWNvYl9BcmVsbGFub19SZXN1bWUlMjAoMSkucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgQ29taW5nIGZyb20gdGhlIHdvcmxkIG9mIEhJViBQcmV2ZW50aW9uLCBJIGxlYXJuZWQgaG93IHRvIGhlbHAgZm9sa3MgbmF2aWdhdGUgZGlmZmljdWx0IHNpdHVhdGlvbnMgd2l0aCBjb21wYXNzaW9uIHdoaWxlIGFsc28gcHJvdmlkaW5nIGEgY2xlYXIgcGxhbiBvZiBhY3Rpb24uIApUaGVzZSBza2lsbHMgaGF2ZSBoZWxwZWQgbXkgdGhyaXZlIGFzIGEgZGV2ZWxvcGVyLiBJIGFtIGNvbWZvcnRhYmxlIHdvcmtpbmcgd2l0aCB0ZS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWRpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSU3BlYwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSYWlscwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQVIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBEamFuZ28KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQeXRob24KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIENpdmljICZhbXA7IFNvY2lhbCBPcmdhbml6YXRpb24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRmFjaWxpdGllcyBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIb3NwaXRhbCAmYW1wOyBIZWFsdGggQ2FyZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83NzMtamFjb2ItYXJlbGxhbm8iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBKZXJlbWlhaCBNaWNobGl0c2NoIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYm10S0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTNkNGY1NzI5ZmE5NmMwMzMzZDk1NTY0YzlhZDNhM2Q2YjIwYjI1MzQvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvVDAyOVAyUzlNLVUwMUJDSEhRVVFKLTU5ZDg1NzdkYTkzOC01MTIucG5nIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBKZXJlbWlhaCBNaWNobGl0c2NoCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrLUVuZCBFbmlnbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBKZXJlbWlhaCBNaWNobGl0c2NoIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0ptaWNobGl0c2NoIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEplcmVtaWFoIE1pY2hsaXRzY2giIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9qZXJlbWlhaC1taWNobGl0c2NoLTQ5MDQ4YTIwNiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBKZXJlbWlhaCBNaWNobGl0c2NoIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJtOUtJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1kZTAxZDM2NDU4YzVlNGQ4ZjkzMzVkNmEwNmNkYWQwOTFkMzE2NjkwL015JTIwUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIFJlY2VudCBUdXJpbmcgR3JhZHVhdGUsIEp1bmUgMjAyMS4gQ3VycmVudGx5IG9wZW4gdG8gd29yaywgc2Vla2luZyBvcHBvcnR1bml0aWVzIGluIEphdmEsIFJ1YnksIEJhY2sgRW5kIFdlYiBEZXZlbG9wbWVudCwgYW5kIEZ1bGwgU3RhY2sgV2ViIERldmVsb3BtZW50LiBNYWtpbmcgYSBjaGFuZ2UgZnJvbSBwZXJzb25hbCB0cmFpbmluZyB0byBzb2Z0d2FyZSBkZXZlbG9wbWVudCwgSSBhcHByZWNpYXRlICB0aGUgc3RydWN0dXJlIGEuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgalF1ZXJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUHl0aG9uCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBFbnZpcm9ubWVudGFsIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhlYWx0aCwgV2VsbG5lc3MgYW5kIEZpdG5lc3MKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzc2LWplcmVtaWFoLW1pY2hsaXRzY2giPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBBcmlrYSBCbGVua2VyIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY2pCSUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWU4NmI4NjQ5ZjNmNWI1M2MwZjE5ZDFhYmFjZWRiYmE5Y2QzMTUwNWUvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvcHJvZmlsZV9waWMuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBBcmlrYSBCbGVua2VyCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrLUVuZCBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBBcmlrYSBCbGVua2VyIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2FyaWthbGVhIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEFyaWthIEJsZW5rZXIiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9hcmlrYS1ibGVua2VyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEFyaWthIEJsZW5rZXIiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYjJ0S0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTFjZGQ0Nzc4MTU5MjVhOGEyNWY1YmMzZjMzNWEyOWZmZmI4NmJhMGMvU29mdHdhcmUlMjBEZXZlbG9wZXIlMjBSZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSBoYXZlIGJlZW4gYW4gYXZpZCBjbGltYmVyIGZvciBvdmVyIDEwIHllYXJzIG5vdyBhbmQgYWZ0ZXIgc3BlbmRpbmcgbW9zdCBvZiBteSB0aW1lIHdvcmtpbmcgaW4gdGhlIGNsaW1iaW5nIGluZHVzdHJ5LCBJIGFtIGxvb2tpbmcgZm9yd2FyZCB0byBlbWJhcmtpbmcgb24gdGhpcyBpcyBwYXRoIG9mIGJlY29taW5nIGEgc29mdHdhcmUgZGV2ZWxvcGVyLiBJJ20gY29uZmlkZW50IHRoaXMgd2lsbCBhbGxvdyBtZSB0byBqb2luIG15IC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHcmFwaFFMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgTm9uZSBsaXN0ZWQKICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83NjYtYXJpa2EtYmxlbmtlciI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIFBhaWdlICBWYW5uZWxsaSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRWRkZJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1lMmE1MjM3NWE1OThhYmI3OGUxN2FiZDQ0ZGI3NDdkZDMzNThkNWY1L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL1pvb21lZCUyMGluJTIwaGVhZHNob3QuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBQYWlnZSAgVmFubmVsbGkKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBFbmdpbmVlciAKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgUGFpZ2UgIFZhbm5lbGxpIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL1BhaWdlVmFubmVsbGkiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgUGFpZ2UgIFZhbm5lbGxpIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vcGFpZ2V2YW5uZWxsaSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBQYWlnZSAgVmFubmVsbGkiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYTJOSUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWVhNmUzMDlkOGM0MmI2MDA4NzIwYzcxMDRlM2VlODc0ZGMzYTU1NTIvUGFpZ2UlMjBWYW5uZWxsaSUyMFJlc3VtZSUyMC5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBBcyBhIHNvZnR3YXJlIGVuZ2luZWVyLCBJIGFtIHZlcnkgb3JnYW5pemVkIGFuZCBsb3ZlIGJpZ2dlci1waWN0dXJlIHN0cmF0ZWd5IGFuZCBwbGFubmluZy4gSSBoYXZlIGFsd2F5cyBiZWVuIGEgZmFzdCBsZWFybmVyIGFuZCBoYXZlIGEgc3Ryb25nIGlubmF0ZSBjdXJpb3NpdHkgd2hpY2ggcGFpcnMgbmljZWx5IHdpdGggdGhlIGV2ZXItZXZvbHZpbmcgdGVjaCBpbmR1c3RyeS4gQXMgYSBmb3JtZXIgcmVzZWFyY2hlciBhdCBUZXNsLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJlbGxvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTGlua2VkSW4KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQXV0b21vdGl2ZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDb21wdXRlciBTb2Z0d2FyZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZW5ld2FibGVzICZhbXA7IEVudmlyb25tZW50CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJlc2VhcmNoCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFN0YWZmaW5nIGFuZCBSZWNydWl0aW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFRyYW5zcG9ydGF0aW9uL1RydWNraW5nL1JhaWxyb2FkCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzgwNS1wYWlnZS12YW5uZWxsaSI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIFRyZXZvciBSb2JpbnNvbiIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJtZEhJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1lNTY3N2U0NTI1YWM3ZjAyNmE3NDRkNGRlYjMxZTk0YTQ2MjU5Mzg1L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzgxMjY5NDY3ODAwMzM5Mzk5MDIlMjAoMSkuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBUcmV2b3IgUm9iaW5zb24KICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEJhY2stRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIFRyZXZvciBSb2JpbnNvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9UcmV2b3ItUm9iaW5zb24iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgVHJldm9yIFJvYmluc29uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vdHJldm9yLXJvYmluc29uMTI1NC8iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgVHJldm9yIFJvYmluc29uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNFbEpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS04YzQ0ZjVkMWU5YjdhNWNiNDNhYjMwNzNkZTVmNjM4YjI1MDM2YWIxL1RyZXZvcl9SZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgQmFjay1lbmQgRGV2ZWxvcGVyIHdpdGggYSBwYXNzaW9uIGZvciwgYW5kIGhpc3Rvcnkgb2YsIHdvcmsgaW4gdGhlIGVkdWNhdGlvbiBhbmQgbm9uLXByb2ZpdCBzZWN0b3JzLiBNeSBwcmV2aW91cyByb2xlcyBoYXMgZ2l2ZW4gbWUgZXhwZXJpZW5jZSBpbiB3b3JraW5nIHdpdGggdGVhbXMgaW4gbWFueSBkaWZmZXJlbnQgZW52aXJvbm1lbnRzLCBkZXNpZ25pbmcgZWZmaWNpZW50IGFuZCBjb3N0IGVmZmVjdGl2ZSBzb2x1dGlvbnMgdC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBEamFuZ28KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV29yZHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdpbmRvd3MgOAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWUgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDeWJlcnNlY3VyaXR5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpbXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFSCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmVsbG8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdvb2dsZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ2hyb21lCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUHl0aG9uCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSW5mb3JtYXRpb24gVGVjaG5vbG9neSBhbmQgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTXVzZXVtcyBhbmQgSW5zdGl0dXRpb25zCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFByaW1hcnkvU2Vjb25kYXJ5IEVkdWNhdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83ODUtdHJldm9yLXJvYmluc29uIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgUmVnZ2llIFRob21wc29uIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYVRoS0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTcxZDNhYjZkZGJmNGYyZjAxNDljMmNjZGM4MWFiY2ZiMjllNGVmZTEvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvSU1HXzYxOTQuSlBHIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBSZWdnaWUgVGhvbXBzb24KICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIERldmVsb3BlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBSZWdnaWUgVGhvbXBzb24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vcmR0aG8yNTI1Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIFJlZ2dpZSBUaG9tcHNvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL3JlZ2dpZS10aG9tcHNvbi0xMzY5NzkxMzciPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgUmVnZ2llIFRob21wc29uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFIZEtJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS05ZTRkYWU4MmY5YWJjNjE2MjIwNzBkODVlMDU3OTkzMTlmMTg1ZWRkL1JlZ2luYWxkJTIwVGhvbXBzb24lMjBSZXN1bWUlMjAyMDIxLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEEgZnJvbnQtZW5kIGRldmVsb3BlciB0aGF0IHZhbHVlcyBjcmVhdGl2aXR5LCBwcm9ncmVzcywgYW5kIGVtcGF0aHkuICBJIHJlbGlzaCB0aGUgb3Bwb3J0dW5pdHkgdG8gd29yayB3aXRoIG90aGVycyBpbiBidWlsZGluZyBkeW5hbWljLCBpbmNsdXNpdmUsIGFuZCBlZmZlY3RpdmUgdXNlciBpbnRlcmZhY2VzLiBBcyBhIGRldmVsb3BlciBnb2luZyB0aHJvdWdoIHRoZSBpbW1lcnNpdmUsIEFDQ0VULWFjY3JlZGl0ZWQgZnJvbnQtZW4uLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdlYnBhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBBY2NvdW50aW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE5ld3NwYXBlcnMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvODA2LXJlZ2dpZS10aG9tcHNvbiI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEFkYW0gQm93ZXJzIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYm5kSklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWFjMGE2MTZkYjgxN2FlODQ0MDdkNzU5OGM3ZGZiNTBkNDc1NDlmMGIvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvSU1HXzIwMjEwMzE5XzA4MDIwOS5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEFkYW0gQm93ZXJzCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrLUVuZCBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBBZGFtIEJvd2VycyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9QcmFnbWF0aWNwcmF4aXMzNyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBBZGFtIEJvd2VycyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2FkYW0tYm93ZXJzLTA2YTg3MTIwOS8iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgQWRhbSBCb3dlcnMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYmpCSklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWVhZjI2Y2Y2NTEwZjM5MzY4ZDU1OGYwNTI3YzZhZjg3OWJjNzBiNTQvQURBTSUyMEJPV0VSUy5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJIGFtIGEgbGF3eWVyIHR1cm5lZCBzb2Z0d2FyZSBkZXZlbG9wZXIgd2hvIGVuam95cyBwdXNoaW5nIG15c2VsZiB0byBsZWFybiBuZXcgY29uY2VwdHMuIEkgZmluZCBjb2RpbmcgZXhjaXRpbmcgYmVjYXVzZSBpdCBjb250aW51YWxseSBidWlsZHMgb2ZmIG9mIGNvcmUgY29uY2VwdHMgdG8gYXBwbHkgdGhlbSB0byBub3ZlbCBlbnZpcm9ubWVudHMgYW5kIG1vcmUgY29tcGxleCBwcm9ibGVtcy4gSSBzZWUgZGV2ZWxvcG1lbnQgYXMgLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRWxpeGlyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBMYXcgUHJhY3RpY2UKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzYxLWFkYW0tYm93ZXJzIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgTWF0dCBVbWxhbmQiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJiREJGSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNTMwNzkxZGZlMzBhODA2YjE5ODU1OGE1NjI2NDNmYWI5Y2E1NTEzMS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9NYXR0JTIwaGVhZHNob3QuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgTWF0dCBVbWxhbmQKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgTWF0dCBVbWxhbmQiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vbWF0dHVtbGFuZCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBNYXR0IFVtbGFuZCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL21hdHQtdW1sYW5kLWhlLWhpbS00MjY0NDU1YiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBNYXR0IFVtbGFuZCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJialJKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMjc5MzI4NDk0MDNiZGY0MGJkYjA4YjQ4Nzg2OWEzMDQxN2Q0ODgzYS9NYXR0JTIwVW1sYW5kJTIwcmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIE15IHdvcmsgaGFzIGFsd2F5cyBiZWVuIGZvY3VzZWQgb24gb25lIGVuZGVhdm9yOiBjcmVhdGluZyBlbmdhZ2luZyBleHBlcmllbmNlcy4gTXkgY2FyZWVyIGJlZ2FuIG9uIHRoZSBmbG9vciBvZiBhIHNjaWVuY2UgbXVzZXVtLCB3aGVyZSBJIGxlZCBoYW5kcy1vbiBlZHVjYXRpb25hbCB3b3Jrc2hvcHMsIHBlcmZvcm1lZCBpbiBmcm9udCBvZiBodW5kcmVkcyBvZiB2aXNpdG9ycyBhbmQgdHJhaW5lZCBvdGhlciBlZHVjYXRvcnMuIFQuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQWRvYmUgSWxsdXN0cmF0b3IKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNYW5hZ2VtZW50CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQWRvYmUgUGhvdG9zaG9wCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZ1ZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBBcmNoaXRlY3R1cmUgJmFtcDsgUGxhbm5pbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRGVzaWduCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEVudGVydGFpbm1lbnQKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTXVzZXVtcyBhbmQgSW5zdGl0dXRpb25zCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFByb2dyYW0gRGV2ZWxvcG1lbnQKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgV3JpdGluZyBhbmQgRWRpdGluZwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS84MDMtbWF0dC11bWxhbmQiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBKYWNrc29uIE1jR3VpcmUiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhM2RKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMDZmMWI0MDllYjA3OWYyNDQyMzJhMTI1NTgxZDRlNDQzNTFmNjQ2NS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9JTUdfMjI3My5QTkciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEphY2tzb24gTWNHdWlyZQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgU29mdHdhcmUgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgSmFja3NvbiBNY0d1aXJlIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0phY2tzb25tY2d1aXJlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEphY2tzb24gTWNHdWlyZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2phY2tzb24tbWNndWlyZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBKYWNrc29uIE1jR3VpcmUiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCZERoSklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTQ4OTBkZmYxMGU0NDBjMmQyYWFmZmZiZDlmZTMwZDU3MzMxZjNjMDEvSmFja3NvbiUyME1jR3VpcmUlMjBSZXN1bWUlMjAoMSkucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgV2hpbGUgYmFja3BhY2tpbmcgdGhyb3VnaCBBdXN0cmFsaWEgaW4gMjAxOSwgSSBtZXQgYW4gYXJyYXkgb2YgIm5vbWFkIiBzb2Z0d2FyZSBlbmdpbmVlcnMgYW5kIGJlY2FtZSBpbW1lZGlhdGVseSBlbmFtb3JlZCB3aXRoIHRoZSB3b3JrIGFuZCB0aGUgb3Bwb3J0dW5pdGllcyBpdCBwcm92aWRlZC4gQWZ0ZXIgcmV0dXJuaW5nIHRvIHRoZSBVLlMuIEkgYmVnYW4gc2Vla2luZyBvdXQgcHJvZ3JhbXMgdG8gZ2V0IGludm9sdmVkLCBhbi4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBqUXVlcnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVnVlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCYWJlbAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdlYnBhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJlbGxvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFkb2JlIFBob3Rvc2hvcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHb2xhbmcKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICBOb25lIGxpc3RlZAogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzc5NS1qYWNrc29uLW1jZ3VpcmUiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBTdGV2ZW4gTWFuY2luZSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQloyTkpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0yYTcyMGM4ZTY1NzZmOTE4MmE0YmUwZWRlYjIyNzdmNWE3YTVkYWMyL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL1NjcmVlbiUyMFNob3QlMjAyMDIxLTA1LTE5JTIwYXQlMjA2LjA3LjEyJTIwUE0ucG5nIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBTdGV2ZW4gTWFuY2luZQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQtRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIFN0ZXZlbiBNYW5jaW5lIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2l0c25hbWVpc3N0ZXZlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBTdGV2ZW4gTWFuY2luZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL3N0ZXZlbi1tYW5jaW5lLTEzNTA5NTIxIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIFN0ZXZlbiBNYW5jaW5lIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQloxbEpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1iYTRkOWJlMjRkNTg0N2MzM2VjMWM2YmEyMWM1ZjA5OTNiZGVhODhjL01hbmNpbmVfUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEZvciBhcyBsb25nIGFzIEkgY2FuIHJlbWVtYmVyLCBJIGhhdmUgYmVlbiB0YWtpbmcgdGhpbmdzIGFwYXJ0IGFuZCBwdXR0aW5nIHRoZW0gYmFjayB0b2dldGhlciB0byBmaWd1cmUgb3V0IGhvdyB0aGUgd29ybGQgd29ya3MuIEkgY3VycmVudGx5IHNhdGlzZnkgbXkgY3VyaW9zaXRpZXMgdGhyb3VnaCBjb2RpbmcsIGhvbWVicmV3aW5nLCBhdXRvIG1lY2hhbmljcywgd29vZHdvcmsgYW5kIHZpbnRhZ2UgZWxlY3Ryb25pYyByZXBhaXIuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEV4cHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRm9vZCAmYW1wOyBCZXZlcmFnZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSGVhbHRoLCBXZWxsbmVzcyBhbmQgRml0bmVzcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS84MDctc3RldmVuLW1hbmNpbmUiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBIb3BlIE1jR2VlIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYTBsRElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTRjM2U1NjAxYTAyMTg0NzFmOTFjYzgwNjMwYzc0N2I0YmZhYjJlMzYvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvcGhvdG9fMjAyMC0xMS0wMi0yMDExLjI4LjA3LmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEhvcGUgTWNHZWUKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEJhY2stRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEhvcGUgTWNHZWUiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaG9wZXNnaXQiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgSG9wZSBNY0dlZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2hvcGUtbWNnZWUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgSG9wZSBNY0dlZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkWGRKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tZmY0ZmMyYTU0MzI1MmZiYzhiNWYwZmEzMWY1MTYwYzY2M2JkY2ViZC9Ib3BlQXJhbk1jZ2VlUmVzdW1lKFBERikucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSdtIGEgdHJhbnMgd29tYW4gZnJvbSBUZXhhcywgbGl2aW5nIGluIENvbG9yYWRvLiBJJ3ZlIGFsd2F5cyBiZWVuIGludGVyZXN0ZWQgaW4gdGVjaCBhbmQgd2hhdCBJIGNhbiBkbyB3aXRoIGl0LiBJJ3ZlIGJlZW4gcGxheWluZyB2aWRlbyBnYW1lcyBzaW5jZSBiZWZvcmUgSSBjb3VsZCByZWFkLCBhbmQgbGVhcm5lZCB0byByZWFkIHRoYW5rcyB0byB0aGVtLiBJIGZvdW5kIGluc3BpcmF0aW9uIGZvciBob3cgSSB3YW50ZWQgdG8gbC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBEamFuZ28KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFB5dGhvbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQysrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIb3NwaXRhbCAmYW1wOyBIZWFsdGggQ2FyZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXRhaWwKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzI5LWhvcGUtbWNnZWUiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBNZWdhbiBHb256YWxlcyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFVVkpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1hZjg2M2UyZDI5ZjQ3ZjdkYjNiZmFiZWM0N2EyYTc2ZGI5Y2VkZTU2L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0lNR182MTgxLkpQRyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgTWVnYW4gR29uemFsZXMKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZ1bGwgU3RhY2sgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgTWVnYW4gR29uemFsZXMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vTUdvbnphbGVzMjYiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgTWVnYW4gR29uemFsZXMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9tZWdhbi1lLWdvbnphbGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIE1lZ2FuIEdvbnphbGVzIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFWRkpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS01MjRhNTc2OTE2NGU2NWZkMzhiM2Q0NGY4OGZjM2ZmYTg5YjE2Nzg1L21nX3Jlc3VtZS5kb2N4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSBoYXZlIGFsd2F5cyBiZWVuIGEgZGF0YSBuZXJkLiBJIGFtIHNpbXBseSBtZXNtZXJpemVkIGJ5IGFsbCB0aGUgd2F5cyBkYXRhIGNhbiBiZSBpbnRlcmFjdGVkIHdpdGggYW5kIG1hbmlwdWxhdGVkLiBFdmVuIHdpdGggdGhpcyBsb3ZlIEkgdG9vayBhIGxvbmcgYW5kIHdpbmRpbmcgcm9hZCB0byBTb2Z0d2FyZSBEZXZlbG9wbWVudC4gV2hlbiBJIHdhcyBpbiBjb2xsZWdlIEkgbWFqb3JlZCBpbiBJbnRlcmRpc2NpcGxpbmFyeSBzdC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZpc3VhbCBTdHVkaW8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1hbmFnZW1lbnQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhlYWx0aCwgV2VsbG5lc3MgYW5kIEZpdG5lc3MKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzg0LW1lZ2FuLWdvbnphbGVzIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgR2VuZXZpZXZlIE51ZWJlbCIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFGbElJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1iOWUzYmQ5ODU4MTZjMzM5Mjc1NWEyY2IyNDdiODkxODFjNzQ4ODAwL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzE1ODgyRDlBLUNBMkYtNEM3RC04OEI1LTIzQUM5MjU4NzY0NV8xXzIwMV9hLmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEdlbmV2aWV2ZSBOdWViZWwKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEJhY2stRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEdlbmV2aWV2ZSBOdWViZWwiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vR3ZpZXZlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEdlbmV2aWV2ZSBOdWViZWwiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9nZW5ldmlldmUtbnVlYmVsIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEdlbmV2aWV2ZSBOdWViZWwiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYWtGS0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTc2NTkxYTc1MDU2MDliN2VjMDE0ZWE5OGI5ODA5YmFhZTIyYzAzZDQvR2VuZXZpZXZlJTIwTnVlYmVsJTIwUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgICAgIEkgc3R1bWJsZWQgaW50byB0ZWNobm9sb2d5IG92ZXIgYSBkZWNhZGUgYWdvIGFuZCBJIHVuZXhwZWN0ZWRseSBmZWxsIGluIGxvdmUgd2l0aCBpdC4gSGF2aW5nIHN0YXJ0ZWQgb3V0IGluIGhvc3BpdGFsaXR5IHRoZW4gd29ya2luZyB0aHJvdWdoIGRpZmZlcmVudCBmYWNldHMgb2YgdGVjaG5vbG9neSBvdmVyIHRoZSBsYXN0IGRlY2FkZSwgSSBicmluZyBhIHVuaXF1ZSBwZXJzcGVjdGl2ZSB0byBzb2Z0d2FyZSBkZXZlbG9wbWUuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgT3JhY2xlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFByb2R1Y3QgTWFuYWdlbWVudAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUXVhbGl0eSBBc3N1cmFuY2UgLyBRQQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYWxlc2ZvcmNlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBqUXVlcnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQeXRob24KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIENvbXB1dGVyIFNvZnR3YXJlCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhvc3BpdGFsaXR5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEluZm9ybWF0aW9uIFRlY2hub2xvZ3kgYW5kIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzc3MS1nZW5ldmlldmUtbnVlYmVsIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgSm9zaHVhIEFyYWdvbiIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNFMUtJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0yNWY0MzkwMDFiYzJhMzJkNmQ0ZjNmZTE5ZTg1MmNmMGFlOTc3ZWYzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0RTQzA2MjUyJTIwMi5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEpvc2h1YSBBcmFnb24KICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBKb3NodWEgQXJhZ29uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2pvc2hhcmFnb24iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgSm9zaHVhIEFyYWdvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2pvc2h1YS1hcmFnb24tODU0Mjc1MjA2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEpvc2h1YSBBcmFnb24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY0ZGS0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWRjNzQxNmIyYTQxYWY1ZjNjN2VjZGYyZTdjY2FhNzk1ZGMyMThiMWUvSm9zaEFyYWdvblJlcy5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJIGhhdmUgYWx3YXlzIGJlZW4gb24gY29tcHV0ZXJzIGxlYXJuaW5nIG5ldyB0ZWNoIHNpbmNlIG1pZGRsZSBzY2hvb2wuIEFkb2JlIENyZWF0aXZlIFN1aXRlIHdhcyB0aGUgZmlyc3QgdGhpbmcgSSBnb3QgcmVhbGx5IGdvb2QgYXQgb24gbXkgb3duLiBJIGtuZXcgSSB3YW50ZWQgYSBjYXJlZXIgdGhhdCBoYWQgdG8gZG8gd2l0aCBjb21wdXRlcnMsIGJ1dCBJIGRpZG4ndCBrbm93IHdoYXQuIE15IGZyZXNobWFuIHllYXIgSSB0b29rLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFuZ3VsYXJKUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWdWUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXZWJwYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb2NoYQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vbmdvREIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QgTmF0aXZlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIENvbnN0cnVjdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXRhaWwKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzk4LWpvc2h1YS1hcmFnb24iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBKb2VsIFRob21hcyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNWVktJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS02OGQ3MWQ3ZTUwYWE4Yzk5NmUxYjYyODgxOTYwYTE0ZDJlN2M3NzdkL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzIwMTgwNTA5XzE3MDU1MC5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEpvZWwgVGhvbWFzCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgSm9lbCBUaG9tYXMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vc2hha2lra2EiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgSm9lbCBUaG9tYXMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9qb2VsLXRob21hcy03NGEzNzQyMGIiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgSm9lbCBUaG9tYXMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY1ZsS0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTMzOWQ4NGIyYTdlMjQzMWFkMTc2MzU0YzllNmQ2YjIwMjI2ZDJmMWYvSm9lbCUyMFRob21hcy5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJJ20gYSBmcm9udC1lbmQgc29mdHdhcmUgZW5naW5lZXIgd2l0aCBhIGJhY2tncm91bmQgaW4gcGxhbnQgYmlvbG9neS4gV2hlbiBJJ20gbm90IGNvZGluZywgeW91IGNhbiBwcm9iYWJseSBmaW5kIG1lIGluIHRoZSBnYXJkZW4gb3IgdGVuZGluZyB0byBteSBob3VzZXBsYW50cy4gSSBoYXZlIGEgcGFzc2lvbiBmb3IgbGVhcm5pbmcsIGEgZmFzY2luYXRpb24gd2l0aCBwdXp6bGVzLCBhbmQgYSBkZXNpcmUgZm9yIGdyb3d0aC4gSSBoLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOcG0KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGYXJtaW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZvb2QgJmFtcDsgQmV2ZXJhZ2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZvb2QgUHJvZHVjdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83OTctam9lbC10aG9tYXMiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBPd2VuIEhhbGxncmVuIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYjJOSElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWJjYjY3NjRkY2VjZTBhNWJmN2Y3MmY1MmEyMWQzMDUxYjI1ZjMwYWUvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvaGVhZHNob3QuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgT3dlbiBIYWxsZ3JlbgogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQtRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIE93ZW4gSGFsbGdyZW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vb3dlbmhhbGxncmVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIE93ZW4gSGFsbGdyZW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9vd2VuaGFsbGdyZW4iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgT3dlbiBIYWxsZ3JlbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjR05LSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMWQ5N2JiNmNhNGI3ZTE1OWEzNDQ4NTlkM2IzYmEwYTE4NTQ3MjIxMi9Pd2VuJTIwSGFsbGdyZW4lMjBSZXN1bWUlMjBXb3JraW5nLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEV2ZXIgc2luY2UgSSB3YXMgYSBraWQgSSBoYXZlIGJlZW4gc3Vycm91bmRlZCBieSB0ZWNobm9sb2d5LCBzbyBiZWNhdXNlIG9mIHRoaXMsIEkgaGF2ZSBhbHdheXMgaGFkIGEgY3VyaW9zaXR5IG9mIGhvdyB0ZWNoIHdvcmtlZC4gQXMgSSBnb3Qgb2xkZXIgSSByZWFsaXplZCBJIGNvdWxkIGxlYXJuIHRoZSBza2lsbHMgcmVxdWlyZWQgdG8gdW5kZXJzdGFuZCBhbmQgY3JlYXRlLiBJIGFtIHBhc3Npb25hdGUgYWJvdXQgbGVhcm5pbmcuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWaXN1YWwgU3R1ZGlvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBbmd1bGFySlMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVzdGF1cmFudHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvODA0LW93ZW4taGFsbGdyZW4iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBKZXN1cyBRdWV6YWRhLUd1aWxsZW4iIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJiMWxLSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tZGUyZDk4ZjhhYmY4ODU4MjM5N2YxYTE1ZTliZWNhZWJmZmJhNDU0Ny9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9QMTIyMDQzNC5KUEciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEplc3VzIFF1ZXphZGEtR3VpbGxlbgogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgSmVzdXMgUXVlemFkYS1HdWlsbGVuIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2plcXVlemEiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgSmVzdXMgUXVlemFkYS1HdWlsbGVuIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vamVzdXNxdWV6YWRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEplc3VzIFF1ZXphZGEtR3VpbGxlbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJiMk5LSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYTdmYzlmZGVjZmQ2NTFmZjE1ZTUzOTJmYzNjNWUwNTdkYzVmNmFlZS9KZXN1c1Jlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBTb2Z0d2FyZSBEZXZlbG9wZXIsIGZvcm1lciBsZWFkIG1hY2hpbmlzdCBpbiB0aGUgbWFudWZhY3R1cmluZyBpbmR1c3RyeSwgZW5qb3llZCBkZXNpZ25pbmcsIGRldmVsb3BpbmcgYW5kIGltcGxlbWVudGluZyBwcm9ncmFtcyBhbmQgYXBwbGljYXRpb25zIHRoYXQgcmVzcG9uZCB0byBjdXN0b21lciBuZWVkcyBhbmQgcHJvdmlkZSBpbm5vdmF0aXZlIHNvbHV0aW9ucyB0byBjb21tb24gcHJvYmxlbXMuIEltcHJvdmVkIGV4aXN0aW5nLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFuZHJvaWQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU3dpZnQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgS290bGluCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIGlPUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFbmdpbmVlcmluZyBNYW5hZ2VtZW50CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRGphbmdvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFB5dGhvbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTWVjaGFuaWNhbCBvciBJbmR1c3RyaWFsIEVuZ2luZWVyaW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzc3Ny1qZXN1cy1xdWV6YWRhLWd1aWxsZW4iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBUb21teSBOaWV1d2VuaHVpcyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRVRkpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS03ZDQ3NzZlZGY2ZjEzOGI4Y2QwMDk2ZTBjZmI5NjQ1NzNkNGNmMzkwL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL01lc3NhZ2VzJTIwSW1hZ2UoMjUxMTgwOTc4OSkucG5nIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBUb21teSBOaWV1d2VuaHVpcwogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgVG9tbXkgTmlldXdlbmh1aXMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdHNuaWV1d2VuIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIFRvbW15IE5pZXV3ZW5odWlzIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vdGhvbWFzbmlldXdlbmh1aXMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgVG9tbXkgTmlldXdlbmh1aXMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCZFVWSklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWM0MjcxODhmMjQ3OWVlNzIwZmE0ZTQ5MjQyZTRiNjU0NWQxZGU3NWIvTmlldXdlbmh1aXMlMjBSZXN1bWUlMjAyMDIxLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEFsbCBteSBsaWZlIEkgaGF2ZSBiZWVuIHBhc3Npb25hdGUgYWJvdXQgdHdvIHRoaW5nczogYmVpbmcgYSBwb3NpdGl2ZSBhbmQgcmVsaWFibGUgcmVzb3VyY2UgZm9yIHRoZSBwZW9wbGUgYXJvdW5kIG1lIGFuZCBpbnRlcnByZXRpbmcgZGF0YSB0byBzb2x2ZSBjb25mbGljdHMgYW5kIGFuc3dlciBxdWVzdGlvbnMuIEkgaGF2ZSBiZWVuIGZvcnR1bmF0ZSB0byBoYXZlIGEgd2VhbHRoIG9mIHByb2Zlc3Npb25hbCBvcHBvcnR1bml0aWUuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQmFzaAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWRpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYWZhcmkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRmlyZWZveAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXZWJwYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyZWxsbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIExpbmtlZEluCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdvb2dsZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ2hyb21lCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUHl0aG9uCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBEamFuZ28KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9uZ29EQgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFXUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRGVmZW5zZSAmYW1wOyBTcGFjZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBFbnZpcm9ubWVudGFsIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE1pbGl0YXJ5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzQ1OC10b21teS1uaWV1d2VuaHVpcyI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEp1bGlhIEl3aW5za2kiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkR05FSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMzQzMTZiMGM4ZWIwOWIyMjE5YjU4MjkwZDE1MGUyZjkxODFkZGMzNy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9qX2dyZWVuX2hlZGdlLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgSnVsaWEgSXdpbnNraQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBTb2Z0d2FyZSBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBKdWxpYSBJd2luc2tpIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2pnaXdpbnNraSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBKdWxpYSBJd2luc2tpIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vanVsaWEtaXdpbnNraS04OTg1NDAxMzgiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgSnVsaWEgSXdpbnNraSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhVTFKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tOTk1ZDU4ODY1NmYzYTE2MjgzNWNkYzc5MjE4Nzg5ZTQwNDhjYWZkYi9KdWxpYV9Jd2luc2tpLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEFzIGEgZ29hbC1vcmllbnRlZCBpbml0aWF0b3IsIEkgYnJpbmcgbXlzZWxmIGZvcndhcmQgdG8gZGlyZWN0IHRlYW1zIGFuZCBjYW4gYmUgZm91bmQgZXhjaXRlZGx5IGltcGxlbWVudGluZyBuZXcgaWRlYXMuIFdpdGggYSBkaXZlcnNlIGJhY2tncm91bmQgaW4gY3VzdG9tZXIgc2VydmljZSwgbGVhZGVyc2hpcCwgYW5kIHByb2plY3QgbWFuYWdlbWVudCAtLSBmcm9tIG15IHRpbWUgc3BlbnQgYXQgbGFyZ2UgY29ycG9yYXRpb25zIGEuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdlYnBhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVmlzdWFsIFN0dWRpbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTbGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOcG0KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWFuYWdlbWVudAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENvbmZsdWVuY2UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FsZXNmb3JjZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZ1ZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBqUXVlcnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWR1eAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQWlybGluZXMvQXZpYXRpb24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQ29uc3VtZXIgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzk5LWp1bGlhLWl3aW5za2kiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBBbGV4IFRob21wc29uIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY0hOSElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWUxM2JhZGFjZjIxNzg2NjIyODc5NThlZjY3MTZmNjVjNGU3ZTM4NTgvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvQVRfSGVhZFNob3QuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBBbGV4IFRob21wc29uCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQWxleCBUaG9tcHNvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9hbGV4dGhvbXBzb24yMDciPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQWxleCBUaG9tcHNvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2FsZXgtdGhvbXBzb24taGUtaGltIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEFsZXggVGhvbXBzb24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY1c5SElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWVlMGY3MGFhZDcyNjRkOWIyYzc0ZWMwMWY2NWMxYjlhODdjN2ZmZWYvQWxleCUyMFRob21wc29uJTIwKDEpLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEkgYW0gYSBmcm9udGVuZCBzb2Z0d2FyZSBlbmdpbmVlciB3aXRoIGEgYmFja2dyb3VuZCBpbiBhcHBsaWVkIG1hdGhlbWF0aWNzIGFuZCBtYW5hZ2luZyB0ZWFtcy4gSSBsb3ZlIHNvbHZpbmcgcHJvYmxlbXMgYW5kIHdvcmtpbmcgYXMgYSB0ZWFtIHRvIGFjaGlldmUgb3VyIGdvYWxzIGFuZCBjcmVhdGUgc29mdHdhcmUgdGhhdCBiZW5lZml0cyBvdGhlcnMuIEkgZ2V0IGV4Y2l0ZWQgYWJvdXQgbmV3IGNoYWxsZW5nZXMsIGFuZCBlbmouLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTUFUTEFCCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdlYnBhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBJbnRlcmZhY2UgRGVzaWduIC8gVUkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBFeHBlcmllbmNlIERlc2lnbiAvIFVYCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHb29nbGUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDaHJvbWUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FhcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDaXZpbCBFbmdpbmVlcmluZwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIb3NwaXRhbGl0eQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZWNyZWF0aW9uYWwgRmFjaWxpdGllcyBhbmQgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVzdGF1cmFudHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzg5LWFsZXgtdGhvbXBzb24iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBOaWtraSBQZXRlcnNlbiIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRWRkdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS01NWI0NGEzMTBlMTIzMzhmMDUyM2I0ZGZlNDIxMTdmZWVlODkxYjFjL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzE0NDI0OTExXzEwMjA4ODg3NDI3MzYwNDIzXzQxNzc4OTcxMDMyODYyNzg3Mjhfby5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIE5pa2tpIFBldGVyc2VuCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgTmlra2kgUGV0ZXJzZW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vUGlrbmlra2kiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgTmlra2kgUGV0ZXJzZW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9OaWtraXBldGVyc2VuY3NtIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIE5pa2tpIFBldGVyc2VuIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRVMUdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1mNWI5MjM3ZGJjYjhjMjdiZTNkZTE1NGYzYWYyMjM2Njc3MDQ0ZWZjL05pa2tpJTIwUGV0ZXJzZW4lMjBFbmclMjBSZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgV29ya2luZyBhcyBhIGZ1bGwgc3RhY2sgZW5naW5lZXIgcHJldmlvdXNseSAoc3BlY2lhbGl6aW5nIGluIFJlYWN0IGZyb250ZW5kIGFuZCBSdWJ5L1JhaWxzIGJhY2tlbmQpLCBOaWtraSBnYWluZWQgdmFsdWFibGUgc2tpbGxzIGluIFRERCwgZGVwbG95aW5nIG1vbnRobHksIHdvcmtpbmcgb24gYSBkaXN0cmlidXRlZCB0ZWFtLCBhbmQgYXMgYSBwZXJpb2RpYyBTY3J1bSBNYXN0ZXIgKENTTSkuIEF0dGVuZGluZyBUdXJpbmcgd2FzIC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWdWUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb2NoYQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENvbmZsdWVuY2UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTWVkaWNhbCBQcmFjdGljZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBOb24tUHJvZml0IE9yZ2FuaXphdGlvbiBNYW5hZ2VtZW50CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzQwMC1uaWtraS1wZXRlcnNlbiI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEpvc2VwaCBCdWRpbmEiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkR05LSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tZjg4MmQ0ZjUxOWNlOTQ3NDRiOTA3OTk4NzY3M2UxNWE4ZmQ0MGM4Zi9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy81ODFDMzZGRi05Nzc2LTRCQkEtQTE4QS0zOUFGRUU5NTYwNkFfMV8yMDFfYS5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBKb3NlcGggQnVkaW5hCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrLUVuZCBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBKb3NlcGggQnVkaW5hIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2pvc2VwaGJ1ZGluYSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBKb3NlcGggQnVkaW5hIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vam9zZXBoLWJ1ZGluYSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBKb3NlcGggQnVkaW5hIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRFbEtJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1mNGFiOWVhNDdkZmQ4MDAzMjdlZTA3ZmI2YjUwNGNmOTFkOWQyODJkL0pvc2VwaCUyMEJ1ZGluYSYjMzk7cyUyMHJlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBJIGFtIGEgYmFja2VuZCBzb2Z0d2FyZSBlbmdpbmVlciB0aGF0IHN0YXJ0ZWQgdGhlaXIgaW50ZXJlc3QgaW4gdGVjaCB3b3JraW5nIGFzIGEgc29sZGVyaW5nIHRlY2huaWNpYW4gYXQgYSBtb2R1bGFyIHN5bnRoZXNpemVyIGNvbXBhbnkuIEF0IHRoaXMgY29tcGFueSBJIHdvcmtlZCBhbG9uZ3NpZGUgc2VsZiB0YXVnaHQgZWxlY3RyaWNhbCBlbmdpbmVlcnMgdGhhdCBidWlsdCBncmVhdCBwcm9kdWN0cywgd2hpY2ggb3BlbmVkIG15Li4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSU3BlYwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSYWlscwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQeXRob24KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJlc3RhdXJhbnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzc3OS1qb3NlcGgtYnVkaW5hIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQ2h1Y2sgTW9ycmlzIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCZFZsSElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTYyYmE3MTRhYjEzMDAwMjgxYzI1NWJlY2EwZjMzY2NlYjNjZDg4NTkvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvSU1HXzA0NTguanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBDaHVjayBNb3JyaXMKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBTb2Z0d2FyZSBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQ2h1Y2sgTW9ycmlzIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3BlcmN3b3JsZCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBDaHVjayBNb3JyaXMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9jaHVjay1tb3JyaXMtNTY4MTk5MTgiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgQ2h1Y2sgTW9ycmlzIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNEQkpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS05NTIzOTAxOTRhZWQ0NzczM2I4OGYwMTM5Y2E1OGVhZTlhZjlmODczL0NodWNrJTIwTW9ycmlzLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEFzIGEgcHJpb3IgZmFjaWxpdGF0b3IsIEkgYW0gZHJpdmVuIHRvIHVubG9jayBodW1hbiBwb3RlbnRpYWwgYnkgd2F5IG9mIHByb3ZpZGluZyBhbiBvcHBvcnR1bml0eSBmb3IgZ3Jvd3RoLiAgSSBhbSBpbnZvbHZlZCBpbiBsaXRlcmFjeSBhbmQgdGhlcmFweSBuZXR3b3JrcywgbG92ZSBzb3VuZCBkZXNpZ24sIGFuZCBoYXZlIGZvdW5kIHRoYXQgSSBhbSBtb3N0IGVmZmVjdGl2ZSBjdXJyZW50bHkgd2hlbiB0cmFuc2xhdGluZyBiZXQuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRDMuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDKysKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgalF1ZXJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTbGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENocm9tZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWdWUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIENvbnN0cnVjdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBFbnRlcnRhaW5tZW50CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIExvZ2lzdGljcyBhbmQgU3VwcGx5IENoYWluCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE1hcmtldGluZyBhbmQgQWR2ZXJ0aXNpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTXVzaWMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUGVyZm9ybWluZyBBcnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFdyaXRpbmcgYW5kIEVkaXRpbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzkyLWNodWNrLW1vcnJpcyI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIENvbm5vciBBbmRlcnNvbi1MYXJzb24iIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkVWxHSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tOWFmYWQxY2ZhMmNiYjJiOGQ5Y2I4NjhlZmQ3ZjlhMzg5NTNhYmZiYy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9oZWFkc2hvdC5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBDb25ub3IgQW5kZXJzb24tTGFyc29uCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQ29ubm9yIEFuZGVyc29uLUxhcnNvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9Db25ub3JBbmRlcnNvbkxhcnNvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBDb25ub3IgQW5kZXJzb24tTGFyc29uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vY29ubm9yLWFuZGVyc29uLWxhcnNvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBDb25ub3IgQW5kZXJzb24tTGFyc29uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmMzTkpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS05ZjQ3MmUxNmI4OGQzMTM3NjFmMDQ3NjdkOThkNTJiNzViNDc1MWEwL0Nvbm5vciUyMEFuZGVyc29uLUxhcnNvbiUyMFJlc3VtZSUyMDYtOC5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBBZnRlciA1IHllYXJzIG9mIHByb2JsZW0gc29sdmluZyBhbmQgcHJvY2VzcyBvcHRpbWl6YXRpb24gdmlhIGpvYnMgaW4gZmFjaWxpdGllcyBtYWludGVuYW5jZSBhbmQgaW5kdXN0cmlhbCBwcm9kdWN0aW9uIEkgYW0gdXRpbGl6aW5nIG15IHNraWxscyB0byBoZWxwIGRlc2lnbiBhbmQgaW1wbGVtZW50IGVmZmljaWVudCwgY3JlYXRpdmUgdXNlciBleHBlcmllbmNlcy4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEVuenltZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGYWNpbGl0aWVzIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzc5My1jb25ub3ItYW5kZXJzb24tbGFyc29uIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgRG91Z2xhcyBXZWxjaG9ucyBJSSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJqQkhJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0yNzhjNWE4ZjA4M2RlOTFkOGViOTY5MDJjNjdlNmUxZjkyOWE3NDQ3L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0ZJTkFMJTIwRG91ZyUyMC0lMjBTLkUuLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgRG91Z2xhcyBXZWxjaG9ucyBJSQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgU29mdHdhcmUgRW5naW5lZXIgLyBCYWNrZW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIERvdWdsYXMgV2VsY2hvbnMgSUkiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vRG91Z1dlbGNob25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIERvdWdsYXMgV2VsY2hvbnMgSUkiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9Eb3VnbGFzV2VsY2hvbnMiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgRG91Z2xhcyBXZWxjaG9ucyBJSSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjRTFKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tOGE1NTg5NGUzZTM3NDg2OWJiNGEzZWFjNjdjYzBlMGI2ZDM1MzQzMi9Eb3VnbGFzJTIwV2VsY2hvbnMlMjBJSSUyMHJlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBGb3JtZXJseSBhbiBFbGVjdHJpY2FsIFByb2plY3QgTWFuYWdlciBmb3IgUm93YW4gRWxlY3RyaWMgaW4gU2FuIERpZWdvLCBDQS4gSSB3b3JrZWQgbXkgd2F5IHVwIGZyb20gYXBwcmVudGljZSB0byBwcm9qZWN0IG1hbmFnZXIgb3ZlciB0aGUgOSsgeWVhcnMgSSB3YXMgdGhlcmUuCkkgd2FzIG9yaWdpbmFsbHkgZHJhd24gdG8gcHJvZ3JhbW1pbmcgaW4gaGlnaCBzY2hvb2wgd2hlbiBnYXZlIG1lIGFuIEhUTUwvQ1NTIGNvZGluLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSU3BlYwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSYWlscwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1hbmFnZW1lbnQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIENvbnN0cnVjdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83NzAtZG91Z2xhcy13ZWxjaG9ucy1paSI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIE1heCBCcmVnbWFuIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY1c5RElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWY0MTEwNjJmZTU2NTVlNzU4ZjgwYTFkMDhmYjJiZDNiMzM5MGIzNWMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvUHJvZmlsZS1waWMtb25lLmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIE1heCBCcmVnbWFuCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRGV2ZWxvcGVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIE1heCBCcmVnbWFuIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL01heDk1NDUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgTWF4IEJyZWdtYW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9tYXgtYnJlZ21hbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBNYXggQnJlZ21hbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJia1ZLSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tOWI4NzI2ZjBmYjQxZjM3YTg2YzIyY2YyNWNkMTI4MDdiNjQyMDAzNy9NYXglMjBCcmVnbWFuJTIwUmVzdW1lJTIwN18xMy5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBQaGlsb3NvcGh5IGlzIHRoZSBhcnQgb2YgbGVhcm5pbmcgYW5kIEkgaGF2ZSBiZWVuIGltbWVuc2VseSBsdWNreSB0byBmaW5kIGFub3RoZXIgZmllbGQgaW4gc29mdHdhcmUgZGV2ZWxvcG1lbnQgdGhhdCByZXN0cyBvbiB0aGF0IHNhbWUgY29yZSBwcmluY2lwbGUuIERldmVsb3BtZW50IGlzIHNpbWlsYXIgdG8gcGhpbG9zb3BoeSBpbiB0aGF0IGl0IGlzIG9mdGVuIGxlYXJuaW5nIGFib3V0IGxlYXJuaW5nLiBBcyBhIGxpZmVsb25nLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEJhc2gKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgalF1ZXJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIEFyY2hpdGVjdHVyZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVmlzdWFsIFN0dWRpbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR29vZ2xlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEVudGVydGFpbm1lbnQKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRm9vZCAmYW1wOyBCZXZlcmFnZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTGVnYWwgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUGVyZm9ybWluZyBBcnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJlc3RhdXJhbnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzc1MC1tYXgtYnJlZ21hbiI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEFhcm9uIEZvdWNoZWF1eCIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRUaEdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS00MjdiYjkxNzQ3NDY2Yjg0ZjY2NDBhZDk4NTI1Njc2ODc2N2IzYWVmL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL2Fhcm9uLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQWFyb24gRm91Y2hlYXV4CiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udCBFbmQgU29mdHdhcmUgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQWFyb24gRm91Y2hlYXV4IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0Fmb3VjaGVhdXgiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQWFyb24gRm91Y2hlYXV4IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vYWFyb24tZm91Y2hlYXV4LTg5MTYyNjIwNyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBBYXJvbiBGb3VjaGVhdXgiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY3pCSklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTgxYzJjZGQ4MmYzMTMzYzJmZTM0OGU3NGViMmE4ZjIzZDg2ZmMxOGIvQUYlMjByZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgT3ZlciB0aGUgbGFzdCAxNSB5ZWFycyBJIGhhdmUgd29ya2VkIHByaW1hcmlseSBhcyBhIEdNIGZvciBsYXJnZXIgcmV0YWlsZXJzIGxpa2UgSG9tZSBEZXBvdCBhbmQgTG93ZXMuIEluIHRoYXQgdGltZSBJIGhhdmUgZm9jdXNlZCBvbiBkZXZlbG9waW5nIG15IHNraWxsIHNldCBpbiBwcm9qZWN0IG1hbmFnZW1lbnQgYnkgbGVhZGluZyBtdWx0aXBsZSBzdG9yZSBvcGVuaW5ncy8gcmVtb2RlbHMgYW5kIGxhcmdlIHNjYWxlIGNvbXBhbi4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQcm9kdWN0IE1hbmFnZW1lbnQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmV0YnJhaW5zCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXZWJwYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmVsbG8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWFuYWdlbWVudAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1lbnRvcnNoaXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSHVtYW4gUmVzb3VyY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJldGFpbAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83ODgtYWFyb24tZm91Y2hlYXV4Ij4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQW5kcmV3IEpvaG5zdG9uIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY0UxSUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTcyMjhhN2EzNTA4Yjc0NjI0N2Y0YTQzZDI4NjYxODc5NmZiN2IxY2MvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvSU1HXzEyNzEuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQW5kcmV3IEpvaG5zdG9uCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrLUVuZCBEZXZlbG9wZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQW5kcmV3IEpvaG5zdG9uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2F2am9obnN0b24iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgQW5kcmV3IEpvaG5zdG9uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vYXZqb2huc3RvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBBbmRyZXcgSm9obnN0b24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCZFRSS0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWRkOWJhZTQ4MTExNGI1YzJhMzM0ZTIwZjM5MDI1YTIwNGFlODdkYjQvQW5kcmV3JTIwSm9obnN0b24lMjBSZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgRmlyc3QgYW5kIGZvcmVtb3N0LCBJIGFtIHNvbWVvbmUgd2hvIGlzIHBhc3Npb25hdGUuIFdoZXRoZXIgaXQncyBhYm91dCBteSBmcmllbmRzIGFuZCBmYW1pbHksIG15IG5lcmR5IGludGVyZXN0cywgb3IgdGhlIHdheSBJIGFwcHJvYWNoIG15IGxpZmUgYW5kIHdvcmssIEkgbGl2ZSBteSBsaWZlIHdpdGggY29tcGFzc2lvbiwgZW1wYXRoeSBhbmQgdHJ1ZSBjYXJlIGZvciBteSBwZXJzb25hbCBlZmZlY3Qgb24gc29jaWV0eSBhbmQgdC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSU3BlYwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSYWlscwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQVIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXBwbGUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZpc3VhbCBTdHVkaW8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIExpbmtlZEluCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdvb2dsZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDaHJvbWUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNZW50b3JzaGlwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBdG9tCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTWVudGFsIEhlYWx0aCBDYXJlCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJlc3RhdXJhbnRzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFdhcmVob3VzaW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzc2NC1hbmRyZXctam9obnN0b24iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBKb3JkYW4gQmVjayIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmIzZEZJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0zZDgwNDQxNjg1YjIxNzliNGE4NjI2NzQ2YjUzYzE2NzM4Y2U2NWViL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL2JyYWlkcy5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEpvcmRhbiBCZWNrCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBEZXZlbG9wZXIgQkUgUHJvZ3JhbQogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBKb3JkYW4gQmVjayIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9qb3JkYW5mYmVjazA1MjgiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgSm9yZGFuIEJlY2siIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9qb3JkYW4tZi1iZWNrIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEpvcmRhbiBCZWNrIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRYTklJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS03NmFkYzA1NzU5MmY5MzgxMzcyYjRlODdmNzNhZjU5Y2VjZjEzNzk1L0pvcmRhbiUyMEJlY2slMjAoNikucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgSSBsb3ZlIGxlYXJuaW5nIGFib3V0IG5ldyB0aGluZ3MsIGFuZCBkaXZpbmcgZGVlcCBpbnRvIHRoZSBtdWx0aXBsZSBwcm9jZXNzZXMgdGhhdCBjYW4gbWFrZSBhIHRoaW5nIGNvbXBsZXguIFRoZSBtb3ZlbWVudHMgdGhhdCBtYWtlIGEgdGhpbmcgYSBwcm9jZXNzLCBub3QgYW4gZXZlbnQuIFNvLCB3aGF0IHNpbWlsYXIgbGVzc29ucyBjYW4gYmUgbGVhcm5lZCBmcm9tIHdyaXRpbmcgYSBzb25nLCBhbmQgYWxsIGl0cyBjb2hlc2l2ZS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTU0gKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FmYXJpCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSU3BlYwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSYWlscwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQVIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXBwbGUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTbGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYWFTCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENocm9tZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYWFzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR3JhcGhRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNeVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ3liZXJzZWN1cml0eQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFB5dGhvbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRXZlbnRzIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZhcm1pbmcKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRm9vZCAmYW1wOyBCZXZlcmFnZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRm9vZCBQcm9kdWN0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhvc3BpdGFsaXR5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIExlaXN1cmUsIFRyYXZlbCAmYW1wOyBUb3VyaXNtCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIE11c2ljCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJlbmV3YWJsZXMgJmFtcDsgRW52aXJvbm1lbnQKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVzdGF1cmFudHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmV0YWlsCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFdpbmUgYW5kIFNwaXJpdHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzc4LWpvcmRhbi1iZWNrIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgS2F0eSBMYSBUb3VyIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY1RoSElpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTg2MzkyYTM3ZWI2M2Y1MWYyZjJjMTE4M2NkMjRiMWI0NDdkZjNmNjgvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvX01HXzA4MDYtMDMtMDIuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgS2F0eSBMYSBUb3VyCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBCYWNrLUVuZCBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBLYXR5IExhIFRvdXIiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20va2xhdG91cjMyNCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBLYXR5IExhIFRvdXIiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9rbGF0b3VyMzI0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEthdHkgTGEgVG91ciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjM2RKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tN2UyOWY0ZTY4ODMwNmM4MTQ5ZjA2MDliMTBlZTc2OTRkNGVjZmJlYi9LYXR5JTIwTGElMjBUb3VyJiMzOTtzJTIwUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEkgYW0gYSBzZWxmLW1vdGl2YXRlZCBzb2Z0d2FyZSBkZXZlbG9wZXIgc2Vla2luZyB0byBjb25uZWN0IG15IGRpdmVyc2UsIHByZXZpb3VzIGV4cGVyaWVuY2VzIHRocm91Z2ggc29mdHdhcmUgZGV2ZWxvcG1lbnQuIEkgYW0gZHJpdmVuIGluIHRoaXMgZmllbGQgYnkgbXkgbG92ZSBmb3Igc29sdmluZyBsb2dpYyBwcm9ibGVtcywgaGFuZGxpbmcgbGFyZ2UgZGF0YXNldHMgYW5kIG15IGFiaWxpdHkgdG8gZWZmZWN0aXZlbHkgY29tbXUuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgalF1ZXJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSU3BlYwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSGVyb2t1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIExpbmtlZEluCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNeVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgV2luZSBhbmQgU3Bpcml0cwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83ODAta2F0eS1sYS10b3VyIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgRWxpemFiZXRoIEhhaG4iIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkbTlHSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNjQ2ZDc5NTY2MDVmYmVjZWE4NDdlNmIzMWQyZjg5NGRhYzNjYWQ0MC9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9TY3JlZW4lMjBTaG90JTIwMjAyMS0wNC0wNiUyMGF0JTIwOS4zMi41OCUyMEFNLnBuZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgRWxpemFiZXRoIEhhaG4KICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEZyb250LUVuZCBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBFbGl6YWJldGggSGFobiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9lbGl6aGFobiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBFbGl6YWJldGggSGFobiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2VsaXphYmV0aC1zLWhhaG4iPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgRWxpemFiZXRoIEhhaG4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYnpoSklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTIzMzRkMWI0OTBlMWIwY2YyYjYwZTczYTYyM2JlODdkN2VmYjEzNTcvRWxpemFiZXRoX0hhaG5fU29mdHdhcmVfRW5naW5lZXI2XzYucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgICBBcyBhIGRldmVsb3BlciwgSSBoYXZlIGEgbGFyZ2UgZm9jdXMgb24gcGVvcGxlIGZpcnN0IGFuZCBmb3JlbW9zdC4gSSBjb25zaWRlciB0aGUgdXNlcnMgb2YgdGhlIHByb2R1Y3RzIEkgd29yayBvbiBhbmQgdGhlIHRlYW0gdGhhdCBJIHdvcmsgd2l0aCB0byBidWlsZCB0aGVzZSBwcm9kdWN0cy4gSSB3YW50IHRvIGJyaW5nIGluY2x1c2l2aXR5IGFuZCBlbXBhdGh5IGludG8gbXkgd29yayB3aXRoIHRlYW1zIGFuZCBoZWxwIGZvcy4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVmlzdWFsIFN0dWRpbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJlbGxvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1hbmFnZW1lbnQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhYXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRWR1Y2F0aW9uIE1hbmFnZW1lbnQKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSW5kaXZpZHVhbCAmYW1wOyBGYW1pbHkgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVjcmVhdGlvbmFsIEZhY2lsaXRpZXMgYW5kIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFN0YWZmaW5nIGFuZCBSZWNydWl0aW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzc5NC1lbGl6YWJldGgtaGFobiI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIENhbWVyb24gTWFja2ludG9zaCIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmREaEVJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS0xOWE3YzY4ZjY4MmZmODg1MDZhMDM3ZWNlYjE3OGViZjFkNzZhMGExL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL2NhbSUyMGhlYWRzaG90LkpQRyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQ2FtZXJvbiBNYWNraW50b3NoCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBDYW1lcm9uIE1hY2tpbnRvc2giIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vY2JtYWNraW50b3NoIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIENhbWVyb24gTWFja2ludG9zaCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2NhbWVyb24tbWFja2ludG9zaC0xMzQxYjE3MyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBDYW1lcm9uIE1hY2tpbnRvc2giIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCZEhkSklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWMzMDdkYzE1MjhhNDUzNzJlMzliOGE2ZDgyYjVkOGVjNDFkY2I2MjUvQ2FtZXJvbiUyMEIlMjBNYWNraW50b3NoJTIwUkVTVU1FLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEkgcmVtZW1iZXIgdmVyeSBjbGVhcmx5IHRoZSBkYXkgSSB3cm90ZSBteSBmaXJzdCBsaW5lcyBvZiBIVE1MIG9uIGFuIGVNYWMgZHVyaW5nIG15IDd0aCBncmFkZSBJVCBjbGFzcy4gSSByZW1lbWJlciBleGFjdGx5IHdoZXJlIEkgd2FzIHNpdHRpbmcgaW4gdGhlIGNvbXB1dGVyIGxhYiwgd2hvIHRoZSB0ZWFjaGVyIHdhcyBhbmQgdGhlIG5hbWUgb2YgdGhlIHN0dWRlbnQgc2l0dGluZyByaWdodCBuZXh0IHRvIG1lLiBJIHJlbWVtYmUuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVkdXgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWaXN1YWwgU3R1ZGlvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOcG0KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb2NoYQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FsZXNmb3JjZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBCcm9hZGNhc3QgTWVkaWEKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTWFya2V0aW5nIGFuZCBBZHZlcnRpc2luZwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBPbmxpbmUgTWVkaWEKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUHVibGljIFJlbGF0aW9ucyBhbmQgQ29tbXVuaWNhdGlvbnMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVzZWFyY2gKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgV3JpdGluZyBhbmQgRWRpdGluZwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83OTEtY2FtZXJvbi1tYWNraW50b3NoIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWZlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgTWFyaWthIFNoYW5haGFuIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY2xsSUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWViY2E4ZDdlYzRlY2M3N2M5ZGQzOGY3YTBkOTkzYmU4NDMzYmZjYmUvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvN0NBRDJDREQtQUQyNi00NEMxLTg5NDYtNjAyQjFGNEUxQjRCLmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIE1hcmlrYSBTaGFuYWhhbgogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQtRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIE1hcmlrYSBTaGFuYWhhbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9tb25zaGFuIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIE1hcmlrYSBTaGFuYWhhbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL21hcmlrYS1zaGFuYWhhbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBNYXJpa2EgU2hhbmFoYW4iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYm5OS0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTlmZjMzNjdiZjhlZjY0ZjQ3ZWRkYTZmODZmMmYwZWMzNmY0M2E0NGIvMjAwNjA0X1Jlc3VtZS5kb2N4JTIwKDEpLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgICAgSW4gMjAxOCBJIHBhY2tlZCBteSBsaWZlIGluIGEgc3VpdGNhc2UgdG8gbW92ZSB0byBDaGluYSB0byBmb2xsb3cgbXkgZGVzaXJlIGZvciBtYXN0ZXJ5IG9mIHRoZSBsYW5ndWFnZSBhbmQgZGl2ZSBpbnRvIHRoZSBleHBhdCBsaWZlc3R5bGUuIEFzIGFuIEVTTCBUZWFjaGVyIChFbmdsaXNoIGFzIGEgU2Vjb25kIExhbmd1YWdlKSBpbiBCZWlqaW5nLCBJIGVxdWlwcGVkIG15IHN0dWRlbnRzIHdpdGggZnVuY3Rpb25hbCBsYW5ndWEuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVmlzdWFsIFN0dWRpbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRXhwcmVzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFZ1ZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFXUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQXBwYXJlbCAmYW1wOyBGYXNoaW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFByaW1hcnkvU2Vjb25kYXJ5IEVkdWNhdGlvbgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS84MDEtbWFyaWthLXNoYW5haGFuIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgQmVuIEZ1bHRvbiIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRGbEVJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS03ZjE1M2YxOGU5NGJiMWNhMjhmMjE4NjU4NDdjZGQwMTI0MWFmY2ZkL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0lNR18yNzM4LkpQRyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgQmVuIEZ1bHRvbgogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQmVuIEZ1bHRvbiIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9iLWVuamktY21kIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEJlbiBGdWx0b24iIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9iZW4tZnVsdG9uLWIyOTI3NzIwNiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBCZW4gRnVsdG9uIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmExRkpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1kNzQxYjMxY2M1YTIwMjBjM2NiYTRiNWFjZjIwYWI5MTk5OWRjMjgxL0JlbnNSZXN1bWUyMDIxLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIFNvZnR3YXJlIERldmVsb3BlciB3aXRoIGEgZmlyc3QgaW5zdGluY3QgdG8gCi0gSnVtcCBpbgotIEdldCBzdHVjawotIFB1c2ggdGhyb3VnaApNeSBiaWdnZXN0IHBhc3Npb24gaXMgbGVhcm5pbmcsIGZpcnN0IGFuZCBmb3JlbW9zdC4gVGhlIGJpZ2dlciB0aGUgY2hhbGxlbmdlLCB0aGUgbW9yZSBJIGxvdmUgZ2V0dGluZyBpbnZlc3RlZCBhbmQgaW50ZWdyYXRpbmcgbXlzZWxmIGludG8gdGhlIHRlYW0KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQysrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgS3ViZXJuZXRlcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBEb2NrZXIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUHl0aG9uCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFXUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIE5vbmUgbGlzdGVkCiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvNzY3LWJlbi1mdWx0b24iPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBNaWNoYW5uIFN0b25lciIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFITkpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS00YzgzZDBiMWIxNzk5NjUxOTVkNjM2NzIxYTU0NjE5MTk1YjY4OTYxL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzExMUIyNzVBLUNBQzItNDRGOC1BRUY4LTRBMjcxQTdFRTMxNC5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBNaWNoYW5uIFN0b25lcgogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQtRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIE1pY2hhbm4gU3RvbmVyIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL21pY2hhbm5zdG9uZXIiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgTWljaGFubiBTdG9uZXIiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9taWNoYW5uLXN0b25lciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBNaWNoYW5uIFN0b25lciIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkSE5KSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNjg3NTYwNTdjOTJhZjNjNGQ3NDJmNzc5OWI4NzI0N2YyOTY1MWIxZS9NaWNoYW5uLVJlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBBZnRlciBhIGxvbmcgY2FyZWVyIGluIHRoZSBjb2ZmZWUgaW5kdXN0cnksIHdlYXJpbmcgbWFueSBoYXRzLCBhbmQgbm90IGtub3dpbmcgd2hhdCBJIHdhbnRlZCB0byBiZSB3aGVuIEkgImdyZXcgdXAiLCBJIGRlY2lkZWQgaXQgd2FzIHRpbWUgdG8gbWFrZSBhIGNoYW5nZS4gS25vd2luZyB0aGF0IEkgYW0gYSBjdXJpb3VzLCBjcmVhdGl2ZSwgYW5kIGVtcGF0aGV0aWMgcGVyc29uLCBJIHVsdGltYXRlbHkgbGFuZGVkIG9uIGEgY2FyLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFkb2JlIElsbHVzdHJhdG9yCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWaXN1YWwgU3R1ZGlvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFF1YWxpdHkgQXNzdXJhbmNlIC8gUUEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWFuYWdlbWVudAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQWRvYmUgUGhvdG9zaG9wCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEZvb2QgJmFtcDsgQmV2ZXJhZ2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhvc3BpdGFsaXR5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFdob2xlc2FsZQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS84ODEtbWljaGFubi1zdG9uZXIiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBLbGF1ZGlhIFN0ZXdhcnQiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJka1ZKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYjJkZWEwMDRkZWY5NDhlNmY0YmM0ZjgzOTliMzkyZGQyZjZmYThkMy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9tZS5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBLbGF1ZGlhIFN0ZXdhcnQKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEtsYXVkaWEgU3Rld2FydCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9rbGF1ZGlhc3Rld2FydCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBLbGF1ZGlhIFN0ZXdhcnQiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9rbGF1ZGlhLXN0ZXdhcnQiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgS2xhdWRpYSBTdGV3YXJ0IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRrbEpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1lNDI1NDJlNTE1NzI5ZDRiOWM3NmY4OTg2NDc4ZjVmMGZhZmU4Y2UyL2tsYXVkaWFyZXN1bWUuZG9jeC5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBQYXNzaW9uYXRlIHNvZnR3YXJlIGRldmVsb3BlciB3aXRoIGEgZGVzaXJlIHRvIGltcHJvdmUgd2ViIGJhc2VkIGFwcGxpY2F0aW9ucyB0aGF0IGZvbGxvdyBvYmplY3Qgb3JpZW50ZWQgcHJvZ3JhbWluZyAoT09QKSBwcmluY2lwbGVzLiBJIGFtIGEgc3BlZWR5IGxlYXJuZXIgd2hvIGxvdmVzIHRoZSBzdGVwcyBvZiBkZWJ1Z2dpbmcgYW5kIHRlc3QtZHJpdmVuIGRldmVsb3BtZW50IChUREQpIGRlc2lnbi4gV2hlbiBubyBpbnN0cnVjLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSU3BlYwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSYWlscwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEJvb3RzdHJhcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBUgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBcHBsZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBJbnRlcmZhY2UgRGVzaWduIC8gVUkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVXNlciBFeHBlcmllbmNlIERlc2lnbiAvIFVYCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyZWxsbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENvbmZsdWVuY2UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ2hyb21lCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUHl0aG9uCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBCaW90ZWNobm9sb2d5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIENoZW1pY2FscwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXRhaWwKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvODYwLWtsYXVkaWEtc3Rld2FydCI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEFzaGlzaCBNYWxsYSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFsVkpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1iZDM1OWYzNmY2Y2NlNDY1OGNlZGU0ZGVjNGQxOWZlMTA5N2YxNTcxL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL3Byb2ZpbGUucG5nIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBBc2hpc2ggTWFsbGEKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIFNvZnR3YXJlIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEFzaGlzaCBNYWxsYSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9hc2lpc2lpIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEFzaGlzaCBNYWxsYSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2FzaWlzaWkiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgQXNoaXNoIE1hbGxhIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJFMUpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1kMDc3MTY4NzFhOTgxNzQyOTEyMWQ0OGVlMzk5ZDgyNGYyODU1NDVjL1BvcnRmb2xpb1Jlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICAxMCB5ZWFycyBhZ28sSSBoYWQgbm8gYWNjZXNzIHRvIHRlY2ghIElmIHlvdSBhcmUgd29uZGVyaW5nIGhvdyBhbnlvbmUgY291bGQgbWFrZSBpdCBpbiB0aGUgd29ybGQgdG9kYXkgd2l0aG91dCBpdC4uLiBzbyB3YXMgSS4gSW4gZmFjdCwgSSByZWFsaXplZCB0aGF0IEkgY291bGRuJ3QgYWR2YW5jZSBpbiBteSBsaWZlIHdpdGhvdXQgaXQuIE15IGdvYWwgdGhlbiB3YXMgdG8gbGVhcm4gZXZlcnl0aGluZyBJIGNvdWxkIGFiLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSW50ZWxsaUoKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJlbGxvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTbGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOcG0KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWFuYWdlbWVudAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBMaW5rZWRJbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEV4cHJlc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNZW50b3JzaGlwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBdG9tCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE15U1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBJbmZvcm1hdGlvbiBUZWNobm9sb2d5IGFuZCBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBJbnN1cmFuY2UKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUHJvZmVzc2lvbmFsIFRyYWluaW5nICZhbXA7IENvYWNoaW5nCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJlY3JlYXRpb25hbCBGYWNpbGl0aWVzIGFuZCBTZXJ2aWNlcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBSZXN0YXVyYW50cwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBUZWxlY29tbXVuaWNhdGlvbnMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvODY5LWFzaGlzaC1tYWxsYSI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEtlbmRhbGwgSGF3b3J0aCIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmFtOUtJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS04NmIzY2NmOWRkMmJiYzViNTcyOTJhYWE1MTA5NDQzZDliZjhmY2ZmL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL2tlbmRhbGwuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgS2VuZGFsbCBIYXdvcnRoCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBLZW5kYWxsIEhhd29ydGgiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20va2VuZGFsbGhhIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEtlbmRhbGwgSGF3b3J0aCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2tlbmRhbGxoYXdvcnRoIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEtlbmRhbGwgSGF3b3J0aCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjR3RKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYmUxM2Q3MTRmNTQwYWExY2Y0NWY0NTdkOWRlZjQyNDE5MjRiOGM0Ni9rZW5kYWxsaGF3b3J0aC1yZXN1bWUtUERGLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEknbSBhIEN1c3RvbWVyIFN1Y2Nlc3MgTWFuYWdlciB0dXJuZWQgU29mdHdhcmUgRW5naW5lZXIgd2l0aCBhIHBhc3Npb24gZm9yIGJ1aWxkaW5nIHVzZXItZnJpZW5kbHksIGltcGFjdGZ1bCBwcm9kdWN0cy4gSSB0aHJpdmUgb24gbGVhcm5pbmcgbmV3IHNraWxscyBhbmQgd2FzIGRyYXduIHRvIHNvZnR3YXJlIGVuZ2luZWVyaW5nIGJlY2F1c2UgSSBlbmpveSBwdXp6bGluZyB0aHJvdWdoIGNvbXBsZXggcHJvYmxlbXMuIEkgYW0gbG8uLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQmFiZWwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FhUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOcG0KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTm9kZS5qcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNb2NoYQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKYXZhU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENTUzMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQ29tcHV0ZXIgU29mdHdhcmUKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvODc3LWtlbmRhbGwtaGF3b3J0aCI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIEF1c3RpbiBBbmRyYWRlIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY0dOSklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTliODJlZGMxNjA1MGFlNGVlZjMyOGMwM2ZiMjRiNTBmODJlZTE5NjIvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvaGVhZHNob3QuanBnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBBdXN0aW4gQW5kcmFkZQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgQXVzdGluIEFuZHJhZGUiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vYXVzdGluYW5kcmFkZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBBdXN0aW4gQW5kcmFkZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2F1c3RpbmFuZHJhZGUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgQXVzdGluIEFuZHJhZGUiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYUVWS0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTcxYzIwOGE4ZTcwMWUzNmI2ZWY0Mjk1NzM1ZjhmOGMzMjYxMThkMzQvQXVzdGluX0FuZHJhZGVfUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEkgYW0gYW4gZXZvbHZpbmcgc29mdHdhcmUgZGV2ZWxvcGVyIGxvb2tpbmcgdG8gdHJhbnNsYXRlIG15IHBhc3Npb24gZm9yIGdhbWUgZGV2ZWxvcG1lbnQgaW50byBhIGZ1bGZpbGxpbmcgY2FyZWVyLiBNeSBsb3ZlIGZvciB2aWRlbyBnYW1lcyBoYXMgaW5zcGlyZWQgbWUgdG8gcHVyc3VlIGEgY2FyZWVyIGluIHNvZnR3YXJlIGRldmVsb3BtZW50LCBnYXJuZXJpbmcgdGhlIHNraWxscyBuZWNlc3NhcnkgZm9yIHdlYiBhcHBsaWNhdGkuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEJvb3RzdHJhcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBXZWJwYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJldGFpbAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS84NTItYXVzdGluLWFuZHJhZGUiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBKb3NlcGggSGFhcyIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRGRklJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1jZTZlZjdjZDJmMWMyZGEwNzY3YjY0ZmY0ODNiZGRkYzFmYWFmMDg0L2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzE1NzgzMzYyMzIwNDUuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgSm9zZXBoIEhhYXMKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10aXRsZSI+CiAgICAgICAgICAgICAgICAgIEJhY2stRW5kIEVuZ2luZWVyCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIEpvc2VwaCBIYWFzIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2pvZXloOTI5ODkiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgSm9zZXBoIEhhYXMiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9qb3NlcGh0aGFhcyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBKb3NlcGggSGFhcyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhMEZLSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tZjg4NzU0NWYyZTFhNzQzYjk0YTliZDBmNDYwZGJhMDVkM2YxOWM4OC9Kb3NlcGglMjBIYWFzJTIwUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIFNvZnR3YXJlIGVuZ2luZWVyIGFibGUgdG8gZW1wYXRoaXplIHdpdGggdXNlcnMsIGluZmx1ZW5jZSBkZXNpZ24gYW5kIGFyY2hpdGVjdHVyZSwgYW5kIHdyaXRlIGNsZWFuLCBtYWludGFpbmFibGUgY29kZS4gQnJpbmcgOSsgeWVhcnMgb2YgcHJvZHVjdCBtYW5hZ2VtZW50IGV4cGVyaWVuY2UgYW5kIG5ldyB0ZWNobmljYWwgc2tpbGxzZXQgYXMgYSB3ZWxsLXJvdW5kZWQgYW5kIGVmZmVjdGl2ZSBqdW5pb3IgZW5naW5lZXIuIFN0cm8uLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2tldGNoCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnlNaW5lCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFByb2R1Y3QgTWFuYWdlbWVudAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXRicmFpbnMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2ltcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCdXNpbmVzcyBEZXZlbG9wbWVudAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFSCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBWaXN1YWwgU3R1ZGlvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgSW50ZXJmYWNlIERlc2lnbiAvIFVJCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFVzZXIgRXhwZXJpZW5jZSBEZXNpZ24gLyBVWAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmVsbG8KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNsYWNrCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIExpbmtlZEluCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdvb2dsZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ29uZmx1ZW5jZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDaHJvbWUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FsZXNmb3JjZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYWFzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWVudG9yc2hpcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXRIdWIKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQXRvbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgalF1ZXJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRW50ZXJ0YWlubWVudAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBGaW5hbmNpYWwgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSW5mb3JtYXRpb24gVGVjaG5vbG9neSBhbmQgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgVGVsZWNvbW11bmljYXRpb25zCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzg1OC1qb3NlcGgtaGFhcyI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIFNhcmFoIExhbmUiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhMFZLSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tMGQ3OTVkYzNiNTVkMThkZTk3YTA3MzViNzc0N2JjNWU3MzMzZWNkNC9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9TY3JlZW4lMjBTaG90JTIwMjAyMS0wNi0wNiUyMGF0JTIwNS4yOC4xMCUyMFBNLnBuZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgU2FyYWggTGFuZQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgRnJvbnQtRW5kIFNvZnR3YXJlIERldmVsb3BlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBTYXJhaCBMYW5lIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3NhcmFobGFuZTgiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgU2FyYWggTGFuZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL3NhcmFobGFuZTgiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgU2FyYWggTGFuZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhelJLSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYTg4MzkwNWM0YzYwYzk3MGRiN2I3NzgyMDhmMmZlOGE1ZDFjNGY5Ni9TYXJhaCUyME4lMjBMYW5lJTIwUmVzdW1lLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEFzIGEgcHJldmlvdXMgcmVnaXN0ZXJlZCBudXJzZSB3aXRoIG92ZXIgdGVuIHllYXJzIG9mIGV4cGVyaWVuY2UsIEkgbWFkZSBtZWFuaW5nZnVsIGNvbm5lY3Rpb25zIHdpdGggcGVvcGxlIGRhaWx5LiAgSSBzdHJpdmUgdG8gdXRpbGl6ZSBteSBjcml0aWNhbCB0aGlua2luZyBhbmQgbG9naWMgc2tpbGxzIHRvIGNyZWF0ZSBhcHBsaWNhdGlvbnMgdGhhdCBudXJ0dXJlIGh1bWFuIGNvbm5lY3Rpb24gYW5kIGhlbHAgcGVvcGxlIGFjaGkuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRG9ja2VyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFR5cGVTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FzcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ1NTMwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDaHJvbWUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIZWFsdGgsIFdlbGxuZXNzIGFuZCBGaXRuZXNzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEhvc3BpdGFsICZhbXA7IEhlYWx0aCBDYXJlCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzg4Ny1zYXJhaC1sYW5lIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgRGlhbmEgQnVmZm9uZSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRHZEVJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS05ZjcwNDQ5ZDAxMTUwZTliNWYwZDc0NDE4OTI2ZjIxYWRjMmExMzJmL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjLzc5NDcxRkY0LTA4RUQtNEUyNi1CNjE2LUE3MTI3MzU1NzE0MS5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBEaWFuYSBCdWZmb25lCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBTb2Z0d2FyZSBFbmdpbmVlcgogICAgICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGlua3MgcHJvZmlsZS1zb2NpYWwtbGlua3MtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkdpdEh1YiBwcm9maWxlIGZvciBEaWFuYSBCdWZmb25lIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL0RpYW5hMjA5MjAiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgRGlhbmEgQnVmZm9uZSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2RpYW5hYnVmZm9uZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBEaWFuYSBCdWZmb25lIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNUUktJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS01NjI4OTc0MjgyMTgxNTRhZDE3ZDg1NDM4MWIzZDQ0MWU1ZTQ5MTMxL0RpYW5hJTIwQnVmZm9uZSUyMFJlc3VtZSUyMDIwMjElMjBNYXkucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgQXMgYSBCb2xpdmlhbiBpbW1pZ3JhbnQgd2l0aCBleHRlbnNpdmUgZXhwZXJpZW5jZSBpbiBjdXN0b21lciBzZXJ2aWNlIGFuZCBzbWFsbCBidXNpbmVzcyBtYW5hZ2VtZW50LCBJIGhhdmUgbWFkZSB0aGUgZGFyaW5nIGFuZCBmcmlnaHRlbmluZyBjaG9pY2UgdG8gcHVyc3VlIGEgbmV3IGNhcmVlciBwYXRoIHRvIGJlY29tZSBhIFNvZnR3YXJlIERldmVsb3Blci4gV2l0aCB0aGUgaGVscCBvZiBUdXJpbmcgU2Nob29sIG9mIFNvZnR3YS4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUcmF2aXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUlNwZWMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmFpbHMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQm9vdHN0cmFwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhlcm9rdQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTbGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBMaW5rZWRJbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ2hyb21lCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQVdTCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIZWFsdGgsIFdlbGxuZXNzIGFuZCBGaXRuZXNzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIFJldGFpbAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBUcmFuc2xhdGlvbiBhbmQgTG9jYWxpemF0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzc2OC1kaWFuYS1idWZmb25lIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgSm9lIE1lY2hhIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCZEVsSUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTBhZGVjZjFkZjE3ZmRhYzNlMzY3MzljNDFlZDJhMzM0YjA5YzM1MDAvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvSm9zZXBoX01lY2hhX1BDMDAwNy1zcS5qcGciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIEpvZSBNZWNoYQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgSm9lIE1lY2hhIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2pvZW1lY2hhIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIEpvZSBNZWNoYSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2pvZW1lY2hhIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIEpvZSBNZWNoYSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhRTFMSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNjdjNjZiNGFlMzJkZGZkMDkzNzE1OTA4NzVlZTUxZGQwMmVmNjFiNi9qb2VtZWNoYV9yZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgUmVhbGx5LCBpdOKAmXMgYWxsIGFib3V0IGV4cGxvcmF0aW9uLiBDdXJpb3VzLCB0aG91Z2h0ZnVsLCBhbmQgcmVzb3VyY2VmdWwgc29mdHdhcmUgZGV2ZWxvcGVyIHNwZWNpYWxpemVkIGluIEJhY2tlbmQgRW5naW5lZXJpbmcgd2l0aCBSdWJ5IG9uIFJhaWxzLgpNeSBsb3ZlIG9mIGxlYXJuaW5nLCBjb21tdW5pY2F0aW5nLCBhbmQgbmV3IGV4cGVyaWVuY2VzIChhbmQgdGhlIG91dGRvb3JzKSBsZWQgbWUgdG8gc2VpemUgb3Bwb3J0Li4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQWRvYmUgUGhvdG9zaG9wCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFBvc3RncmVTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgalF1ZXJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBIaWdoZXIgRWR1Y2F0aW9uCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzg1Ny1qb2UtbWVjaGEiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tZmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBUeXNvbiBNY051dHQiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJkVWxKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYmJkMGEyNDZkODRmNzQwZDgwMDdlZDFmMjEyYTBhNTkwZTM5ODM4MS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9JTUdfNDU0NiUyMGNvcHklMjAyLmpwZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgVHlzb24gTWNOdXR0CiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgVHlzb24gTWNOdXR0IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3R5c25qIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1naXRodWIgcHJvZmlsZS1zb2NpYWwtaWNvbiBuby1sZWZ0LXNwYWNpbmciPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkxpbmtlZEluIHByb2ZpbGUgZm9yIFR5c29uIE1jTnV0dCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL3R5c29ubWNudXR0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiBwcm9maWxlLXNvY2lhbC1pY29uIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJSZXN1bWUgZm9yIFR5c29uIE1jTnV0dCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Ii9yYWlscy9hY3RpdmVfc3RvcmFnZS9ibG9icy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJhWE5LSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tYWQ5NDRkY2Y4MGZlODVhZDc4Y2M0MGRlMGEzN2Y5NzZkOTA2YTM2ZS9UTV9DVi5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBXaXRoIG92ZXIgYSBkZWNhZGUgb2YgZXhwZXJpZW5jZSB3b3JraW5nIHdpdGggdGVjaC9tZWRpYSBhbmQgdGhlIGxhc3QgNisgeWVhcnMgaW4gU2FhUyBvcGVyYXRpb25zLCBJJ3ZlIGJlY29tZSBhIGNyaXRpY2FsIHRoaW5rZXIgd2hvIGNvbnNpc3RlbnRseSBleGNlZWRzIHBlcmZvcm1hbmNlIHN0YW5kYXJkcyBieSBxdWlja2x5IG92ZXJjb21pbmcgY2hhbGxlbmdlcyB3aXRoIGEgbGV2ZWwtaGVhZGVkIGFuZCBjYWxtIGRlbWVhbm9yLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFdlYnBhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVmlzdWFsIFN0dWRpbwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJlbGxvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTbGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYWFTCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFF1YWxpdHkgQXNzdXJhbmNlIC8gUUEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTnBtCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTWFuYWdlbWVudAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBMaW5rZWRJbgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBKZXN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR29vZ2xlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBFeHByZXNzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEVuenltZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENvbmZsdWVuY2UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQ2hyb21lCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEFXUwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBZG9iZSBQaG90b3Nob3AKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2FsZXNmb3JjZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQb3N0Z3JlU1FMCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTXlTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSZWFjdCBOYXRpdmUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHlwZVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgUHJldmlvdXMgSW5kdXN0cmllcwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgQ29tcHV0ZXIgU29mdHdhcmUKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvODg4LXR5c29uLW1jbnV0dCI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIFBhdHJpY2sgRmluZGxleSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmJqaEpJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1kMmYwOTA0MWMyMGU3YTZmYmZiNTM5OGU4NjI5ZGJiMjRmODczMTRhL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL3NtYWxsbWUuanBlZyIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgUGF0cmljayBGaW5kbGV5CiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgUGF0cmljayBGaW5kbGV5IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL1BhdEZpbmRsZXkiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgUGF0cmljayBGaW5kbGV5IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iaHR0cHM6Ly9saW5rZWRpbi5jb20vaW4vUGF0RmluZGxleSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBQYXRyaWNrIEZpbmRsZXkiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCYzFsSklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLTE0OTVjNzFlZTlkOGY2ODAwYjE4MTkyN2NhYmU1NjMzMDhlOTlmMDQvUGF0JTIwRmluZGxleSUyMENvZGVzLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIFByb2JsZW0gU29sdmVyIGF0IGhlYXJ0LCBQYXNzaW9uYXRlIGFib3V0IHRlYW0gYnVpbGRpbmcKUGFzdCB3b3JrIGV4cGVyaWVuY2UgaXMgZGl2aWRlZCBiZXR3ZWVuIGhhcm1vbml6aW5nIHRlYW0gb2JqZWN0aXZlcyBpbiBjdXN0b21lci1jZW50cmljIGVudmlyb25tZW50cyBpbiB0aGUgc2VydmljZSBpbmR1c3RyeSwgYW5kIGNvbGxhYm9yYXRpdmUgd3JpdGluZywgYm9va2luZywgbWFuYWdpbmcgYW5kIHByb2R1Y3Rpb24gLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhc3MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgU2xhY2sKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUmVhY3QKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTW9jaGEKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIVE1MNQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgQ3VycmVudGx5IGxlYXJuaW5nCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEVudGVydGFpbm1lbnQKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgRm9vZCAmYW1wOyBCZXZlcmFnZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgSG9zcGl0YWxpdHkKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgTXVzaWMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUmVzdGF1cmFudHMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1mb290ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcy1idXR0b24gZHMtYnV0dG9uLWZsYXQiIGhyZWY9Ii9hbHVtbmkvODgyLXBhdHJpY2stZmluZGxleSI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1mZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIE1hdHQgTWNWZXkiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJjalJJSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tNzgwN2JhMDM1MzRhNGZhM2YyMjQ4ZjRhMzUwNjQ3ZDI3N2U1ZWE0YS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9tZS5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBNYXR0IE1jVmV5CiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGl0bGUiPgogICAgICAgICAgICAgICAgICBGcm9udC1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgTWF0dCBNY1ZleSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9tYXR0bWN2ZXkiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgTWF0dCBNY1ZleSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL21hdHRtY3ZleSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBNYXR0IE1jVmV5IiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmIyZEtJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS02NGI2NjljMzE1NDViYTlhODU3NTA2ZDVlODAyYzFiZjk0ZmY4M2NmL01hdHRNY1ZleVJlc3VtZS5wZGYiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld2JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1pY29uIj4KICA8cGF0aCBkPSJNOC4zNzI0MiAxNy43MDkxSDMuNjMwNjNDMi45NTI3IDE3LjcwOTEgMi41ODg4NSAxOC41MzU4IDMuMDgzMzkgMTkuMDMwNUw3LjgyNTE4IDIzLjc3MjNDOC4zMTI5IDI0LjI1OTkgOS4xNDY1OSAyMy45MTIgOS4xNDY1OSAyMy4yMjUxVjE4LjQ4MzNDOS4xNDY1OSAxOC4wNTU1IDguODAwMTUgMTcuNzA5MSA4LjM3MjQyIDE3LjcwOTFaTTE4LjgyMzcgMEg1LjE3ODk3QzMuODk2MjcgMCAyLjg1NjQ3IDEuMDM5ODEgMi44NTY0NyAyLjMyMjUxVjE2LjI4MDNDMi44NTY0NyAxNi43MDkgMy4yMDQ4NCAxNy4wNTU5IDMuNjM0MDIgMTcuMDU0NEM0LjM0NjI2IDE3LjA1MTUgNS44MDMxNCAxNy4wNTU5IDguODY0NSAxNy4wNTU5QzkuMzgxMjYgMTcuMDU1OSA5Ljc5OTc5IDE3LjQ3NDQgOS43OTk3OSAxNy45OTEyQzkuNzk5NzkgMjEuMDUzIDkuODA0MTQgMjIuNTA5NCA5LjgwMTI0IDIzLjIyMTdDOS43OTk3OSAyMy42NTA4IDEwLjE0NjcgMjMuOTk5MiAxMC41NzU0IDIzLjk5OTJIMTguODIzN0MyMC4xMDY0IDIzLjk5OTIgMjEuMTQ2MiAyMi45NTk0IDIxLjE0NjIgMjEuNjc2N1YyLjMyMjUxQzIxLjE0NjIgMS4wMzk4MSAyMC4xMDY0IDAgMTguODIzNyAwVjBaTTExLjk2OTQgMi40MzcxOEMxMy40MDY0IDIuNDM3MTggMTQuNTc1NCAzLjYwNjE3IDE0LjU3NTQgNS4wNDMyMkMxNC41NzU0IDYuNDc5NzkgMTMuNDA2NCA3LjY0ODc5IDExLjk2OTQgNy42NDg3OUMxMC41MzI4IDcuNjQ4NzkgOS4zNjM4NCA2LjQ3OTc5IDkuMzYzODQgNS4wNDMyMkM5LjM2Mzg0IDMuNjA2MTcgMTAuNTMyOCAyLjQzNzE4IDExLjk2OTQgMi40MzcxOFpNOC4wNDk2OSAxMC4zNzkyQzguMDQ5NjkgOS43MTAwMSA4LjQ0NDUxIDkuMTAwODMgOS4wNTU2MiA4LjgyNzk0QzEwLjQwNTMgOC4yMjU0IDEwLjM4NSA4LjIxMjQ4IDEwLjU5OTEgOC4yMTI0OEgxMy4zMjIzQzEzLjU0MDEgOC4yMTI0OCAxMy41MzEyIDguMjMxOTMgMTQuODY1OCA4LjgyNzk0QzE1LjQ3NzMgOS4xMDA4MyAxNS44NzIyIDkuNzEwMDEgMTUuODcyMiAxMC4zNzkyVjExLjQ0MDhDMTUuODcyMiAxMS44Njg1IDE1LjUyNTcgMTIuMjE0OSAxNS4wOTggMTIuMjE0OUg4LjgyMzg1QzguMzk2MTMgMTIuMjE0OSA4LjA0OTY5IDExLjg2ODUgOC4wNDk2OSAxMS40NDA4VjEwLjM3OTJaTTE2LjM1NiAyMC4zNzAzSDExLjg1NjJDMTEuNDI4NCAyMC4zNzAzIDExLjA4MiAyMC4wMjM5IDExLjA4MiAxOS41OTYxQzExLjA4MiAxOS4xNjg0IDExLjQyODQgMTguODIyIDExLjg1NjIgMTguODIySDE2LjM1NkMxNi43ODM4IDE4LjgyMiAxNy4xMzAyIDE5LjE2ODQgMTcuMTMwMiAxOS41OTYxQzE3LjEzMDIgMjAuMDIzOSAxNi43ODM4IDIwLjM3MDMgMTYuMzU2IDIwLjM3MDNaTTE2LjM1NiAxNS45MTg4SDcuNTk4MjVDNy4xNzA1MiAxNS45MTg4IDYuODI0MDggMTUuNTcyNCA2LjgyNDA4IDE1LjE0NDdDNi44MjQwOCAxNC43MTY5IDcuMTcwNTIgMTQuMzcwNSA3LjU5ODI1IDE0LjM3MDVIMTYuMzU2QzE2Ljc4MzggMTQuMzcwNSAxNy4xMzAyIDE0LjcxNjkgMTcuMTMwMiAxNS4xNDQ3QzE3LjEzMDIgMTUuNTcyNCAxNi43ODM4IDE1LjkxODggMTYuMzU2IDE1LjkxODhaIiBmaWxsPSIjQkNCRUMwIj48L3BhdGg+Cjwvc3ZnPgoKPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWJvZHkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1hYm91dC1tZSI+CiAgICAgICAgICAgICAgICBXaXRoIG5lYXJseSBhIGRlY2FkZSBpbiB0aGUgdGVjaCBzcGFjZSBJIGhhdmUgZ3Jvd24gdG8gbG92ZSBpdC4gT3JpZ2luYWxseSBvbiB0aGUgcmVjcnVpdGluZyBzaWRlIG9mIHRoaW5ncyBJIGhhdmUgbWFkZSB0aGUgY2hhbmdlIHRvIHRoZSBkZXZlbG9wbWVudCBzaWRlLiBJIGxvdmUgcHJvYmxlbSBzb2x2aW5nIGFuZCB3b3JraW5nIGFzIGEgcGFydCBvZiB0ZWFtIHRvd2FyZHMgYSBjb21tb24gZ29hbC4gRHVyaW5nIG15IHRpbWUgLi4uCgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8aDMgY2xhc3M9InByb2ZpbGUtY2FyZC1zdWJoZWFkZXIiPgogICAgICAgICAgICAgICAgU2tpbGxzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlZHV4CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFRyYXZpcwogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBcHBsZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgV2VicGFjawogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEludGVyZmFjZSBEZXNpZ24gLyBVSQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBVc2VyIEV4cGVyaWVuY2UgRGVzaWduIC8gVVgKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJlbGxvCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJlYWN0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5wbQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBOb2RlLmpzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE1vY2hhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIExpbmtlZEluCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEphdmFTY3JpcHQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSFRNTDUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR29vZ2xlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIENocm9tZQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYWFzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBdG9tCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUnVieQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBUeXBlU2NyaXB0CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBTdGFmZmluZyBhbmQgUmVjcnVpdGluZwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS84MDItbWF0dC1tY3ZleSI+CiAgICAgICAgICAgICAgICBTZWUgZnVsbCBwcm9maWxlCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWFycm93LXJpZ2h0IHBsLTEiPjwvaT4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hcnRpY2xlPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wtbGctNCBtYi00Ij4KICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwcm9maWxlLWNhcmQgcHJvZ3JhbS1iZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXIiPgogICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImF2YXRhciIgYWx0PSJBdmF0YXIgZm9yIERvbWluaWMgIFBhZHVsYSIgc3JjPSJodHRwczovL3Rlcm1pbmFsLnR1cmluZy5lZHUvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNrVkhJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS1hZDNlMTlkMGY3MDJlMzE5ODU2NGU4ZWUxYzEwNDgxY2YxYjcxMzBhL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYURkQ2VtOVVZMjFXZW1GWWNHeFlNa1oxV2tZNWQxbFhVbUpDTW14c1lWZFZOa1F5U21oWk1uUnVZMjA1TVdKdFVUWkZTRko1V1ZjMWVtTkhSbmxhVnpVd0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS02YWM1MGVjZDBkMGQ4OTU1YTc1NjBkNDM0NmQ0ZWNiMDg5NDkxODFjL0lNR180MzU3LmpwZWciIC8+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1oZWFkZXItcmlnaHQiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcm9maWxlLWNhcmQtbmFtZSI+CiAgICAgICAgICAgICAgICAgIERvbWluaWMgIFBhZHVsYQogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjayBFbmcgRW5naW5lZXIgCiAgICAgICAgICAgICAgICA8L3NwYW4+CgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rcyBwcm9maWxlLXNvY2lhbC1saW5rcy1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR2l0SHViIHByb2ZpbGUgZm9yIERvbWluaWMgIFBhZHVsYSIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9kb21vMjE5MiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZ2l0aHViIHByb2ZpbGUtc29jaWFsLWljb24gbm8tbGVmdC1zcGFjaW5nIj48L2k+CjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiBwcm9maWxlIGZvciBEb21pbmljICBQYWR1bGEiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9kb21pbmljLXBhZHVsYS01YmI1YjIxNzkiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgRG9taW5pYyAgUGFkdWxhIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmNrbEhJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS03YWMzZWY4ZTJlZDViNzJmZWJkZTEwYzU3ZWNhYTcwYTk5N2E1YjNlL1JlZCUyMGFuZCUyMEJsdWUlMjBNb2Rlcm4lMjBNYXJrZXRpbmclMjBBc3Npc3RhbnQlMjBSZXN1bWUlMjAoMSkucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgV2hldGhlciBJIHdhcyB3b3JraW5nIG9uIGEgbXVsdGktbWlsbGlvbiBkb2xsYXIgY29uc3RydWN0aW9uIHNpdGUgb3IgYXMgYSA5MTEgZGlzcGF0Y2ggc3VwZXJ2aXNvciwgSSBoYXZlIGFsd2F5cyBiZWVuIHRlYW0gb3JpZW50ZWQgYW5kIGNvbW11bml0eSBkcml2ZW4uIFRoZXNlIGhpZ2ggc3RyZXNzIGFuZCBoaWdoIHJld2FyZCBzaXR1YXRpb25zIGFyZSB3aGVyZSBteSBjb2xsZWN0ZWQsIGVtcGF0aGV0aWMsIGFuZCBkcml2ZW4gcC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBqUXVlcnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJTcGVjCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEJvb3RzdHJhcAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBIZXJva3UKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUXVhbGl0eSBBc3N1cmFuY2UgLyBRQQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNYW5hZ2VtZW50CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIExpbmtlZEluCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEhUTUw1CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBDU1MzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdpdEh1YgogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YQogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBLdWJlcm5ldGVzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIE5vZGUuanMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgSmF2YVNjcmlwdAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBQeXRob24KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgQVdTCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBDb25zdHJ1Y3Rpb24KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUHVibGljIFNhZmV0eQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83NjktZG9taW5pYy1wYWR1bGEiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLWxnLTQgbWItNCI+CiAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icHJvZmlsZS1jYXJkIHByb2dyYW0tYmUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyIj4KICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIiIGFsdD0iQXZhdGFyIGZvciBHYXJyZXR0IENvdHRyZWxsIiBzcmM9Imh0dHBzOi8vdGVybWluYWwudHVyaW5nLmVkdS9yYWlscy9hY3RpdmVfc3RvcmFnZS9yZXByZXNlbnRhdGlvbnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCY0ZsS0lpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWMxM2M5M2FkNDQ4YWIwOThlNDMzY2ZmOTllMDY4Yzk3ODg5Mjg5MzYvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDZW05VVkyMVdlbUZZY0d4WU1rWjFXa1k1ZDFsWFVtSkNNbXhzWVZkVk5rUXlTbWhaTW5SdVkyMDVNV0p0VVRaRlNGSjVXVmMxZW1OSFJubGFWelV3SWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKMllYSnBZWFJwYjI0aWZYMD0tLTZhYzUwZWNkMGQwZDg5NTVhNzU2MGQ0MzQ2ZDRlY2IwODk0OTE4MWMvbGlua2VkaW5waWMuamZpZiIgLz4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlci1yaWdodCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InByb2ZpbGUtY2FyZC1uYW1lIj4KICAgICAgICAgICAgICAgICAgR2FycmV0dCBDb3R0cmVsbAogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgR2FycmV0dCBDb3R0cmVsbCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9HYXJyZXR0Q290dHJlbGwiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgR2FycmV0dCBDb3R0cmVsbCIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmsiIGhyZWY9Imh0dHBzOi8vbGlua2VkaW4uY29tL2luL2dhcnJldHRjb3R0cmVsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtbGlua2VkaW4gcHJvZmlsZS1zb2NpYWwtaWNvbiI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iUmVzdW1lIGZvciBHYXJyZXR0IENvdHRyZWxsIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtbGluayIgaHJlZj0iL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmRHOUtJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUppYkc5aVgybGtJbjE5LS01ZDdkZjQ3N2Y5Y2Q0ODA5NjA4NTVhMTA2NzA3OGM0OWUxYzQ0YmVjL1VwZGF0ZWQlMjBSZXN1bWUucGRmIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIHZpZXdib3g9IjAgMCAyNCAyNCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0icHJvZmlsZS1zb2NpYWwtaWNvbiI+CiAgPHBhdGggZD0iTTguMzcyNDIgMTcuNzA5MUgzLjYzMDYzQzIuOTUyNyAxNy43MDkxIDIuNTg4ODUgMTguNTM1OCAzLjA4MzM5IDE5LjAzMDVMNy44MjUxOCAyMy43NzIzQzguMzEyOSAyNC4yNTk5IDkuMTQ2NTkgMjMuOTEyIDkuMTQ2NTkgMjMuMjI1MVYxOC40ODMzQzkuMTQ2NTkgMTguMDU1NSA4LjgwMDE1IDE3LjcwOTEgOC4zNzI0MiAxNy43MDkxWk0xOC44MjM3IDBINS4xNzg5N0MzLjg5NjI3IDAgMi44NTY0NyAxLjAzOTgxIDIuODU2NDcgMi4zMjI1MVYxNi4yODAzQzIuODU2NDcgMTYuNzA5IDMuMjA0ODQgMTcuMDU1OSAzLjYzNDAyIDE3LjA1NDRDNC4zNDYyNiAxNy4wNTE1IDUuODAzMTQgMTcuMDU1OSA4Ljg2NDUgMTcuMDU1OUM5LjM4MTI2IDE3LjA1NTkgOS43OTk3OSAxNy40NzQ0IDkuNzk5NzkgMTcuOTkxMkM5Ljc5OTc5IDIxLjA1MyA5LjgwNDE0IDIyLjUwOTQgOS44MDEyNCAyMy4yMjE3QzkuNzk5NzkgMjMuNjUwOCAxMC4xNDY3IDIzLjk5OTIgMTAuNTc1NCAyMy45OTkySDE4LjgyMzdDMjAuMTA2NCAyMy45OTkyIDIxLjE0NjIgMjIuOTU5NCAyMS4xNDYyIDIxLjY3NjdWMi4zMjI1MUMyMS4xNDYyIDEuMDM5ODEgMjAuMTA2NCAwIDE4LjgyMzcgMFYwWk0xMS45Njk0IDIuNDM3MThDMTMuNDA2NCAyLjQzNzE4IDE0LjU3NTQgMy42MDYxNyAxNC41NzU0IDUuMDQzMjJDMTQuNTc1NCA2LjQ3OTc5IDEzLjQwNjQgNy42NDg3OSAxMS45Njk0IDcuNjQ4NzlDMTAuNTMyOCA3LjY0ODc5IDkuMzYzODQgNi40Nzk3OSA5LjM2Mzg0IDUuMDQzMjJDOS4zNjM4NCAzLjYwNjE3IDEwLjUzMjggMi40MzcxOCAxMS45Njk0IDIuNDM3MThaTTguMDQ5NjkgMTAuMzc5MkM4LjA0OTY5IDkuNzEwMDEgOC40NDQ1MSA5LjEwMDgzIDkuMDU1NjIgOC44Mjc5NEMxMC40MDUzIDguMjI1NCAxMC4zODUgOC4yMTI0OCAxMC41OTkxIDguMjEyNDhIMTMuMzIyM0MxMy41NDAxIDguMjEyNDggMTMuNTMxMiA4LjIzMTkzIDE0Ljg2NTggOC44Mjc5NEMxNS40NzczIDkuMTAwODMgMTUuODcyMiA5LjcxMDAxIDE1Ljg3MjIgMTAuMzc5MlYxMS40NDA4QzE1Ljg3MjIgMTEuODY4NSAxNS41MjU3IDEyLjIxNDkgMTUuMDk4IDEyLjIxNDlIOC44MjM4NUM4LjM5NjEzIDEyLjIxNDkgOC4wNDk2OSAxMS44Njg1IDguMDQ5NjkgMTEuNDQwOFYxMC4zNzkyWk0xNi4zNTYgMjAuMzcwM0gxMS44NTYyQzExLjQyODQgMjAuMzcwMyAxMS4wODIgMjAuMDIzOSAxMS4wODIgMTkuNTk2MUMxMS4wODIgMTkuMTY4NCAxMS40Mjg0IDE4LjgyMiAxMS44NTYyIDE4LjgyMkgxNi4zNTZDMTYuNzgzOCAxOC44MjIgMTcuMTMwMiAxOS4xNjg0IDE3LjEzMDIgMTkuNTk2MUMxNy4xMzAyIDIwLjAyMzkgMTYuNzgzOCAyMC4zNzAzIDE2LjM1NiAyMC4zNzAzWk0xNi4zNTYgMTUuOTE4OEg3LjU5ODI1QzcuMTcwNTIgMTUuOTE4OCA2LjgyNDA4IDE1LjU3MjQgNi44MjQwOCAxNS4xNDQ3QzYuODI0MDggMTQuNzE2OSA3LjE3MDUyIDE0LjM3MDUgNy41OTgyNSAxNC4zNzA1SDE2LjM1NkMxNi43ODM4IDE0LjM3MDUgMTcuMTMwMiAxNC43MTY5IDE3LjEzMDIgMTUuMTQ0N0MxNy4xMzAyIDE1LjU3MjQgMTYuNzgzOCAxNS45MTg4IDE2LjM1NiAxNS45MTg4WiIgZmlsbD0iI0JDQkVDMCI+PC9wYXRoPgo8L3N2Zz4KCjwvYT4gICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYWJvdXQtbWUiPgogICAgICAgICAgICAgICAgQXMgYSBCYWNrLUVuZCBEZXZlbG9wZXIsIEkgZW5qb3kgdGhlIGNoYWxsZW5naW5nIHB1enpsZXMgdGhhdCBJIGdldCB0byBzb2x2ZSBvbiBhIGRhaWx5IGJhc2lzLCBhcyB3ZWxsIGFzIGNyZWF0aW5nIHVzZXIgYW5kIGRldmVsb3Blci1mcmllbmRseSBjb2RlIEkgaGF2ZSBhIHN0cm9uZyBjdXJpb3NpdHkgdGhhdCBkcml2ZXMgbXkgaW50ZXJlc3QgaW4gbmV3IGxhbmd1YWdlcyBhbmQgYW0gYWx3YXlzIGxvb2tpbmcgZm9yIGEgYmV0dC4uLgoKICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFNraWxscwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBTYWxlc2ZvcmNlCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNhYXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBNZW50b3JzaGlwCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEdyYXBoUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgR2l0SHViCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIEF0b20KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgTXlTUUwKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUHl0aG9uCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJ1YnkKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIEN1cnJlbnRseSBsZWFybmluZwogICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgPHAgY2xhc3M9InByb2ZpbGUtY2FyZC10YWctbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBBV1MKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KCiAgICAgICAgICAgICAgPGgzIGNsYXNzPSJwcm9maWxlLWNhcmQtc3ViaGVhZGVyIj4KICAgICAgICAgICAgICAgIFByZXZpb3VzIEluZHVzdHJpZXMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEluZm9ybWF0aW9uIFRlY2hub2xvZ3kgYW5kIFNlcnZpY2VzCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtZm9vdGVyIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHMtYnV0dG9uIGRzLWJ1dHRvbi1mbGF0IiBocmVmPSIvYWx1bW5pLzkyOS1nYXJyZXR0LWNvdHRyZWxsIj4KICAgICAgICAgICAgICAgIFNlZSBmdWxsIHByb2ZpbGUKICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtYXJyb3ctcmlnaHQgcGwtMSI+PC9pPgo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2FydGljbGU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC1sZy00IG1iLTQiPgogICAgICAgICAgPGFydGljbGUgY2xhc3M9InByb2ZpbGUtY2FyZCBwcm9ncmFtLWJlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWhlYWRlciI+CiAgICAgICAgICAgICAgPGltZyBjbGFzcz0iYXZhdGFyIiBhbHQ9IkF2YXRhciBmb3IgS3lsZSBTY2h1bHoiIHNyYz0iaHR0cHM6Ly90ZXJtaW5hbC50dXJpbmcuZWR1L3JhaWxzL2FjdGl2ZV9zdG9yYWdlL3JlcHJlc2VudGF0aW9ucy9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFIQkJaMUZKSWl3aVpYaHdJanB1ZFd4c0xDSndkWElpT2lKaWJHOWlYMmxrSW4xOS0tZWQ3ZGUzMjEyNDVhOTBmOTUwNjkzODMxZDM1NTAxNTVlNjk4ZDQ1YS9leUpmY21GcGJITWlPbnNpYldWemMyRm5aU0k2SWtKQmFEZENlbTlVWTIxV2VtRlljR3hZTWtaMVdrWTVkMWxYVW1KQ01teHNZVmRWTmtReVNtaFpNblJ1WTIwNU1XSnRVVFpGU0ZKNVdWYzFlbU5IUm5sYVZ6VXdJaXdpWlhod0lqcHVkV3hzTENKd2RYSWlPaUoyWVhKcFlYUnBiMjRpZlgwPS0tNmFjNTBlY2QwZDBkODk1NWE3NTYwZDQzNDZkNGVjYjA4OTQ5MTgxYy9JTUdfOTM1MC5qcGVnIiAvPgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtaGVhZGVyLXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJvZmlsZS1jYXJkLW5hbWUiPgogICAgICAgICAgICAgICAgICBLeWxlIFNjaHVsegogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRpdGxlIj4KICAgICAgICAgICAgICAgICAgQmFjay1FbmQgRW5naW5lZXIKICAgICAgICAgICAgICAgIDwvc3Bhbj4KCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InByb2ZpbGUtc29jaWFsLWxpbmtzIHByb2ZpbGUtc29jaWFsLWxpbmtzLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJHaXRIdWIgcHJvZmlsZSBmb3IgS3lsZSBTY2h1bHoiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2dpdGh1Yi5jb20va3lsZWpzY2h1bHoiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWdpdGh1YiBwcm9maWxlLXNvY2lhbC1pY29uIG5vLWxlZnQtc3BhY2luZyI+PC9pPgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4gcHJvZmlsZSBmb3IgS3lsZSBTY2h1bHoiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSJodHRwczovL2xpbmtlZGluLmNvbS9pbi9reWxlLXNjaHVsei0yMDQwNTYyMDkiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluIHByb2ZpbGUtc29jaWFsLWljb24iPjwvaT4KPC9hPiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlJlc3VtZSBmb3IgS3lsZSBTY2h1bHoiIGNsYXNzPSJwcm9maWxlLXNvY2lhbC1saW5rIiBocmVmPSIvcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCWjI5Sklpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSmliRzlpWDJsa0luMTktLWEzODJiNTdjMWM3MGZjMzhmYzg0ZjY2NGJlOWUwNmFhNTk2ODRiNmUvcmVzdW1lLnBhZ2VzLnBkZiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiB2aWV3Ym94PSIwIDAgMjQgMjQiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9InByb2ZpbGUtc29jaWFsLWljb24iPgogIDxwYXRoIGQ9Ik04LjM3MjQyIDE3LjcwOTFIMy42MzA2M0MyLjk1MjcgMTcuNzA5MSAyLjU4ODg1IDE4LjUzNTggMy4wODMzOSAxOS4wMzA1TDcuODI1MTggMjMuNzcyM0M4LjMxMjkgMjQuMjU5OSA5LjE0NjU5IDIzLjkxMiA5LjE0NjU5IDIzLjIyNTFWMTguNDgzM0M5LjE0NjU5IDE4LjA1NTUgOC44MDAxNSAxNy43MDkxIDguMzcyNDIgMTcuNzA5MVpNMTguODIzNyAwSDUuMTc4OTdDMy44OTYyNyAwIDIuODU2NDcgMS4wMzk4MSAyLjg1NjQ3IDIuMzIyNTFWMTYuMjgwM0MyLjg1NjQ3IDE2LjcwOSAzLjIwNDg0IDE3LjA1NTkgMy42MzQwMiAxNy4wNTQ0QzQuMzQ2MjYgMTcuMDUxNSA1LjgwMzE0IDE3LjA1NTkgOC44NjQ1IDE3LjA1NTlDOS4zODEyNiAxNy4wNTU5IDkuNzk5NzkgMTcuNDc0NCA5Ljc5OTc5IDE3Ljk5MTJDOS43OTk3OSAyMS4wNTMgOS44MDQxNCAyMi41MDk0IDkuODAxMjQgMjMuMjIxN0M5Ljc5OTc5IDIzLjY1MDggMTAuMTQ2NyAyMy45OTkyIDEwLjU3NTQgMjMuOTk5MkgxOC44MjM3QzIwLjEwNjQgMjMuOTk5MiAyMS4xNDYyIDIyLjk1OTQgMjEuMTQ2MiAyMS42NzY3VjIuMzIyNTFDMjEuMTQ2MiAxLjAzOTgxIDIwLjEwNjQgMCAxOC44MjM3IDBWMFpNMTEuOTY5NCAyLjQzNzE4QzEzLjQwNjQgMi40MzcxOCAxNC41NzU0IDMuNjA2MTcgMTQuNTc1NCA1LjA0MzIyQzE0LjU3NTQgNi40Nzk3OSAxMy40MDY0IDcuNjQ4NzkgMTEuOTY5NCA3LjY0ODc5QzEwLjUzMjggNy42NDg3OSA5LjM2Mzg0IDYuNDc5NzkgOS4zNjM4NCA1LjA0MzIyQzkuMzYzODQgMy42MDYxNyAxMC41MzI4IDIuNDM3MTggMTEuOTY5NCAyLjQzNzE4Wk04LjA0OTY5IDEwLjM3OTJDOC4wNDk2OSA5LjcxMDAxIDguNDQ0NTEgOS4xMDA4MyA5LjA1NTYyIDguODI3OTRDMTAuNDA1MyA4LjIyNTQgMTAuMzg1IDguMjEyNDggMTAuNTk5MSA4LjIxMjQ4SDEzLjMyMjNDMTMuNTQwMSA4LjIxMjQ4IDEzLjUzMTIgOC4yMzE5MyAxNC44NjU4IDguODI3OTRDMTUuNDc3MyA5LjEwMDgzIDE1Ljg3MjIgOS43MTAwMSAxNS44NzIyIDEwLjM3OTJWMTEuNDQwOEMxNS44NzIyIDExLjg2ODUgMTUuNTI1NyAxMi4yMTQ5IDE1LjA5OCAxMi4yMTQ5SDguODIzODVDOC4zOTYxMyAxMi4yMTQ5IDguMDQ5NjkgMTEuODY4NSA4LjA0OTY5IDExLjQ0MDhWMTAuMzc5MlpNMTYuMzU2IDIwLjM3MDNIMTEuODU2MkMxMS40Mjg0IDIwLjM3MDMgMTEuMDgyIDIwLjAyMzkgMTEuMDgyIDE5LjU5NjFDMTEuMDgyIDE5LjE2ODQgMTEuNDI4NCAxOC44MjIgMTEuODU2MiAxOC44MjJIMTYuMzU2QzE2Ljc4MzggMTguODIyIDE3LjEzMDIgMTkuMTY4NCAxNy4xMzAyIDE5LjU5NjFDMTcuMTMwMiAyMC4wMjM5IDE2Ljc4MzggMjAuMzcwMyAxNi4zNTYgMjAuMzcwM1pNMTYuMzU2IDE1LjkxODhINy41OTgyNUM3LjE3MDUyIDE1LjkxODggNi44MjQwOCAxNS41NzI0IDYuODI0MDggMTUuMTQ0N0M2LjgyNDA4IDE0LjcxNjkgNy4xNzA1MiAxNC4zNzA1IDcuNTk4MjUgMTQuMzcwNUgxNi4zNTZDMTYuNzgzOCAxNC4zNzA1IDE3LjEzMDIgMTQuNzE2OSAxNy4xMzAyIDE1LjE0NDdDMTcuMTMwMiAxNS41NzI0IDE2Ljc4MzggMTUuOTE4OCAxNi4zNTYgMTUuOTE4OFoiIGZpbGw9IiNCQ0JFQzAiPjwvcGF0aD4KPC9zdmc+Cgo8L2E+ICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLWNhcmQtYm9keSI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWFib3V0LW1lIj4KICAgICAgICAgICAgICAgIEludHJvZHVjZWQgdG8gcHJvZ3JhbW1pbmcgd2hlbiBpbiBoaWdoIHNjaG9vbCAtLSBJIGtuZXcgdGhhdCB0aGlzIHdvdWxkIGJlIG15IHBhdGguIFByb2dyYW1taW5nIGFwcGVhbGVkIHRvIG1lIGZvciB0aGUgc2FtZSByZWFzb25zIEkgbG92ZSBzY2hvb2wgLSBlbmRsZXNzIGxlYXJuaW5nIGFuZCBub3ZlbCBwcm9ibGVtIHNvbHZpbmcuIEhvd2V2ZXIsIEkgdG9vayBhIHJvdW5kYWJvdXQgcGF0aCB0aHJvdWdoIHRoZSB3b3JsZCBvZiAuLi4KCiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBTa2lsbHMKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgVHJhdmlzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFJhaWxzCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgIFNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBHaXQKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgUG9zdGdyZVNRTAogICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICBSdWJ5CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBDdXJyZW50bHkgbGVhcm5pbmcKICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWxpc3QiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgRG9ja2VyCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CgogICAgICAgICAgICAgIDxoMyBjbGFzcz0icHJvZmlsZS1jYXJkLXN1YmhlYWRlciI+CiAgICAgICAgICAgICAgICBQcmV2aW91cyBJbmR1c3RyaWVzCiAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICA8cCBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1saXN0Ij4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJvZmlsZS1jYXJkLXRhZy1pdGVtICI+CiAgICAgICAgICAgICAgICAgICAgICBCaW90ZWNobm9sb2d5CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm9maWxlLWNhcmQtdGFnLWl0ZW0gIj4KICAgICAgICAgICAgICAgICAgICAgIEVudmlyb25tZW50YWwgU2VydmljZXMKICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb2ZpbGUtY2FyZC10YWctaXRlbSAiPgogICAgICAgICAgICAgICAgICAgICAgUHJvZ3JhbSBEZXZlbG9wbWVudAogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZmlsZS1jYXJkLWZvb3RlciI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRzLWJ1dHRvbiBkcy1idXR0b24tZmxhdCIgaHJlZj0iL2FsdW1uaS83ODMta3lsZS1zY2h1bHoiPgogICAgICAgICAgICAgICAgU2VlIGZ1bGwgcHJvZmlsZQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1hcnJvdy1yaWdodCBwbC0xIj48L2k+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYXJ0aWNsZT4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvc2VjdGlvbj4KPC9kaXY+CgogICAgPC9tYWluPgoKICAgIDxkaXYgY2xhc3M9ImZvb3RlciI+CiAgPHVsIGNsYXNzPSJjb250YWluZXIgZm9vdGVyLWNvbnRhaW5lciI+CiAgICA8bGkgY2xhc3M9ImZvb3Rlci1sZWZ0Ij4KICAgICAgPGRpdiBjbGFzcz0iZC1tZC1ibG9jayI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3R1cmluZ3NjaG9vbC8iCiAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgY2xhc3M9InNvY2lhbC1pY29uIgogICAgICAgICAgIHRpdGxlPSJUdXJpbmcncyBGYWNlYm9vayI+CiAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWZhY2Vib29rIj48L2k+CiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vdHVyaW5nc2Nob29sIgogICAgICAgICAgIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgIGNsYXNzPSJzb2NpYWwtaWNvbiIKICAgICAgICAgICB0aXRsZT0iVHVyaW5nJ3MgVHdpdHRlciI+CiAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLXR3aXR0ZXIiPjwvaT4KICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cubGlua2VkaW4uY29tL3NjaG9vbC90dXJpbmdzY2hvb2wvIgogICAgICAgICAgIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgIGNsYXNzPSJzb2NpYWwtaWNvbiIKICAgICAgICAgICB0aXRsZT0iVHVyaW5nJ3MgTGlua2VkSW4iPgogICAgICAgICAgPGkgY2xhc3M9ImZhYiBmYS1saW5rZWRpbiAiPjwvaT4KICAgICAgICA8L2E+CiAgICAgIDwvZGl2PgogICAgPC9saT4KCiAgICA8bGkgY2xhc3M9Imxpc3Qtc3BhY2VyIj4KICAgICAgJm5ic3A7CiAgICA8L2xpPgoKICAgIDxsaSBjbGFzcz0iZm9vdGVyLXJpZ2h0LXBhZGRpbmciPgogICAgICA8ZGl2IGNsYXNzPSJkLW5vbmUgZC1zbS1ibG9jayI+CiAgICAgICAgPGEgaHJlZj0iL3BvbGljeSI+UHJpdmFjeSBQb2xpY3k8L2E+CiAgICAgIDwvZGl2PgogICAgPC9saT4KCiAgICA8bGkgY2xhc3M9ImZvb3Rlci1yaWdodC1wYWRkaW5nIj4KICAgICAgPGRpdiBjbGFzcz0iZC1ub25lIGQtc20tYmxvY2siPgogICAgICAgIDxhIGhyZWY9Im1haWx0bzpyb2J5bkB0dXJpbmcuZWR1Ij4gQ29udGFjdDwvYT4KICAgICAgPC9kaXY+CiAgICA8L2xpPgoKICAgIDxsaSBjbGFzcz0iZm9vdGVyLXJpZ2h0LXBhZGRpbmciPgogICAgICA8ZGl2IGNsYXNzPSJkLW5vbmUgZC1zbS1ibG9jayI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93cml0aW5nLnR1cmluZy5lZHUvdGFnL2Zvci1lbXBsb3llcnMvIj4gQmxvZzwvYT4KICAgICAgPC9kaXY+CiAgICA8L2xpPgogIDwvdWw+CjwvZGl2PgoKCiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnkvMy4zLjEvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvcG9wcGVyLmpzLzEuMTQuMy91bWQvcG9wcGVyLm1pbi5qcyIgaW50ZWdyaXR5PSJzaGEzODQtWk1QN3JWbzNtSXlrVisyKzlKM1VKNDZqQmswV0xhVUFkbjY4OWFDd29xYkJKaVNuakFLL2w4V3ZDV1BJUG00OSIgY3Jvc3NvcmlnaW49ImFub255bW91cyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9zdGFja3BhdGguYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvNC4xLjEvanMvYm9vdHN0cmFwLm1pbi5qcyIgaW50ZWdyaXR5PSJzaGEzODQtc21IWUtkTEFEd2tYT24xRW1OMXFrL0hmblVjYlZSWnlZbVo0cXBQZWE2c2pCL3BUSjBldXlRcDBNazhjays1VCIgY3Jvc3NvcmlnaW49ImFub255bW91cyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iL2Fzc2V0cy9hcHBsaWNhdGlvbi0zMjY2MWU4YWQzOWRjNTVhZTk3ZWQ3MGViYTJiY2Q2MTg1NjI3NDRlYTY1NjI5ODA3NjNlNDk1YjI2NGUyNWE5LmpzIj48L3NjcmlwdD4KICA8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+Cg==
  recorded_at: Fri, 25 Jun 2021 23:42:31 GMT
recorded_with: VCR 6.0.0
