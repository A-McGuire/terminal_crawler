---
http_interactions:
- request:
    method: get
    uri: https://terminal.turing.edu/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Sun, 01 Aug 2021 20:59:04 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Content-Type:
      - text/html; charset=utf-8
      Etag:
      - W/"23f0541943f17d07626f651222763125"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _terminal_session=Izq6bfmGzJdpSJOpkyHZatDr7ebQVa%2FO7uqX6968rMerpaNO%2FIciE8oegq%2FKZFEQAQ%2BjD5dpd5KohIBNTLf9PIyUwHdkdS3vJcoYOJmDcAaoFpqIUUDMhEwQ%2BWtp6Gab0fH4BOP8HtyQMYFpThuQ96u1RYifiY1Cq89EkVDVSEW9iDg4BRYvvbxF%2B1uiqh%2B%2F2hO6hTQ362%2F3dEdcjjWPZCTLJC59eLOaamgywP9r%2FjBz%2BxJlVGMEcP8oSi7go6U6b6T4hLRi2pB2SVJ8ILObtvx7ohd8mtriwQ%3D%3D--JumSW8BWp%2F7YFR3R--e7QFuVy4BxFxcJPwjvrqlg%3D%3D;
        path=/; secure; HttpOnly
      X-Request-Id:
      - '056099fa-d743-4ac3-bb77-1f588d890e63'
      X-Runtime:
      - '0.986541'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>
    Terminal -
    Turing alumni profiles
  </title>
  <meta name="description" content="We match your skills, experience and desired benefits to the right company for you.">
  <link rel="shortcut icon" type="image/x-icon" href="/assets/favicon-1077b5eca55ba188ebac5a85e1d15956c8d3a439539ae3e3245b1e57f8170b09.ico" />

    <!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-103295514-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-103295514-1');
</script>


  <!-- Facebook Open Graph data -->
  <meta property="og:title" content="Terminal - Jobs You Want.">
  <meta property="og:type" content="website">
  <meta property="og:url" content="https://terminal.turing.edu">
  <meta property="og:image" content="https://terminal.turing.edu/assets/turing_logo_256-f537da6db933d05f2bacd7ce24257bd86a46644131a23f750eff941eb392e492.png">
  <meta property="og:description" content="We match your skills, experience and desired benefits to the right company for you.">
  <meta property="og:site_name" content="Terminal - Jobs You Want.">

  <!-- Twitter Card data -->
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:site" content="@turingschool">
  <meta name="twitter:title" content="Terminal - Jobs You Want.">
  <meta name="twitter:description" content="Turing School is a 7 month, fully immersive technical training program in Denver, CO. We turn great people into outstanding software developers.">
  <meta name="twitter:creator" content="@turingschool">
  <meta name="twitter:image:src" content="https://terminal.turing.edu/assets/turing_logo_256-f537da6db933d05f2bacd7ce24257bd86a46644131a23f750eff941eb392e492.png">

  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=5">
  <meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="0wEJ7iNOpr/HIiT2/CwOusLZjdnlwxIbtc+xKbiueaY2znmIoAxDVveeHWBubnJQohuYsI45t1L1+hW+TEOW1Q==" />
  
  <link rel="stylesheet" href="//cdn.rawgit.com/konpa/devicon/df6431e323547add1b4cf45992913f15286456d3/devicon.min.css">
  <link rel="stylesheet" href="//use.fontawesome.com/releases/v5.0.13/css/all.css" integrity="sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp" crossorigin="anonymous">
  <link rel="stylesheet" media="all" href="/assets/application-0e274693891a7136fd452ad32a6c115a5008199b155232316d1df78b0ee057c9.css" />
</head>

<body>

  <div class="main-body space-for-navbar">
    

    <div class="main-navbar navbar navbar-expand-md navbar-light fixed-top">


  <a href="/">
    <img class="ml-auto" alt="Turing logo" src="/assets/turing_logo_gray-2bc6bdc736890907f536f2d188d7d20ffe8e8b28764bdc724867dcfb78cd1b77.png" />
</a>  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div class="collapse navbar-collapse justify-content-end" id="navbarCollapse">
    <ul class="navbar-nav block-text align-items-center">
        <li class="nav-item">
  <a class="nav-link" href="/developers/sign_in">Alumni Log In</a>
</li>

    </ul>
  </div>
</div>


    <main>
      
<div class="profile-list">
  <header class="profile-list-header w-100">
    <h1 class="title">Alumni Portfolios</h1>

      <p class="tagline">Explore our recent graduates to find your next employee</p>

      <div class="stat-list">
        <span class="stat-list-item">
          <span class="stat-number" aria-describedby="graduates-count-label">
            121
          </span>
          <span id="graduates-count-label" class="stat-label">graduates</span>
        </span>
        <span class="stat-list-item">
          <span class="stat-number" aria-describedby="skills-count-label">
            119
          </span>
          <span id="skills-count-label" class="stat-label">skills</span>
        </span>
        <span class="stat-list-item">
          <span class="stat-number" aria-describedby="industries-count-label">
            99
          </span>
          <span id="industries-count-label" class="stat-label">previous industries</span>
        </span>
      </div>
  </header>

  <section class="container-lg">
    <form class="row mb-2 profile-filters" action="/" accept-charset="UTF-8" method="get">
      <div class="col-sm mt-0 mt-sm-4">
        <select name="program" id="program" class="ds-select"><option value="">All</option><option value="be">Back-End</option>
<option value="fe">Front-End</option>
<option value="befe">BE &amp; FE</option></select>
        <label class="ds-select-label" for="program">Program</label>
      </div>

      <div class="col-sm mt-0 mt-sm-4">
        <select name="skill" id="skill" class="ds-select"><option value="">All</option><option value="1">.NET</option>
<option value="2">Adobe Illustrator</option>
<option value="3">Adobe Photoshop</option>
<option value="4">Android</option>
<option value="5">AngularJS</option>
<option value="8">Apple</option>
<option value="140">AR</option>
<option value="9">Atom</option>
<option value="142">Automated QA</option>
<option value="10">AWS</option>
<option value="11">Babel</option>
<option value="143">Bash</option>
<option value="165">BigQuery</option>
<option value="14">Bitbucket</option>
<option value="15">Bootstrap</option>
<option value="144">Business Development</option>
<option value="17">C</option>
<option value="18">C#</option>
<option value="19">C++</option>
<option value="175">Chai</option>
<option value="22">Chrome</option>
<option value="26">CoffeeScript</option>
<option value="27">Confluence</option>
<option value="174">Continuous Integration</option>
<option value="29">CSS3</option>
<option value="145">Cybersecurity</option>
<option value="176">Cypress</option>
<option value="31">D3.js</option>
<option value="169">Dart</option>
<option value="146">DevOps</option>
<option value="34">Django</option>
<option value="35">Docker</option>
<option value="37">Drupal</option>
<option value="130">Elixir</option>
<option value="40">Ember</option>
<option value="147">Engineering Management</option>
<option value="138">Enzyme</option>
<option value="42">Express</option>
<option value="43">Facebook</option>
<option value="173">Firebase</option>
<option value="44">Firefox</option>
<option value="168">Flutter</option>
<option value="47">Gimp</option>
<option value="48">Git</option>
<option value="49">GitHub</option>
<option value="50">GitLab</option>
<option value="51">Go</option>
<option value="134">Golang</option>
<option value="52">Google</option>
<option value="167">GraphQL</option>
<option value="59">Heroku</option>
<option value="60">HTML5</option>
<option value="62">Inkscape</option>
<option value="63">IntelliJ</option>
<option value="149">iOS</option>
<option value="66">Java</option>
<option value="67">JavaScript</option>
<option value="139">Jest</option>
<option value="69">Jetbrains</option>
<option value="70">jQuery</option>
<option value="150">Kotlin</option>
<option value="135">Kubernetes</option>
<option value="72">Laravel</option>
<option value="74">LinkedIn</option>
<option value="75">Linux</option>
<option value="151">Management</option>
<option value="153">Mentorship</option>
<option value="76">Meteor</option>
<option value="77">Mocha</option>
<option value="78">MongoDB</option>
<option value="80">MySQL</option>
<option value="82">Node.js</option>
<option value="83">Nodewebkit</option>
<option value="84">Npm</option>
<option value="85">Oracle</option>
<option value="86">PHP</option>
<option value="88">PostgreSQL</option>
<option value="156">Product Management</option>
<option value="91">Python</option>
<option value="157">Quality Assurance / QA</option>
<option value="158">R</option>
<option value="92">Rails</option>
<option value="93">React</option>
<option value="159">React Native</option>
<option value="95">Redis</option>
<option value="96">Redux</option>
<option value="136">RSpec</option>
<option value="97">Ruby</option>
<option value="137">Saas</option>
<option value="160">SaaS</option>
<option value="100">Safari</option>
<option value="132">Salesforce</option>
<option value="101">Sass</option>
<option value="103">Sequelize</option>
<option value="104">Sketch</option>
<option value="105">Slack</option>
<option value="141">Software Architecture</option>
<option value="129">SQL</option>
<option value="107">SSH</option>
<option value="109">Swift</option>
<option value="161">Technical Sales</option>
<option value="112">Travis</option>
<option value="113">Trello</option>
<option value="114">Twitter</option>
<option value="115">TypeScript</option>
<option value="116">Ubuntu</option>
<option value="172">User Authentication</option>
<option value="162">User Experience Design / UX</option>
<option value="163">User Interface Design / UI</option>
<option value="117">Vagrant</option>
<option value="118">Vim</option>
<option value="119">Visual Studio</option>
<option value="164">VR</option>
<option value="120">Vue.js</option>
<option value="121">Webpack</option>
<option value="122">Webstorm</option>
<option value="123">Windows 8</option>
<option value="124">Wordpress</option>
<option value="125">Yarn</option></select>
        <label class="ds-select-label" for="skill">Skill</label>
      </div>

      <div class="col-sm mt-0 mt-sm-4">
        <select name="industry" id="industry" class="ds-select"><option value="">All</option><option value="Accounting">Accounting</option>
<option value="Airlines/Aviation">Airlines/Aviation</option>
<option value="Alternative Medicine">Alternative Medicine</option>
<option value="Animation">Animation</option>
<option value="Apparel &amp; Fashion">Apparel &amp; Fashion</option>
<option value="Architecture &amp; Planning">Architecture &amp; Planning</option>
<option value="Arts and Crafts">Arts and Crafts</option>
<option value="Automotive">Automotive</option>
<option value="Aviation &amp; Aerospace">Aviation &amp; Aerospace</option>
<option value="Banking">Banking</option>
<option value="Broadcast Media">Broadcast Media</option>
<option value="Civic &amp; Social Organization">Civic &amp; Social Organization</option>
<option value="Computer &amp; Network Security">Computer &amp; Network Security</option>
<option value="Computer Games">Computer Games</option>
<option value="Computer Hardware">Computer Hardware</option>
<option value="Computer Networking">Computer Networking</option>
<option value="Computer Software">Computer Software</option>
<option value="Construction">Construction</option>
<option value="Consumer Services">Consumer Services</option>
<option value="Cosmetics">Cosmetics</option>
<option value="Design">Design</option>
<option value="E-Learning">E-Learning</option>
<option value="Education Management">Education Management</option>
<option value="Electrical/Electronic Manufacturing">Electrical/Electronic Manufacturing</option>
<option value="Entertainment">Entertainment</option>
<option value="Environmental Services">Environmental Services</option>
<option value="Events Services">Events Services</option>
<option value="Executive Office">Executive Office</option>
<option value="Facilities Services">Facilities Services</option>
<option value="Farming">Farming</option>
<option value="Financial Services">Financial Services</option>
<option value="Fine Art">Fine Art</option>
<option value="Food &amp; Beverages">Food &amp; Beverages</option>
<option value="Food Production">Food Production</option>
<option value="Fund-Raising">Fund-Raising</option>
<option value="Furniture">Furniture</option>
<option value="Government Administration">Government Administration</option>
<option value="Graphic Design">Graphic Design</option>
<option value="Health, Wellness and Fitness">Health, Wellness and Fitness</option>
<option value="Higher Education">Higher Education</option>
<option value="Hospital &amp; Health Care">Hospital &amp; Health Care</option>
<option value="Hospitality">Hospitality</option>
<option value="Human Resources">Human Resources</option>
<option value="Individual &amp; Family Services">Individual &amp; Family Services</option>
<option value="Information Services">Information Services</option>
<option value="Information Technology and Services">Information Technology and Services</option>
<option value="Insurance">Insurance</option>
<option value="International Affairs">International Affairs</option>
<option value="Law Enforcement">Law Enforcement</option>
<option value="Law Practice">Law Practice</option>
<option value="Legal Services">Legal Services</option>
<option value="Leisure, Travel &amp; Tourism">Leisure, Travel &amp; Tourism</option>
<option value="Logistics and Supply Chain">Logistics and Supply Chain</option>
<option value="Luxury Goods &amp; Jewelry">Luxury Goods &amp; Jewelry</option>
<option value="Machinery">Machinery</option>
<option value="Management Consulting">Management Consulting</option>
<option value="Market Research">Market Research</option>
<option value="Marketing and Advertising">Marketing and Advertising</option>
<option value="Mechanical or Industrial Engineering">Mechanical or Industrial Engineering</option>
<option value="Media Production">Media Production</option>
<option value="Medical Practice">Medical Practice</option>
<option value="Mental Health Care">Mental Health Care</option>
<option value="Military">Military</option>
<option value="Motion Pictures and Film">Motion Pictures and Film</option>
<option value="Museums and Institutions">Museums and Institutions</option>
<option value="Music">Music</option>
<option value="Non-Profit Organization Management">Non-Profit Organization Management</option>
<option value="Oil &amp; Energy">Oil &amp; Energy</option>
<option value="Online Media">Online Media</option>
<option value="Performing Arts">Performing Arts</option>
<option value="Pharmaceuticals">Pharmaceuticals</option>
<option value="Philanthropy">Philanthropy</option>
<option value="Photography">Photography</option>
<option value="Political Organization">Political Organization</option>
<option value="Primary/Secondary Education">Primary/Secondary Education</option>
<option value="Professional Training &amp; Coaching">Professional Training &amp; Coaching</option>
<option value="Program Development">Program Development</option>
<option value="Public Policy">Public Policy</option>
<option value="Public Relations and Communications">Public Relations and Communications</option>
<option value="Public Safety">Public Safety</option>
<option value="Publishing">Publishing</option>
<option value="Real Estate">Real Estate</option>
<option value="Recreational Facilities and Services">Recreational Facilities and Services</option>
<option value="Renewables &amp; Environment">Renewables &amp; Environment</option>
<option value="Research">Research</option>
<option value="Restaurants">Restaurants</option>
<option value="Retail">Retail</option>
<option value="Security and Investigations">Security and Investigations</option>
<option value="Sporting Goods">Sporting Goods</option>
<option value="Sports">Sports</option>
<option value="Staffing and Recruiting">Staffing and Recruiting</option>
<option value="Telecommunications">Telecommunications</option>
<option value="Textiles">Textiles</option>
<option value="Translation and Localization">Translation and Localization</option>
<option value="Transportation/Trucking/Railroad">Transportation/Trucking/Railroad</option>
<option value="Wholesale">Wholesale</option>
<option value="Wine and Spirits">Wine and Spirits</option>
<option value="Wireless">Wireless</option>
<option value="Writing and Editing">Writing and Editing</option></select>
        <label class="ds-select-label" for="industry">Prev. Industry</label>
      </div>

      <div class="col-12 col-md-auto mt-3 mt-sm-4 profile-filter-buttons">
        <button type="submit" class="ds-button ds-button-lg mr-1 mr-sm-2 mb-1 mb-sm-0">Filter</button>
        <a class="ds-button ds-button-lg ds-button-secondary" href="/">Clear</a>
      </div>
</form>
    <div class="row">
      <p class="col-12 ds-font-lg my-2 py-3">
        Found 121 graduates
      </p>
    </div>

    <div class="row">
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Ben Lee" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbm9FIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ab33d91f4ceb9917cb6b2ae52afcd3ab1592cc2c/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/profile%20cropped.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/675-ben-lee">
                  <h2 class="profile-card-name">
                    Ben Lee
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Ben Lee" class="profile-social-link" href="https://github.com/bendelonlee">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Ben Lee" class="profile-social-link" href="https://linkedin.com/in/benjamin-lee-84068818">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Ben Lee" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcHdLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--3ecdbac2b4057ea8cb999888be9d927fe061b9e7/resume-blue-side%202021-7.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                As a software developer, I enjoy helping companies fix bugs, build features, and get their web applications up and running.

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Flutter
                  </span>
                  <span class="profile-card-tag-item ">
                    Automated QA
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Philanthropy
                    </span>
                    <span class="profile-card-tag-item ">
                      Recreational Facilities and Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/675-ben-lee">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Mason France" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbHNGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4d1eb81697f1e89e035b803482b07546ed94be22/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Screen%20Shot%202021-01-06%20at%209.05.17%20AM.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/284-mason-france">
                  <h2 class="profile-card-name">
                    Mason France
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Mason France" class="profile-social-link" href="https://github.com/francepack">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Mason France" class="profile-social-link" href="https://linkedin.com/in/masonfrance">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Mason France" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbHdGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--30ac55f5efdc36c07f013863b1b37bcf0429ff09/mason_france_2021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                As a musician making a career change to web development, I appreciate the structure and patterns of code. Coding is like piecing together reusable musical phrases creatively to make a unique song. Like music, code should not only be artful constru...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Vagrant
                  </span>
                  <span class="profile-card-tag-item ">
                    Wordpress
                  </span>
                  <span class="profile-card-tag-item ">
                    AngularJS
                  </span>
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Entertainment
                    </span>
                    <span class="profile-card-tag-item ">
                      Education Management
                    </span>
                    <span class="profile-card-tag-item ">
                      Music
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/284-mason-france">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Paul Schlattmann" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBa0VMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4bbc09a1deb2146c2b84347325ec48cb226dae9/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_0771.PNG" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/328-paul-schlattmann">
                  <h2 class="profile-card-name">
                    Paul Schlattmann
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End &amp; Full Stack Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Paul Schlattmann" class="profile-social-link" href="https://github.com/pschlatt">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Paul Schlattmann" class="profile-social-link" href="https://linkedin.com/in/paulhschlattmann">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Paul Schlattmann" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBa0lMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--cdfd54c2230f66dd7d635f8b190b4ed778729d87/Resume%20-%20Paul%20Schlattmann.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Raised with a strong STEM influence, I have always gravitated towards technology. The implications of solving every known problem via technology captivated my child-like wonder. I completed two years of my undergraduate degree in Electrical Engine...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Oracle
                  </span>
                  <span class="profile-card-tag-item ">
                    Meteor
                  </span>
                  <span class="profile-card-tag-item ">
                    Kubernetes
                  </span>
                  <span class="profile-card-tag-item ">
                    DevOps
                  </span>
                  <span class="profile-card-tag-item ">
                    CoffeeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Ubuntu
                  </span>
                  <span class="profile-card-tag-item ">
                    Yarn
                  </span>
                  <span class="profile-card-tag-item ">
                    MongoDB
                  </span>
                  <span class="profile-card-tag-item ">
                    Redis
                  </span>
                  <span class="profile-card-tag-item ">
                    iOS
                  </span>
                  <span class="profile-card-tag-item ">
                    SSH
                  </span>
                  <span class="profile-card-tag-item ">
                    Django
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    C#
                  </span>
                  <span class="profile-card-tag-item ">
                    SaaS
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    MySQL
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    BigQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    Business Development
                  </span>
                  <span class="profile-card-tag-item ">
                    Elixir
                  </span>
                  <span class="profile-card-tag-item ">
                    Docker
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Computer &amp; Network Security
                    </span>
                    <span class="profile-card-tag-item ">
                      Computer Hardware
                    </span>
                    <span class="profile-card-tag-item ">
                      Financial Services
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/328-paul-schlattmann">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Michael Schneider" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBazRGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--20100db2ee78a51f8d86c6a514122762c9454509/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/ProfilePicMarch.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/126-michael-schneider">
                  <h2 class="profile-card-name">
                    Michael Schneider
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Software Designer/Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Michael Schneider" class="profile-social-link" href="https://github.com/mschneider247">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Michael Schneider" class="profile-social-link" href="https://linkedin.com/in/mschneider247">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Michael Schneider" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaDBJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--95679b8ce692a4c0a2557c7921c7a58eebbed2bf/MichaelSchneider.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                My passion for games, graphic-design and client relationships pair directly with software development, where the user’s experience is paramount. I became interested in coding as a means to amplify the reach of my artwork through website design and...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    VR
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Android
                  </span>
                  <span class="profile-card-tag-item ">
                    C#
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Fine Art
                    </span>
                    <span class="profile-card-tag-item ">
                      Graphic Design
                    </span>
                    <span class="profile-card-tag-item ">
                      Luxury Goods &amp; Jewelry
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/126-michael-schneider">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Victor Abraham" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBZdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--af40d809019f839213896947225de6850f3196fe/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Victor-20Abraham-20--20F.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/175-victor-abraham">
                  <h2 class="profile-card-name">
                    Victor Abraham
                  </h2>
</a>
                <span class="profile-card-title">
                  Web Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Victor Abraham" class="profile-social-link" href="https://github.com/VPAbraham">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Victor Abraham" class="profile-social-link" href="https://linkedin.com/in/victorpabraham">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Victor Abraham" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaUlLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--0550d14bb34cbf59ea8a2d01a533bdef91befae0/Victor%20Abraham%20resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a Web developer with a specialization in elegant SPA sites and web applications. A wealth of different project experiences has exposed me to a variety of stacks consuming Node and Python-based backend systems.
Being a dev in the midst of o...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    GitLab
                  </span>
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Swift
                  </span>
                  <span class="profile-card-tag-item ">
                    Django
                  </span>
                  <span class="profile-card-tag-item ">
                    MongoDB
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Computer Networking
                    </span>
                    <span class="profile-card-tag-item ">
                      Information Technology and Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Political Organization
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/175-victor-abraham">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Noah Gibson" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBWZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--afd6ea3f52416a938747d52e4e0911d106067b0f/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Noah-20Gibson-20--20F.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/292-noah-gibson">
                  <h2 class="profile-card-name">
                    Noah Gibson
                  </h2>
</a>
                <span class="profile-card-title">
                  Web Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Noah Gibson" class="profile-social-link" href="https://github.com/N-Gibson">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Noah Gibson" class="profile-social-link" href="https://linkedin.com/in/noah-gibson-478151191">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Noah Gibson" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHNIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9d93fe29f324b9b993a2a570797e854694b6dd6b/Resume-21.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a software engineer looking to utilize my skills and passion for the betterment of my community. A website is the first point of contact for a potential client and creating comfortable interface where users will return is imperative. I believ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Construction
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/292-noah-gibson">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Allison Wagner" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBhZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c2b5f68b7b1618dc7949537262a390de6dda3f7a/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/549820_561301223899125_1775896045_n.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/138-allison-wagner">
                  <h2 class="profile-card-name">
                    Allison Wagner
                  </h2>
</a>
                <span class="profile-card-title">
                  Frontend Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Allison Wagner" class="profile-social-link" href="https://github.com/allisonjw">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Allison Wagner" class="profile-social-link" href="https://linkedin.com/in/allisonjwagner">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Allison Wagner" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbEFEIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--87f9f2cd241f10f5809b1fe836cd07887db539d9/Allison_Wagner-Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                To me, life is a University full of knowledge. My interest in software development is sparked by my zest for learning, being naturally curious and fascinated with new technology. I have over 20+ years in customer service, management, project plann...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Bitbucket
                  </span>
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    jQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Enzyme
                  </span>
                  <span class="profile-card-tag-item ">
                    Confluence
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Government Administration
                    </span>
                    <span class="profile-card-tag-item ">
                      Public Policy
                    </span>
                    <span class="profile-card-tag-item ">
                      Public Safety
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/138-allison-wagner">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Jessie Le-Ho" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBQUT09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--959db4856f4458f7384e440367d984843322ac87/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Image-1.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/539-jessie-le-ho">
                  <h2 class="profile-card-name">
                    Jessie Le-Ho
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Jessie Le-Ho" class="profile-social-link" href="https://github.com/jessiewithani">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Jessie Le-Ho" class="profile-social-link" href="https://linkedin.com/in/Jessiethanh02">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Jessie Le-Ho" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcTRGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--0859cb9e38d04db27fe8f4e9ac25fecf2c8a93d8/Jessie%20Le-Ho%202021%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                From my years of being in the food and beauty industries, I've come to value design, innovation, and empathy for others. I've enjoyed making a significant career change and applying these skills in my tech education and subsequent professional rol...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Cosmetics
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/539-jessie-le-ho">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Colin Kiyoshi Koga" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBidz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--54c2f3a57225bcea7f37699fae0e531f37361f48/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Colin-20Koga-20--20F.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/683-colin-kiyoshi-koga">
                  <h2 class="profile-card-name">
                    Colin Kiyoshi Koga
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Colin Kiyoshi Koga" class="profile-social-link" href="https://github.com/ckoga">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Colin Kiyoshi Koga" class="profile-social-link" href="https://linkedin.com/in/colin-kiyoshi-koga">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Colin Kiyoshi Koga" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcllEIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--960dbdfcbb655dd13a01588c4e2fc7f9ca3d6151/Colin%20Koga.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                On my path of self improvement a career change from retail sales was inevitable but it took me a long time to decide what fits me best.  I have always had a passion for technology, a desire to create, an aptitude for critical thinking and a drive ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    jQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/683-colin-kiyoshi-koga">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Benjamin Fox" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBWm89IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7dc8d0608053bfc5b0f164860d9af3989d417ef9/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_4300-20copy_1.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/257-benjamin-fox">
                  <h2 class="profile-card-name">
                    Benjamin Fox
                  </h2>
</a>
                <span class="profile-card-title">
                  Back End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Benjamin Fox" class="profile-social-link" href="https://github.com/benfox1216">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Benjamin Fox" class="profile-social-link" href="https://linkedin.com/in/benfox1216">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Benjamin Fox" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcmtLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4a538a8e81bef255b4b800f416acddc03332ea92/General%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                After spending 20 years in customer service and management, I'm excited to be starting a career in software development. With the skills I gained at Turing School of Software &amp; Design, I look forward to working with a team towards continuously bet...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Bash
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Food Production
                    </span>
                    <span class="profile-card-tag-item ">
                      Hospitality
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/257-benjamin-fox">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for David Atkins" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBWWc9IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--cad16e5c917f9781e3a0add52dc74a389dc4fa9f/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/portrait.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/145-david-atkins">
                  <h2 class="profile-card-name">
                    David Atkins
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for David Atkins" class="profile-social-link" href="https://github.com/d-atkins">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for David Atkins" class="profile-social-link" href="https://linkedin.com/in/d-atkins">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for David Atkins" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbVlGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--2a6ac84f446ced804c1be4036a56cabef11f1b56/David%20Atkins.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I'm an Applied Mathematics/Computer Science major turned teacher turned developer. 
interested in data structures and algorithms.
I love learning, teaching, and building things.
and bullet points.
My pri...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Elixir
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    C#
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/145-david-atkins">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Fred Rondina" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbHNCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--30a651018f71ec496d0ec370f21e7bcc8de4191e/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/0.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/396-fred-rondina">
                  <h2 class="profile-card-name">
                    Fred Rondina
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Fred Rondina" class="profile-social-link" href="https://github.com/fredrondina96">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Fred Rondina" class="profile-social-link" href="https://linkedin.com/in/fred-rondina">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Fred Rondina" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbElGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--8c154b89e7ce6f75c6f3559a0c4bf74441d648af/ResumeMarch2021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                After graduating from Florida State University with a Bachelors in Marketing, I realized I enjoyed making new products as well as promoting them. I am a Software Developer with marketing and customer service experience. I Specialize in Database ba...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Docker
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Django
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Financial Services
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/396-fred-rondina">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Ryan Camp" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZXc9IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d18e3ece6dbc42249010aeaefcf40d3483963132/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/27E462DB-0253-48FD-8613-0F566A3E059A_1.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/173-ryan-camp">
                  <h2 class="profile-card-name">
                    Ryan Camp
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Ryan Camp" class="profile-social-link" href="https://github.com/cmpprg">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Ryan Camp" class="profile-social-link" href="https://linkedin.com/in/campprg">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Ryan Camp" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc3dGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9ebd9e4dcd3b9e65c43a20a8ec7566127286e217/Ryan%20Camp%20Resume%203-2021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Backend Engineer (Ruby, Rails, Python, Django, Postgres) that loves to learn new things, solve problems, and make things hum. Whether working solo or in teams, I aim to design and write code that will make a positive impact for a business and the ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Software Architecture
                  </span>
                  <span class="profile-card-tag-item ">
                    Django
                  </span>
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Flutter
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Aviation &amp; Aerospace
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/173-ryan-camp">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Justin Corbin" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBYjg9IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--3f26e08111326ae8c4cc093ead39f6b9cdefd3b3/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Justin-20Corbin-20--20F_1.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/200-justin-corbin">
                  <h2 class="profile-card-name">
                    Justin Corbin
                  </h2>
</a>
                <span class="profile-card-title">
                  Veteran. Frontend Software Developer.
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Justin Corbin" class="profile-social-link" href="https://github.com/Corbinj22">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Justin Corbin" class="profile-social-link" href="https://linkedin.com/in/jcorbin2290">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Justin Corbin" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb2tLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b4e91947afd06c646aec87654d72be2b18a4a877/CORBIN%20Justin%20-%20Resume%20%20(1).pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Front End Software Engineer and Navy veteran with experience going above-and-beyond to deliver exceptional customer service. Demonstrated expertise in IT service management, performance management, project management, front-end development, and co...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    jQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Computer Hardware
                    </span>
                    <span class="profile-card-tag-item ">
                      Information Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Military
                    </span>
                    <span class="profile-card-tag-item ">
                      Telecommunications
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/200-justin-corbin">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Tyler Tomlinson" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaVVCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ac8049ed267872741790f3593ba576b3113ebaac/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/profile_pic.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/700-tyler-tomlinson">
                  <h2 class="profile-card-name">
                    Tyler Tomlinson
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Tyler Tomlinson" class="profile-social-link" href="https://github.com/tylertomlinson">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Tyler Tomlinson" class="profile-social-link" href="https://linkedin.com/in/tyler-tomlinson-66817413a">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Tyler Tomlinson" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaVlCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--5f3c5f0f7f931c7e7d87849dfce777d57f876bd9/Resume_33.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Complex problem-solver with an analytical and goal-oriented mindset. I am eager to contribute in team success through hard work, attention to detail, and excellent communication skills. Clear and thorough understanding of Ruby, JavaScript, HTML, a...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Mentorship
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    iOS
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                  None listed
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/700-tyler-tomlinson">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Kevin McGrevey" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ0lCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--89e4ec4d2c26ad6dfc0b2271fd1f4f2bd77df877/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/headshot_utah_0.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/340-kevin-mcgrevey">
                  <h2 class="profile-card-name">
                    Kevin McGrevey
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer BE
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Kevin McGrevey" class="profile-social-link" href="https://github.com/kmcgrevey">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Kevin McGrevey" class="profile-social-link" href="https://linkedin.com/in/mcgreveykevin">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Kevin McGrevey" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ0lLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--06ee96c9e7b047c3f635da6cae91dc71ace6bfe0/mcgrevey_resume_215.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Creator. Problem Solver. Worker.  As a former 3D designer specializing in visitor experiences, I solidified a reputation for consistently delivering effective, on-time, on-budget solutions to projects ranging in scope from mundane to multi-million...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Bitbucket
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Confluence
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Illustrator
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Architecture &amp; Planning
                    </span>
                    <span class="profile-card-tag-item ">
                      Design
                    </span>
                    <span class="profile-card-tag-item ">
                      Events Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Marketing and Advertising
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/340-kevin-mcgrevey">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Edwin Montealvo" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZzBCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--45f06ab0a4fcac03d17663446f88053734b570e1/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/headshot_4.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/697-edwin-montealvo">
                  <h2 class="profile-card-name">
                    Edwin Montealvo
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Edwin Montealvo" class="profile-social-link" href="https://github.com/edmdc">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Edwin Montealvo" class="profile-social-link" href="https://linkedin.com/in/edmdc">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Edwin Montealvo" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaHdFIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--5b7eafde72c90743beba25e4846278a904082f6f/edmdc_v2_resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Enthusiastic software engineer specializing in the modern Web ecosystem with a knack for researching and adopting new technologies. Equipped with a sense of craftsmanship, I seek to create pleasant experiences for both users and developers by advo...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Docker
                  </span>
                  <span class="profile-card-tag-item ">
                    Go
                  </span>
                  <span class="profile-card-tag-item ">
                    Yarn
                  </span>
                  <span class="profile-card-tag-item ">
                    Vim
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Sketch
                  </span>
                  <span class="profile-card-tag-item ">
                    DevOps
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Leisure, Travel &amp; Tourism
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/697-edwin-montealvo">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Chase Gaddis" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBWU09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ad69a4d8dc6e4634ceab500c53b16faf76fadf7b/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/headshot_18.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/687-chase-gaddis">
                  <h2 class="profile-card-name">
                    Chase Gaddis
                  </h2>
</a>
                <span class="profile-card-title">
                  Full Stack Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Chase Gaddis" class="profile-social-link" href="https://github.com/cgaddis36">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Chase Gaddis" class="profile-social-link" href="https://linkedin.com/in/christophercgaddis">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Chase Gaddis" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ0VLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e5cc8d82b76a7a66aace5ff3a4402ae78baedab1/cgaddisresume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Fullstack engineer focused in maximizing efficiency to help end-user's achieve a more enjoyable experience with their technology and data. Passionate in creating personable applications to help solve everyday problems. Currently building an applic...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    iOS
                  </span>
                  <span class="profile-card-tag-item ">
                    Business Development
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Computer Software
                    </span>
                    <span class="profile-card-tag-item ">
                      Logistics and Supply Chain
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/687-chase-gaddis">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Joe Haefling" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ2NCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4e520d6b10347a20e0ec1b198ff9a3ccfc2eae61/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/joe_professional-photo_1.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/404-joe-haefling">
                  <h2 class="profile-card-name">
                    Joe Haefling
                  </h2>
</a>
                <span class="profile-card-title">
                  Frontend Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Joe Haefling" class="profile-social-link" href="https://github.com/Josephhaefling">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Joe Haefling" class="profile-social-link" href="https://linkedin.com/in/joe-haefling">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Joe Haefling" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ2dCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--f3dd4342bd35d37194be79570cebd672f821f362/joeHaeflingResume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a former social worker, front end engineer, mentor, technical blogger, musician, and a foodie. When I began exploring software development, I realized that the skills that I learned previously in my life were going to be extremely helpful. My...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Nodewebkit
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Civic &amp; Social Organization
                    </span>
                    <span class="profile-card-tag-item ">
                      Individual &amp; Family Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Mental Health Care
                    </span>
                    <span class="profile-card-tag-item ">
                      Music
                    </span>
                    <span class="profile-card-tag-item ">
                      Professional Training &amp; Coaching
                    </span>
                    <span class="profile-card-tag-item ">
                      Recreational Facilities and Services
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/404-joe-haefling">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Becca Steinbrecher" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBY2s9IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--a3b5cda154f461448d2163156d340dbaeaeec905/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/116434914_10223142660933809_5254619637043172768_o.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/694-becca-steinbrecher">
                  <h2 class="profile-card-name">
                    Becca Steinbrecher
                  </h2>
</a>
                <span class="profile-card-title">
                  Front End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Becca Steinbrecher" class="profile-social-link" href="https://github.com/b-stein">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Becca Steinbrecher" class="profile-social-link" href="https://linkedin.com/in/becca-steinbrecher">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Becca Steinbrecher" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBY289IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--49f48090812b19ae0abb95ccecf4e41f804c18d5/Becca-20Steinbrecher-20--20FEE_0.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I'm an energetic and collaborative developer with a passion for continuous improvement. I have developed numerous web and mobile apps, have a background in human services and health care, and spend most of my free time either in the outdoors or wo...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Ember
                  </span>
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Health, Wellness and Fitness
                    </span>
                    <span class="profile-card-tag-item ">
                      Hospital &amp; Health Care
                    </span>
                    <span class="profile-card-tag-item ">
                      Non-Profit Organization Management
                    </span>
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/694-becca-steinbrecher">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Corbin March" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbzhGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--de14ab2415cde6762fe8993b8716c02784df9371/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Corbin-6175.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/720-corbin-march">
                  <h2 class="profile-card-name">
                    Corbin March
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Corbin March" class="profile-social-link" href="https://github.com/MarchCorbin">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Corbin March" class="profile-social-link" href="https://linkedin.com/in/marchcorbin">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Corbin March" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcEFGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--260fe4f220f92430862f625bfe7cdf2bd8fa6c42/Corbin%20March%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a motivated front-end graduate of Turing school of technology and design. With a background in management, I enjoy working with teams to solve issues and make products that are fun and impactful. I am a fast learner and enjoy working with new...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    SaaS
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Java
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Human Resources
                    </span>
                    <span class="profile-card-tag-item ">
                      Public Policy
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/720-corbin-march">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Alex Lynch" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcmtFIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--1302b05d691e50297a7c87a0628563a3d6fc615a/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Alex2019.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/275-alex-lynch">
                  <h2 class="profile-card-name">
                    Alex Lynch
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Alex Lynch" class="profile-social-link" href="https://github.com/mlynch5187">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Alex Lynch" class="profile-social-link" href="https://linkedin.com/in/mlynch5187">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Alex Lynch" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbFVJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--fd3cddcd86ece2172128335874420bb54489b3ee/MALynchResume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Administrative professional with extensive sales experience turned software developer. Nothing excites me more than mastering languages from French to Ruby on Rails then using those languages to build quality products and relationships. I would lo...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Elixir
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Executive Office
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/275-alex-lynch">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-befe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Greyson Elkins" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBa01CIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9cbd8aaab255a5b797e3af114f7765f3cee5a9f6/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/professional.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/703-greyson-elkins">
                  <h2 class="profile-card-name">
                    Greyson Elkins
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Greyson Elkins" class="profile-social-link" href="https://github.com/greysonelkins">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Greyson Elkins" class="profile-social-link" href="https://linkedin.com/in/greyson-elkins">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Greyson Elkins" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdmtLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--352f223546df2999fc789880e5839e391858f7ad/elkins_resume_2021_7.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                My obsession with signal flow might be the primary driver of my career. It's a term I picked up as an audio engineer which is generally talked about when troubleshooting. It demands the habitual examination of a waveforms' path through air to a ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Yarn
                  </span>
                  <span class="profile-card-tag-item ">
                    Facebook
                  </span>
                  <span class="profile-card-tag-item ">
                    Twitter
                  </span>
                  <span class="profile-card-tag-item ">
                    Apple
                  </span>
                  <span class="profile-card-tag-item ">
                    Firefox
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Google
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    C++
                  </span>
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Broadcast Media
                    </span>
                    <span class="profile-card-tag-item ">
                      Entertainment
                    </span>
                    <span class="profile-card-tag-item ">
                      Legal Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Media Production
                    </span>
                    <span class="profile-card-tag-item ">
                      Music
                    </span>
                    <span class="profile-card-tag-item ">
                      Online Media
                    </span>
                    <span class="profile-card-tag-item ">
                      Performing Arts
                    </span>
                    <span class="profile-card-tag-item ">
                      Writing and Editing
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/703-greyson-elkins">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Ashkan Abbasi" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdVFCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d3b93bc366c923960d8a1f0eec6094ba36f84fea/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Ashkan-20Abbasi-20--20B_0.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/394-ashkan-abbasi">
                  <h2 class="profile-card-name">
                    Ashkan Abbasi
                  </h2>
</a>
                <span class="profile-card-title">
                  Backend Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Ashkan Abbasi" class="profile-social-link" href="https://github.com/Ashkanthegreat">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Ashkan Abbasi" class="profile-social-link" href="https://linkedin.com/in/Ashkan Abbasi ">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Ashkan Abbasi" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdVVCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--009692a9b97a7ed07003234a40ad073c24b4d58d/Ash_resume_0.PDF">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                After more than 18 years in the military, I wanted a change in my career path.  In the military, I specialized in Intelligence, Command and Control, and Special Operations. I have always had a passion for problem solving, math, and gadgets, and th...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Yarn
                  </span>
                  <span class="profile-card-tag-item ">
                    Wordpress
                  </span>
                  <span class="profile-card-tag-item ">
                    Elixir
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Aviation &amp; Aerospace
                    </span>
                    <span class="profile-card-tag-item ">
                      Government Administration
                    </span>
                    <span class="profile-card-tag-item ">
                      International Affairs
                    </span>
                    <span class="profile-card-tag-item ">
                      Military
                    </span>
                    <span class="profile-card-tag-item ">
                      Security and Investigations
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/394-ashkan-abbasi">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Ryan Laleh" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBblFCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ac266ef6a4631ed4c0b389d652c83875bd31687b/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_6067_1.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/707-ryan-laleh">
                  <h2 class="profile-card-name">
                    Ryan Laleh
                  </h2>
</a>
                <span class="profile-card-title">
                  Backend Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Ryan Laleh" class="profile-social-link" href="https://github.com/RyN21">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Ryan Laleh" class="profile-social-link" href="https://linkedin.com/in/ryan-laleh-0a81511a7">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Ryan Laleh" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbE1GIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--1ab84772c0ee0445b83d89bb7049304ce712eecf/RYAN%20LALEH%20-%20Backend%20Software%20Engineer.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a Back-End Software Engineer with a love for solving complex problems through logical and creative thinking. I have an excellent eye for detail and being able to look at problems in a variety of unique perspectives. My goal is to live a life ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Elixir
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Construction
                    </span>
                    <span class="profile-card-tag-item ">
                      Fine Art
                    </span>
                    <span class="profile-card-tag-item ">
                      Furniture
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/707-ryan-laleh">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Ben McClung" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBallDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9eedf2f44fe02fdd32d8c73dfe7a9b527af76485/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_3398.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/728-ben-mcclung">
                  <h2 class="profile-card-name">
                    Ben McClung
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Ben McClung" class="profile-social-link" href="https://github.com/AurumValian">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Ben McClung" class="profile-social-link" href="https://linkedin.com/in/aurumvalian">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Ben McClung" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaklHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--eeedb89e4ef50d35a9bcc503122b4db0bbca6080/Ben%20McClung%20Resume%202021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I'm a front-end software developer skilled in functional logic and excited to grow. I have a background in Back of House food service and management, making the switch to programming after learning I enjoyed it far more. I enjoy the problem-solvin...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Food Production
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/728-ben-mcclung">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Jane Greene" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZGM9IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ce742bb6da6df6368d2e699ff0f9ecab51a7ef3d/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_9277.JPG" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/469-jane-greene">
                  <h2 class="profile-card-name">
                    Jane Greene
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Developer | Scrum Master
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Jane Greene" class="profile-social-link" href="https://github.com/janegreene">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Jane Greene" class="profile-social-link" href="https://linkedin.com/in/jane-greene-mba">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Jane Greene" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcVFEIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--573d00331b7a8d78fc5900980b8815d1957e0ccf/_Jane%20Resume%202021-3-5%20(2).pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a software engineer with an Agile project management background. I love being a part of collaborative teams and finding creative solutions to problems. Seeking new ways to apply my creative dispositions and desire for technical learning, led ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Go
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Golang
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Accounting
                    </span>
                    <span class="profile-card-tag-item ">
                      Automotive
                    </span>
                    <span class="profile-card-tag-item ">
                      Information Technology and Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Oil &amp; Energy
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/469-jane-greene">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Logan Riffell" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbUFCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d1c88da6ab0ad9b2a707b31196d004c83f4593d3/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Screen-20Shot-202020-12-09-20at-2010.15.05-20AM.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/232-logan-riffell">
                  <h2 class="profile-card-name">
                    Logan Riffell
                  </h2>
</a>
                <span class="profile-card-title">
                  Backend Engineering
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Logan Riffell" class="profile-social-link" href="https://github.com/lkriffell">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Logan Riffell" class="profile-social-link" href="https://linkedin.com/in/logan-riffell">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Logan Riffell" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbUVCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--613d00e408c2dc771005bab92519631b26184d6b/Logan-20Riffell-20Software-20Developer-20Resume_0.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Hi, I'm Logan! I'm a software developer recently graduated from Turing School of Software &amp; Design. Before Turing I was attending college as a Software Development major and have loved coding since I started. One thing I like about development...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Java
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    C#
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Electrical/Electronic Manufacturing
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/232-logan-riffell">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-befe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Carlyle Douglas" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdjhGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9cb765a1b21b92a7392a0ce9d18c5f887e4b33fd/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/602992_590073554341611_1938538060_n.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/511-carlyle-douglas">
                  <h2 class="profile-card-name">
                    Carlyle Douglas
                  </h2>
</a>
                <span class="profile-card-title">
                  Full-Stack Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Carlyle Douglas" class="profile-social-link" href="https://github.com/DougieDev">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Carlyle Douglas" class="profile-social-link" href="https://linkedin.com/in/carlyle-douglas-9b812490">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Carlyle Douglas" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ2tHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d6ee923aafba2663207c7a4e375bb40ace68b327/Resume%20-%20Full%20Stack.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                As a member of the United States Air Force, upon my separation I found myself facing the same conundrum many veterans come across upon exiting the Armed Forces: "What now?"
While not always a clear-cut or easy question to answer, I truly believ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Marketing and Advertising
                    </span>
                    <span class="profile-card-tag-item ">
                      Mental Health Care
                    </span>
                    <span class="profile-card-tag-item ">
                      Military
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/511-carlyle-douglas">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Eric  Berglund" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcFFCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--171f56ba96a6a91b059ed4339bb4da34dba1d094/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/101720_EricBerglund-2.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/507-eric-berglund">
                  <h2 class="profile-card-name">
                    Eric  Berglund
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Eric  Berglund" class="profile-social-link" href="https://github.com/ericberglund117">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Eric  Berglund" class="profile-social-link" href="https://linkedin.com/in/eric-berglund117">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Eric  Berglund" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbHNFIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--90fe8af95fe30e36f4bc2d58c099a0a6d392e98c/Resume%20Single.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Former high school Social Studies teacher turned front-end developer in Denver, CO. I am a person who views any problem as an opportunity to learn, grow, and build connections. As a 'forever student and teacher', my goal is to create/update/mainta...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Babel
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Salesforce
                  </span>
                  <span class="profile-card-tag-item ">
                    Saas
                  </span>
                  <span class="profile-card-tag-item ">
                    Mentorship
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Education Management
                    </span>
                    <span class="profile-card-tag-item ">
                      Higher Education
                    </span>
                    <span class="profile-card-tag-item ">
                      E-Learning
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/507-eric-berglund">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Arique Aguilar" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcTBLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--5eda7b45ff76dba34bfb0a21aad9006eb660e3c1/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_8874.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/527-arique-aguilar">
                  <h2 class="profile-card-name">
                    Arique Aguilar
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Arique Aguilar" class="profile-social-link" href="https://github.com/Arique1104">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Arique Aguilar" class="profile-social-link" href="https://linkedin.com/in/arique">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Arique Aguilar" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcTRLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c732edccd7e04a32080f283be6127a2c85dee388/Arique%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                My name is Mariveliz Arique Aguilar, but I go by Arique (she/they). I am looking for a welcoming and enthusiastic team that I can learn from to broaden my technical abilities. I bring with me 13+ years of leadership development to the organization...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    MongoDB
                  </span>
                  <span class="profile-card-tag-item ">
                    SaaS
                  </span>
                  <span class="profile-card-tag-item ">
                    Saas
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Civic &amp; Social Organization
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/527-arique-aguilar">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Bret Merritt" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaThJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--0d860379dfb5471aebfda957fbad10b7b0b77c75/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/new-profile-picture-05-26--1.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/515-bret-merritt">
                  <h2 class="profile-card-name">
                    Bret Merritt
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Bret Merritt" class="profile-social-link" href="https://github.com/bretm9">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Bret Merritt" class="profile-social-link" href="https://linkedin.com/in/bret-merritt">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Bret Merritt" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdlFFIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e8c60c2dce315943928070b5c7465bd15767d7e4/bret-merritt-resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Hey there! I'm Bret (he/him). I'm a software developer driven by creativity and highly-focused problem-solving. 
I believe in coding for good and using technology as a driving force towards a more accessible, inclusive, diverse, and progressive f...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Dart
                  </span>
                  <span class="profile-card-tag-item ">
                    Flutter
                  </span>
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    C++
                  </span>
                  <span class="profile-card-tag-item ">
                    C#
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Salesforce
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    MySQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Java
                  </span>
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Computer Games
                    </span>
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/515-bret-merritt">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Eric Hale" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbFFDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c4fe879b3bccb0a5e7b62dfa638f6d2105eae601/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/2FE3BFCC-AD9A-40D4-940E-E7C3C04010E2_1_201_a.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/508-eric-hale">
                  <h2 class="profile-card-name">
                    Eric Hale
                  </h2>
</a>
                <span class="profile-card-title">
                  Back End Engineering
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Eric Hale" class="profile-social-link" href="https://github.com/EHale64">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Eric Hale" class="profile-social-link" href="https://linkedin.com/in/Eric Hale">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Eric Hale" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbFVDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b64fe333fc9dfd3822a9d0a6f452b13b76546fcc/Eric_Hale_Resume_0.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Security Guard turned software engineer. As a backend engineer, I am used to working with large data sets, API consumption and creation, with a heavy focus on OOP principles. I love working with groups which share my values of community, growth, l...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Automated QA
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Hospitality
                    </span>
                    <span class="profile-card-tag-item ">
                      Security and Investigations
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/508-eric-hale">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Michael  Walker" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbzhCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--0acafd2cfb109aa4f9c075cc20c4a40776572ae6/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/33693.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/514-michael-walker">
                  <h2 class="profile-card-name">
                    Michael  Walker
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Michael  Walker" class="profile-social-link" href="https://github.com/MichaelEWalker87">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Michael  Walker" class="profile-social-link" href="https://linkedin.com/in/michael-walker-719471141">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Michael  Walker" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb0VEIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4633c9508bc8b01982820f71457afd0279c8da1b/Resume_T.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                My name is Michael Walker, and I am a Front-End Software Developer and Product Manager. I enjoy working with and managing groups both large and small and awarded for organizational and managerial skills on a local and national scale. I strive to w...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Ubuntu
                  </span>
                  <span class="profile-card-tag-item ">
                    Technical Sales
                  </span>
                  <span class="profile-card-tag-item ">
                    Safari
                  </span>
                  <span class="profile-card-tag-item ">
                    Windows 8
                  </span>
                  <span class="profile-card-tag-item ">
                    Firefox
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Google
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Illustrator
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Product Management
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Wordpress
                  </span>
                  <span class="profile-card-tag-item ">
                    Engineering Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Design
                    </span>
                    <span class="profile-card-tag-item ">
                      Entertainment
                    </span>
                    <span class="profile-card-tag-item ">
                      Fine Art
                    </span>
                    <span class="profile-card-tag-item ">
                      Graphic Design
                    </span>
                    <span class="profile-card-tag-item ">
                      Information Technology and Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Military
                    </span>
                    <span class="profile-card-tag-item ">
                      Performing Arts
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
                    <span class="profile-card-tag-item ">
                      Telecommunications
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/514-michael-walker">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Judith  Pillado " src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBajBIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ea530829a21221a354a23d12396e694ddafa5666/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/WhatsApp%20Image%202021-04-25%20at%2012.48.58%20PM.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/457-judith-pillado">
                  <h2 class="profile-card-name">
                    Judith  Pillado 
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer 
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Judith  Pillado " class="profile-social-link" href="https://github.com/judithpillado">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Judith  Pillado " class="profile-social-link" href="https://linkedin.com/in/judith-pillado">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Judith  Pillado " class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBandIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--5825578d63e93fb983540146b1e62fd2f007b551/Resume%CC%81%20SE%20.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a passionate and hardworking individual who wants to make a difference in the world through software engineering. Cliché to a certain degree, I know, but I value diversity within teams, and I plan on making positive and well-needed changes wi...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Java
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Hospital &amp; Health Care
                    </span>
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Medical Practice
                    </span>
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/457-judith-pillado">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Christopher Anthony Castanuela" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc1FCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ece04f01fe1ed9ccc2df398c2ab0ebcbc421cb74/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/ChristopherCastanuela-33_Easy-Resize.com_.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/713-christopher-anthony-castanuela">
                  <h2 class="profile-card-name">
                    Christopher Anthony Castanuela
                  </h2>
</a>
                <span class="profile-card-title">
                  Front end engineer | Nice person
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Christopher Anthony Castanuela" class="profile-social-link" href="https://github.com/Chriscastanuela">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Christopher Anthony Castanuela" class="profile-social-link" href="https://linkedin.com/in/christopher-castanuela">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Christopher Anthony Castanuela" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbUlIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b267fa2c130ed3a4f0ccab1ccc8489695c745caa/Castanuela_Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                US Navy veteran turned insurance adjuster who has always had a passion for technology. I enjoy learning, growth, and finding solutions to problems. I want to be the best developer that I can be so my goal is to become very well rounded and gain as...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Insurance
                    </span>
                    <span class="profile-card-tag-item ">
                      Military
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/713-christopher-anthony-castanuela">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Tim Keresey" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb0lCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--469779d0621d30168d331116b2ddf5d8c247ebaa/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/00100lrPORTRAIT_00100_BURST20200907150516207_COVER_1.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/465-tim-keresey">
                  <h2 class="profile-card-name">
                    Tim Keresey
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Tim Keresey" class="profile-social-link" href="https://github.com/timkeresey">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Tim Keresey" class="profile-social-link" href="https://linkedin.com/in/tim-keresey">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Tim Keresey" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdllLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--76138ef8e006cb25c342111180b78e99de408574/Tim_Keresey-Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a software developer with a history of work in film, videography, photography, and digital marketing. In my jump to becoming a developer, I bring a fascination with media studies and communication that contribute to a passion for UX and make ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Yarn
                  </span>
                  <span class="profile-card-tag-item ">
                    Facebook
                  </span>
                  <span class="profile-card-tag-item ">
                    Twitter
                  </span>
                  <span class="profile-card-tag-item ">
                    SSH
                  </span>
                  <span class="profile-card-tag-item ">
                    Wordpress
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Google
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Illustrator
                  </span>
                  <span class="profile-card-tag-item ">
                    Salesforce
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Mentorship
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    MongoDB
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Graphic Design
                    </span>
                    <span class="profile-card-tag-item ">
                      Hospitality
                    </span>
                    <span class="profile-card-tag-item ">
                      Media Production
                    </span>
                    <span class="profile-card-tag-item ">
                      Motion Pictures and Film
                    </span>
                    <span class="profile-card-tag-item ">
                      Online Media
                    </span>
                    <span class="profile-card-tag-item ">
                      Photography
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/465-tim-keresey">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Nathan Darrington" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcGtCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--2e38440228e73d0b017e6d7502e6f5a4ed257b8e/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/profile_pic_small.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/513-nathan-darrington">
                  <h2 class="profile-card-name">
                    Nathan Darrington
                  </h2>
</a>
                <span class="profile-card-title">
                  Front End Developer | Full Stack Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Nathan Darrington" class="profile-social-link" href="https://github.com/npdarrington">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Nathan Darrington" class="profile-social-link" href="https://linkedin.com/in/nathandarrington">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Nathan Darrington" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcG9CIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--781009f3451657c2ad3e4039cd04695939980671/nd-resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Hey there! I'm Nathan Darrington, Software Engineer/Full Stack Freelance Developer. My passion for the software engineering and development sector grows every day. On the front end, I have built projects with JavaScript ES5-ES10, TypeScript, PHP, ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    PHP
                  </span>
                  <span class="profile-card-tag-item ">
                    .NET
                  </span>
                  <span class="profile-card-tag-item ">
                    Laravel
                  </span>
                  <span class="profile-card-tag-item ">
                    Wordpress
                  </span>
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    jQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    C#
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    MySQL
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Mentorship
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Business Development
                  </span>
                  <span class="profile-card-tag-item ">
                    Engineering Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Sequelize
                  </span>
                  <span class="profile-card-tag-item ">
                    Cybersecurity
                  </span>
                  <span class="profile-card-tag-item ">
                    AngularJS
                  </span>
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Computer Software
                    </span>
                    <span class="profile-card-tag-item ">
                      Consumer Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Graphic Design
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/513-nathan-darrington">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Katy St Sauveur" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBamdHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--0131b517aa980324985bce4e2afc564159b6bc83/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/fullsizeoutput_20.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/711-katy-st-sauveur">
                  <h2 class="profile-card-name">
                    Katy St Sauveur
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Katy St Sauveur" class="profile-social-link" href="https://github.com/krogowsk531">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Katy St Sauveur" class="profile-social-link" href="https://linkedin.com/in/krogowsk531">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Katy St Sauveur" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBallHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e72aac189dd90f50bd988509b9a789133cdc7789/SEResume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I grew up in Colorado, however after college I moved to Arizona I have lived for several years now. I have a background in finance and used to work with making EFT payments to the IRS for many small businesses. I decided that I needed a career cha...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    MongoDB
                  </span>
                  <span class="profile-card-tag-item ">
                    Linux
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Financial Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Marketing and Advertising
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/711-katy-st-sauveur">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Tyler Fields" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBa29DIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d3c72840b6aaabc7d630a653b23f0bc41f652825/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Screen-20Shot-202021-01-21-20at-2011.23.57-20AM_0.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/516-tyler-fields">
                  <h2 class="profile-card-name">
                    Tyler Fields
                  </h2>
</a>
                <span class="profile-card-title">
                  Backend Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Tyler Fields" class="profile-social-link" href="https://github.com/fieldstyler">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Tyler Fields" class="profile-social-link" href="https://linkedin.com/in/tylerfields93/">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Tyler Fields" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBa3NDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--00843f1929fd6a2c5e2db06f8a6d3fed7fa716e9/Tyler-20Fields-27-20Resume_0.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Former high school teacher turned software engineer!  I have a deep understanding of empathy and love working with others. I enjoy the problem solving and creativity of programming.  I'm caring, thoughtful, inclusive, and would love to join a team...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Yarn
                  </span>
                  <span class="profile-card-tag-item ">
                    Django
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/516-tyler-fields">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Kevin Cuadros" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdllCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e62e87d82f6092c08c308bc83a184072537b6131/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/CA6A073D-45CF-4742-92FA-F2D6414BB586.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/589-kevin-cuadros">
                  <h2 class="profile-card-name">
                    Kevin Cuadros
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Kevin Cuadros" class="profile-social-link" href="https://github.com/kevxo">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Kevin Cuadros" class="profile-social-link" href="https://linkedin.com/in/kevin-cuadros">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Kevin Cuadros" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbFFFIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--405e449192cf88f404b6c68392dffd1017a0573e/Kevin%20Cuadros%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a back-end developer, who is eager to learn new technologies. I want to collaborate and create applications that can help the community. I want to grow as a developer and as a person. Coding is something I enjoy doing and it's something that ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/589-kevin-cuadros">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Dani Coleman" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc0FCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--0386c9d0c6d2d940706b7bf3cb420a161f385812/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/B805C7BB-47A2-43AE-B6C0-9246BAD4574E.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/601-dani-coleman">
                  <h2 class="profile-card-name">
                    Dani Coleman
                  </h2>
</a>
                <span class="profile-card-title">
                  Back End Engineering
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Dani Coleman" class="profile-social-link" href="https://github.com/dcoleman21">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Dani Coleman" class="profile-social-link" href="https://linkedin.com/in/dcoleman-21">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Dani Coleman" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaFlLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4f4cc51f7a543ec286a1486d2271025978972ad2/Dani%20Coleman%20Resume%202021.docx.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Compassionate, empathetic and driven individual with a passion for finding ways to restore our natural world through education and technology. My background in athletics and customer service parallel the world of technology because they both rely ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Photography
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
                    <span class="profile-card-tag-item ">
                      Sports
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/601-dani-coleman">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Peyton Jones" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ01DIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--da03f3a24c9f788165bc602f0d1066c8bb33a178/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/profile-20pic.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/718-peyton-jones">
                  <h2 class="profile-card-name">
                    Peyton Jones
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Peyton Jones" class="profile-social-link" href="https://github.com/peytonjo">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Peyton Jones" class="profile-social-link" href="https://linkedin.com/in/peyton-jones-1938681b9">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Peyton Jones" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcVVHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--da294a72af8d6f82517432ed5e0c2b724983fced/resume-doc.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Creativity, Attention to Detail, Dedication, and Customer Satisfaction are all qualities I have come to develop and thrive in throughout my years as an artist. These qualities I bring into programming will help to ensure all applications are cen...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Computer Software
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/718-peyton-jones">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Mike Flynn" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdFlCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--233c869cef7146c3ab6d123ac0c2948d96035bc3/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/WEB_122920_MikeFlynn-1.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/594-mike-flynn">
                  <h2 class="profile-card-name">
                    Mike Flynn
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Mike Flynn" class="profile-social-link" href="https://github.com/mdflynn">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Mike Flynn" class="profile-social-link" href="https://linkedin.com/in/mikeflynnmba">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Mike Flynn" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbFFJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--af57226ce913423a8ddb31f35d16b5650de4bdba/Michael_Flynn_Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I'm a lifelong learner with a passion for people. I love being in an environment where everyone is collaborative and working towards something bigger. I've always been interested in computers, building my first one when I was 16. These passions ha...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Technical Sales
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Banking
                    </span>
                    <span class="profile-card-tag-item ">
                      Public Safety
                    </span>
                    <span class="profile-card-tag-item ">
                      Telecommunications
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/594-mike-flynn">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Brian Liu" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcDRLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--6bf1b1f6c836f8aab80c6859944ad159537a7b5e/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/fullresolution-29.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/600-brian-liu">
                  <h2 class="profile-card-name">
                    Brian Liu
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Brian Liu" class="profile-social-link" href="https://github.com/the-color-bliu">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Brian Liu" class="profile-social-link" href="https://linkedin.com/in/brian-liu-8356287b">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Brian Liu" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcDhLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--3d618ddf4e3018ede9001e236c6ed6e4fbfd319f/Brian%20Liu%20Resume%2005272021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Hello world! I am a Back-End Engineer with an extensive background in sales, proposal writing, and customer-driven environments like the restaurant industry. I began my journey in programming when I discovered that the most successful developers a...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    IntelliJ
                  </span>
                  <span class="profile-card-tag-item ">
                    Business Development
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Google
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    Gimp
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Electrical/Electronic Manufacturing
                    </span>
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Law Enforcement
                    </span>
                    <span class="profile-card-tag-item ">
                      Music
                    </span>
                    <span class="profile-card-tag-item ">
                      Renewables &amp; Environment
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
                    <span class="profile-card-tag-item ">
                      Writing and Editing
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/600-brian-liu">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Roberto Basulto" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaE1DIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--2c5b23bc24f9fe5c1aa349f91b2158ab019b90ed/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/20180726_153903.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/723-roberto-basulto">
                  <h2 class="profile-card-name">
                    Roberto Basulto
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Roberto Basulto" class="profile-social-link" href="https://github.com/Eternal-Flame085">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Roberto Basulto" class="profile-social-link" href="https://linkedin.com/in/roberto-basulto">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Roberto Basulto" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbThGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9fed05057798241e238a8103d7a1c0cd3e80409a/Roberto_Basulto_Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a software developer and graduate of the Turing School of Software and Design. I pick up new concepts quickly and constantly seek new opportunities to learn and grow. I have always been into technology and videogames, my passion for both led ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Hospitality
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/723-roberto-basulto">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for George Soderholm" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcjBDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e933b6dc681a3cfbc271f87f3963a8e548d383a8/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_0431_0.JPG" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/755-george-soderholm">
                  <h2 class="profile-card-name">
                    George Soderholm
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for George Soderholm" class="profile-social-link" href="https://github.com/GeorgieGirl24">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for George Soderholm" class="profile-social-link" href="https://linkedin.com/in/george-soderholm-05776947">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for George Soderholm" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdlFIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c9db200fe7c92ce5a3e1b196aba643c61ecabd33/George%20Soderholm%20Resume-2.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I’m bartender turned Software Engineer. I’ve always had a knack for solving puzzles and building things. I’ve found that programming is the perfect combination of the two. I have found that my years in the service industry are a great asset as I l...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Professional Training &amp; Coaching
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/755-george-soderholm">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Jose Lopez" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaFVDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9923277907dafa955cb468196e5adcb4d8430b7e/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_5828_0.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/591-jose-lopez">
                  <h2 class="profile-card-name">
                    Jose Lopez
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Jose Lopez" class="profile-social-link" href="https://github.com/JoseLopez235">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Jose Lopez" class="profile-social-link" href="https://linkedin.com/in/jose-lopez-0551a01a1">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Jose Lopez" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaFlDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4f663e2d22522c992489cd36dc8f47bd2e0490d2/Jose-20Lopez.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I recently graduated from Turing School of Software &amp; Design as a Back-End developer. I learned the language Ruby on Rails and dipped my toes in some Python and Javascript. I am always trying to learn new things in order to expand my knowledge. I ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                  None listed
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/591-jose-lopez">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Caleb Cyphers" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcVFCIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--837d3835839eae14e5c44c1332ac894d4c8f3961/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_1088-203.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/710-caleb-cyphers">
                  <h2 class="profile-card-name">
                    Caleb Cyphers
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-end Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Caleb Cyphers" class="profile-social-link" href="https://github.com/CalebCyphers">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Caleb Cyphers" class="profile-social-link" href="https://linkedin.com/in/caleb-cyphers">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Caleb Cyphers" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaG9JIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--3ff6313dbfe9ce8a0fd4cf5b53a3a4664921d237/CalebCyphers_resume_May2021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                In Middle School, I programmed a text adventure RPG in BASIC on a TI-84 calculator. That was my first experience with code. I studied art and design through school while practicing code as a hobby. Now, I'm diving into programming and finding out ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Twitter
                  </span>
                  <span class="profile-card-tag-item ">
                    Software Architecture
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Illustrator
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    C#
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Animation
                    </span>
                    <span class="profile-card-tag-item ">
                      Automotive
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/710-caleb-cyphers">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Cameron Romo" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbFlDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7f6ba47ebd6e02e6e305dd2d38e6a09091b2f33f/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/63012953.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/733-cameron-romo">
                  <h2 class="profile-card-name">
                    Cameron Romo
                  </h2>
</a>
                <span class="profile-card-title">
                  Front End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Cameron Romo" class="profile-social-link" href="https://github.com/cameronRomo">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Cameron Romo" class="profile-social-link" href="https://linkedin.com/in/cameron-romo-64b3a69b">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Cameron Romo" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbVFNIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--52ec1c5c6fd53ba3a1c605dc6fb6860e6578f861/Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a Front-End Software Engineer who is passionate about expanding my expertise in the field of web development. I thrive in teams where communication is used in conjunction with agile development to produce a product promised by an impactful mi...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    iOS
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    jQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    AngularJS
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Accounting
                    </span>
                    <span class="profile-card-tag-item ">
                      Hospital &amp; Health Care
                    </span>
                    <span class="profile-card-tag-item ">
                      Textiles
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/733-cameron-romo">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Eric  Campbell" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaGNIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--054e1314ecdcef5a12468426720be8b6e7e5fc66/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/prof_faceshot.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/843-eric-campbell">
                  <h2 class="profile-card-name">
                    Eric  Campbell
                  </h2>
</a>
                <span class="profile-card-title">
                  Full Stack Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Eric  Campbell" class="profile-social-link" href="https://github.com/mainlyetcetera">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Eric  Campbell" class="profile-social-link" href="https://linkedin.com/in/eric-campbell-32584719a">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Eric  Campbell" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaGtIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7038f4ebd0b1fbbc8139842bc9481a9bc20fd442/resume_2021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                What I liked about music: creativity. What I liked about banking: high-stakes, solutions-driven environment.
What I didn't like: impossible to sustain a lifestyle.
Why software: everything I liked before along with sustaining a healthy lifes...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Docker
                  </span>
                  <span class="profile-card-tag-item ">
                    MongoDB
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Banking
                    </span>
                    <span class="profile-card-tag-item ">
                      Music
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/843-eric-campbell">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Gus Cunningham" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcUlDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--5023a99412b0764ccafe2b7cd0df438da4244b83/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/photo_1.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/536-gus-cunningham">
                  <h2 class="profile-card-name">
                    Gus Cunningham
                  </h2>
</a>
                <span class="profile-card-title">
                  Back End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Gus Cunningham" class="profile-social-link" href="https://github.com/cunninghamge">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Gus Cunningham" class="profile-social-link" href="https://linkedin.com/in/grayson-cunningham">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Gus Cunningham" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdW9KIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c1ecdde0b237d9086fbcc19a993d31b5d4dc5573/gcunningham_resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Enthusiastic learner &amp; problem-solver passionate about taking on new challenges and developing new skills. I have a background in non-profit work, and while I'm still the steadfast idealist who first picked up a hammer I am now looking to do some ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Go
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Sequelize
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Accounting
                    </span>
                    <span class="profile-card-tag-item ">
                      Civic &amp; Social Organization
                    </span>
                    <span class="profile-card-tag-item ">
                      Construction
                    </span>
                    <span class="profile-card-tag-item ">
                      Financial Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Fund-Raising
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/536-gus-cunningham">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Connie Hong" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcDBDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ce8980a3c7495d1ed48501641d35c73efbe8b9af/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Connie-20Hong-20Headshot-20Crop.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/747-connie-hong">
                  <h2 class="profile-card-name">
                    Connie Hong
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Connie Hong" class="profile-social-link" href="https://github.com/conconartist">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Connie Hong" class="profile-social-link" href="https://linkedin.com/in/connie-h-hong">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Connie Hong" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaEVLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e4abc210252cc758473223fbfc37f7273872ff00/Connie%20Hong-%20Software%20Developer%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Experienced musician, singer-songwriter, and creative thinker. I strive to find beauty and artistic expression in everything I do, so programming is no exception. Recent world and life events afforded me the opportunity to begin a career in softwa...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Inkscape
                  </span>
                  <span class="profile-card-tag-item ">
                    Twitter
                  </span>
                  <span class="profile-card-tag-item ">
                    Wordpress
                  </span>
                  <span class="profile-card-tag-item ">
                    D3.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    MySQL
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Apparel &amp; Fashion
                    </span>
                    <span class="profile-card-tag-item ">
                      Arts and Crafts
                    </span>
                    <span class="profile-card-tag-item ">
                      Entertainment
                    </span>
                    <span class="profile-card-tag-item ">
                      Music
                    </span>
                    <span class="profile-card-tag-item ">
                      Performing Arts
                    </span>
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/747-connie-hong">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Lucas Merchant" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcVFDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--0004591d55b5817d4f428fe758699b3b8b1e7064/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/profile-20picture_0.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/748-lucas-merchant">
                  <h2 class="profile-card-name">
                    Lucas Merchant
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Lucas Merchant" class="profile-social-link" href="https://github.com/lbmerchant93">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Lucas Merchant" class="profile-social-link" href="https://linkedin.com/in/lucas-merchant93">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Lucas Merchant" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcE1EIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--83504c6463203e4653152104cfd9fc4d0d6e35cb/Resume%20.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                An outgoing and eager new developer, who is seeking a challenging role with a team that values collaboration, agile processes, and developer growth. Past experience has helped create an adaptability to thrive in a fast paced work environment.

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Mechanical or Industrial Engineering
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/748-lucas-merchant">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Elsa Fluss" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcFVDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b4f529d0855651f5b6d95abdde82b6387fb1a0ce/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/headshot_21.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/745-elsa-fluss">
                  <h2 class="profile-card-name">
                    Elsa Fluss
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Elsa Fluss" class="profile-social-link" href="https://github.com/elsafluss">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Elsa Fluss" class="profile-social-link" href="https://linkedin.com/in/elsafluss">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Elsa Fluss" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdXdIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--cd2670bd1eb7881791300abc9ca1e5e7870a1194/Elsa%20Fluss%20resume%20ATS.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                The right tool for the right person will change a life, and one person can change the world.
I am a communicator and a community builder, creating tools to help people understand the world around them and live authentically. When critical inf...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Twitter
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    Gimp
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Illustrator
                  </span>
                  <span class="profile-card-tag-item ">
                    Salesforce
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Accounting
                    </span>
                    <span class="profile-card-tag-item ">
                      Arts and Crafts
                    </span>
                    <span class="profile-card-tag-item ">
                      Executive Office
                    </span>
                    <span class="profile-card-tag-item ">
                      Fund-Raising
                    </span>
                    <span class="profile-card-tag-item ">
                      Marketing and Advertising
                    </span>
                    <span class="profile-card-tag-item ">
                      Online Media
                    </span>
                    <span class="profile-card-tag-item ">
                      Publishing
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
                    <span class="profile-card-tag-item ">
                      Writing and Editing
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/745-elsa-fluss">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Brian Forbes" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbFlHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--38931654a57b09bb959e71120b1f0ca6e50dd808/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_0667.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/809-brian-forbes">
                  <h2 class="profile-card-name">
                    Brian Forbes
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Brian Forbes" class="profile-social-link" href="https://github.com/Codeherder19">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Brian Forbes" class="profile-social-link" href="https://linkedin.com/in/brian-forbes-833887130">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Brian Forbes" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbFFHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--f22eb38ab71c0edb307a137be3b129789bd9bd6b/Basic_Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I have a varied work history, including touring the US as a professional musician, and most recently I was the director of cultivation for an award winning dispensary in Denver, CO. I am very passionate about embarking on a new career path as a so...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Firefox
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Java
                  </span>
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Music
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
                    <span class="profile-card-tag-item ">
                      Alternative Medicine
                    </span>
                    <span class="profile-card-tag-item ">
                      Entertainment
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/809-brian-forbes">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Thao Ma" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcDRIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--5c65e9f37e7e9937b2c12fb389136eeff2614b3e/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_0853%20copy.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/742-thao-ma">
                  <h2 class="profile-card-name">
                    Thao Ma
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Thao Ma" class="profile-social-link" href="https://github.com/thaomonster">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Thao Ma" class="profile-social-link" href="https://linkedin.com/in/thao-ma">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Thao Ma" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbEVEIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--693a100dbf017af19e166f48763afbdb32bace27/Thao%20Ma&#39;s%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                English is my second language and it is one of the main reasons that motivated me to be a software developer. I want to build software that is accessible and my goal is to create software or work with a company that makes products for people who a...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Google
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    D3.js
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Individual &amp; Family Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Non-Profit Organization Management
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/742-thao-ma">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Robert Heath" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ29HIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d4872a27af0bfa02accc73ec1be1f8d0d83026b1/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/16GPS2722.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/111-robert-heath">
                  <h2 class="profile-card-name">
                    Robert Heath
                  </h2>
</a>
                <span class="profile-card-title">
                  Backend Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Robert Heath" class="profile-social-link" href="https://github.com/kaiheiongaku">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Robert Heath" class="profile-social-link" href="https://linkedin.com/in/robert-heath-ii">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Robert Heath" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcG9LIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--2e7a3a7be1952c18b2bba50ae5cc70e7b70e2463/R_Heath_Resume%20(1).pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I love bringing people together, whether it's for a great concert or through software.  I have over 15 years of military music experience with tours in both West Virginia (Army National Guard) and Southeast Asia (US Navy). Through all that time, I...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    AngularJS
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Product Management
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Military
                    </span>
                    <span class="profile-card-tag-item ">
                      Music
                    </span>
                    <span class="profile-card-tag-item ">
                      Public Policy
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/111-robert-heath">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Yesi Meza" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcndDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--2c1d407620f4cf925f6a7d71e298261fb8c25685/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/EVCHE4495_0.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/754-yesi-meza">
                  <h2 class="profile-card-name">
                    Yesi Meza
                  </h2>
</a>
                <span class="profile-card-title">
                  Backend Software Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Yesi Meza" class="profile-social-link" href="https://github.com/Yesi-MC">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Yesi Meza" class="profile-social-link" href="https://linkedin.com/in/yesimeza">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Yesi Meza" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBandFIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--36682bf1b987ba19c9d1cf670ca5fff44c69b251/Yesi%20Resume%20BEE.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a backend software developer and have experience with TDD, OOP and Version Control. I have a background in customer service, property management, and education. I have a track record of moving up in roles quickly and becoming a core member of...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Higher Education
                    </span>
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/754-yesi-meza">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Jeff Kersting" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbFVFIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7e11f5007b5fb5473cf8557d8c74ac8ab55f4bbe/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/headshot.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/816-jeff-kersting">
                  <h2 class="profile-card-name">
                    Jeff Kersting
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Jeff Kersting" class="profile-social-link" href="https://github.com/JeffKersting">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Jeff Kersting" class="profile-social-link" href="https://linkedin.com/in/jeff-kersting">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Jeff Kersting" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbFlFIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--1c68ee75a3fd29c3df9a0dbd09d0754748feebe8/JKerstingResume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a front end developer with 7 years experience working in teams and under tight deadlines. I have a passion for puzzle-solving and continuous education. I aim to bring unique perspectives and approaches to problem solving, while absorbing as m...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Accounting
                    </span>
                    <span class="profile-card-tag-item ">
                      Construction
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/816-jeff-kersting">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Cole Fiscus" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb0FNIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e273ad1ad0db74e763c4743d7ac13ec3401b8417/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/room-photo-final.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/840-cole-fiscus">
                  <h2 class="profile-card-name">
                    Cole Fiscus
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Cole Fiscus" class="profile-social-link" href="https://github.com/colefiscus">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Cole Fiscus" class="profile-social-link" href="https://linkedin.com/in/colefiscus">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Cole Fiscus" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdW9IIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--6160cc87ad1efe2f120813add036a5fbd6cf1aa4/Fiscus_Cole_Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I spent one year immersed in urban Ecuador learning Spanish on the fly and forging connections in my local community.
I spent one year assisting recent immigrants assimilate into Boston, MA.
I completed ten months of racial justice focused p...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Individual &amp; Family Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Program Development
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/840-cole-fiscus">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Joe Jiang" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcXdGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--a27ae7b6f9737f341648ec76e1f2aed343deff61/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/JoeJiang2.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/826-joe-jiang">
                  <h2 class="profile-card-name">
                    Joe Jiang
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Joe Jiang" class="profile-social-link" href="https://github.com/ninesky00">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Joe Jiang" class="profile-social-link" href="https://linkedin.com/in/joe-jiang01">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Joe Jiang" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcTBGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e39baa1fc761b2c8c836de4cc977a92397b2453e/Joe%20Jiang%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Passionate about problem solving. Love to break down a problem, understand it in parts and make it better. I have a background in logistics starting in the Marine Corps, then a finance degree. Previously worked at an insurance carrier that had out...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Salesforce
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Kubernetes
                  </span>
                  <span class="profile-card-tag-item ">
                    Software Architecture
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Financial Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Insurance
                    </span>
                    <span class="profile-card-tag-item ">
                      Logistics and Supply Chain
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/826-joe-jiang">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Adam Etzion" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcjhDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--6fa770ae95c746fca5ce773898d61d03e4963395/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/My-20Post_0.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/269-adam-etzion">
                  <h2 class="profile-card-name">
                    Adam Etzion
                  </h2>
</a>
                <span class="profile-card-title">
                  Backend Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Adam Etzion" class="profile-social-link" href="https://github.com/aetzion1">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Adam Etzion" class="profile-social-link" href="https://linkedin.com/in/adametzion">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Adam Etzion" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc0FDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--89f533c3273245dcc0f6d388d94763e58a5abb9c/Adam_Etzion_Resume_0.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I’m a backend developer and data engineer with over 8 years experience in project management and business analytics. I aim to help organizations solve complex data challenges and build and maintain their backend systems.

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    R
                  </span>
                  <span class="profile-card-tag-item ">
                    Bitbucket
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Business Development
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
                  <span class="profile-card-tag-item ">
                    Salesforce
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Mentorship
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    DevOps
                  </span>
                  <span class="profile-card-tag-item ">
                    Django
                  </span>
                  <span class="profile-card-tag-item ">
                    Kubernetes
                  </span>
                  <span class="profile-card-tag-item ">
                    Docker
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Hospital &amp; Health Care
                    </span>
                    <span class="profile-card-tag-item ">
                      Management Consulting
                    </span>
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/269-adam-etzion">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Christina Cook" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBckVDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--13ab6adbd0c324a6209d2ab7f980edd6b2cd2279/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/headshot_26.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/674-christina-cook">
                  <h2 class="profile-card-name">
                    Christina Cook
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer 
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Christina Cook" class="profile-social-link" href="https://github.com/christina-cook">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Christina Cook" class="profile-social-link" href="https://linkedin.com/in/cookcmc">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Christina Cook" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaGtMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e8d8e77a7e8f1044c74404c9a2c62fa24e706a0e/CHRISTINA_COOK_RESUME.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Combining a background in journalism and education with a love of learning, I'm a software developer who is passionate about enhancing the user's experience. I enjoy learning new coding languages and frameworks in a collaborative environment and a...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Software Architecture
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Saas
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Online Media
                    </span>
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
                    <span class="profile-card-tag-item ">
                      Publishing
                    </span>
                    <span class="profile-card-tag-item ">
                      Writing and Editing
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/674-christina-cook">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Jacob  Arellano" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb0FJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--07e7fc5efebfe45f46437d40d3ccf40ec6a717cf/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Screen%20Shot%202021-04-24%20at%2010.29.05%20AM.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/773-jacob-arellano">
                  <h2 class="profile-card-name">
                    Jacob  Arellano
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Jacob  Arellano" class="profile-social-link" href="https://github.com/jakejakearell">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Jacob  Arellano" class="profile-social-link" href="https://linkedin.com/in/jacob-arellano-ab2890207">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Jacob  Arellano" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb0VJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--add2dbb8e3f180bc267af10e1973437953fa70cb/Jacob_Arellano_Resume%20(1).pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Coming from the world of HIV Prevention, I learned how to help folks navigate difficult situations with compassion while also providing a clear plan of action. 
These skills have helped my thrive as a developer. I am comfortable working with te...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Redis
                  </span>
                  <span class="profile-card-tag-item ">
                    AR
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Django
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Civic &amp; Social Organization
                    </span>
                    <span class="profile-card-tag-item ">
                      Facilities Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Hospital &amp; Health Care
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/773-jacob-arellano">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Julia Iwinski" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaWdLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b26cc9581ff2414ec84b6213337d7f2ab8862db8/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/77FDC65C-0D5A-4531-BC0E-20B84FF3954D_1_201_a.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/799-julia-iwinski">
                  <h2 class="profile-card-name">
                    Julia Iwinski
                  </h2>
</a>
                <span class="profile-card-title">
                   Front-End Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Julia Iwinski" class="profile-social-link" href="https://github.com/jgiwinski">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Julia Iwinski" class="profile-social-link" href="https://linkedin.com/in/julia-iwinski-898540138">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Julia Iwinski" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdklMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b1f5bdb59eae6984e52fd411024046315313daa2/Julia_Iwinski.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                As a goal-oriented initiator, I bring myself forward to direct teams and can be found excitedly implementing new ideas. With a diverse background in customer service, leadership, and project management -- from my time spent at large corporations a...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Confluence
                  </span>
                  <span class="profile-card-tag-item ">
                    Salesforce
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    jQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Airlines/Aviation
                    </span>
                    <span class="profile-card-tag-item ">
                      Consumer Services
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/799-julia-iwinski">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Chuck Morris" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaGtLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--930a3a4bb0d9197723fb1479bc34151d015ed553/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG-0675.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/792-chuck-morris">
                  <h2 class="profile-card-name">
                    Chuck Morris
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Software Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Chuck Morris" class="profile-social-link" href="https://github.com/percworld">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Chuck Morris" class="profile-social-link" href="https://linkedin.com/in/chuck-morris">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Chuck Morris" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcDBJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--952390194aed47733b88f0139ca58eae9af9f873/Chuck%20Morris.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                As a prior facilitator, I am driven to unlock human potential by way of providing an opportunity for growth.  I am involved in literacy and therapy networks, love sound design, and have found that I am most effective currently when translating bet...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    D3.js
                  </span>
                  <span class="profile-card-tag-item ">
                    C
                  </span>
                  <span class="profile-card-tag-item ">
                    C++
                  </span>
                  <span class="profile-card-tag-item ">
                    jQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Construction
                    </span>
                    <span class="profile-card-tag-item ">
                      Entertainment
                    </span>
                    <span class="profile-card-tag-item ">
                      Logistics and Supply Chain
                    </span>
                    <span class="profile-card-tag-item ">
                      Marketing and Advertising
                    </span>
                    <span class="profile-card-tag-item ">
                      Music
                    </span>
                    <span class="profile-card-tag-item ">
                      Performing Arts
                    </span>
                    <span class="profile-card-tag-item ">
                      Writing and Editing
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/792-chuck-morris">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Joel Thomas" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcVVKIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--68d71d7e50aa8c996e1b62881960a14d2e7c777d/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/20180509_170550.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/797-joel-thomas">
                  <h2 class="profile-card-name">
                    Joel Thomas
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Joel Thomas" class="profile-social-link" href="https://github.com/shakikka">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Joel Thomas" class="profile-social-link" href="https://linkedin.com/in/joel-thomas-74a37420b">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Joel Thomas" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb29LIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9f0672afa2a46ca60e7c51dfdb8166e72bb7dbb6/Joel%20Thomas.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I'm a front-end software engineer with a background in plant biology. When I'm not coding, you can probably find me in the garden or tending to my houseplants. I have a passion for learning, a fascination with puzzles, and a desire for growth. I h...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Farming
                    </span>
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Food Production
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/797-joel-thomas">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Jesus Quezada-Guillen" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb1lKIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--de2d98f8abf88582397f1a15e9becaebffba4547/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/P1220434.JPG" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/777-jesus-quezada-guillen">
                  <h2 class="profile-card-name">
                    Jesus Quezada-Guillen
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Jesus Quezada-Guillen" class="profile-social-link" href="https://github.com/jequeza">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Jesus Quezada-Guillen" class="profile-social-link" href="https://linkedin.com/in/jesusquezada">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Jesus Quezada-Guillen" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb2NKIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--a7fc9fdecfd651ff15e5392fc3c5e057dc5f6aee/JesusResume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Software Developer, former lead machinist in the manufacturing industry, enjoyed designing, developing and implementing programs and applications that respond to customer needs and provide innovative solutions to common problems. Improved existing...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Android
                  </span>
                  <span class="profile-card-tag-item ">
                    Swift
                  </span>
                  <span class="profile-card-tag-item ">
                    Kotlin
                  </span>
                  <span class="profile-card-tag-item ">
                    iOS
                  </span>
                  <span class="profile-card-tag-item ">
                    Engineering Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Django
                  </span>
                  <span class="profile-card-tag-item ">
                    Java
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Mechanical or Industrial Engineering
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/777-jesus-quezada-guillen">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Owen Hallgren" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb2NHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--bcb6764dcece0a5bf7f72f52a21d3051b25f30ae/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/headshot.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/804-owen-hallgren">
                  <h2 class="profile-card-name">
                    Owen Hallgren
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Owen Hallgren" class="profile-social-link" href="https://github.com/owenhallgren">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Owen Hallgren" class="profile-social-link" href="https://linkedin.com/in/owenhallgren">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Owen Hallgren" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcGNKIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--1d97bb6ca4b7e159a344859d3b3ba0a185472212/Owen%20Hallgren%20Resume%20Working.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Ever since I was a kid I have been surrounded by technology, so because of this, I have always had a curiosity of how tech worked. As I got older I realized I could learn the skills required to understand and create. I am passionate about learning...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    AngularJS
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/804-owen-hallgren">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Wil McCauley" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcjhFIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--f041235031aaa1073d6fc0b129fdc9a0b39dfb26/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/slackpic2020.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/787-wil-mccauley">
                  <h2 class="profile-card-name">
                    Wil McCauley
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Wil McCauley" class="profile-social-link" href="https://github.com/Wil-McC">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Wil McCauley" class="profile-social-link" href="https://linkedin.com/in/wil-mccauley">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Wil McCauley" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ01LIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4a15e2bc63cc4d564b3b404555aaba660f8016be/WM%20Resume%20-%20June%202021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I'm a detail-oriented backend developer with a background in high-stakes exam security and program integrity monitoring. Drawn initially by the creative problem-solving inherent to the developer's role, my experience building software in a range o...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Legal Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Market Research
                    </span>
                    <span class="profile-card-tag-item ">
                      Research
                    </span>
                    <span class="profile-card-tag-item ">
                      Security and Investigations
                    </span>
                    <span class="profile-card-tag-item ">
                      Writing and Editing
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/787-wil-mccauley">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Trevor Suter" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBclFEIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--3ff07bfbdc2f32b15f2fe61c1eeaf5fc7fba6483/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/63387D6E-CDA4-4EC2-A6C0-8260E4DE11B3_1_201_a.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/786-trevor-suter">
                  <h2 class="profile-card-name">
                    Trevor Suter
                  </h2>
</a>
                <span class="profile-card-title">
                  Back End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Trevor Suter" class="profile-social-link" href="https://github.com/Trevorsuter">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Trevor Suter" class="profile-social-link" href="https://linkedin.com/in/trevor-suter-216207203">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Trevor Suter" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcDRKIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--552fe357468a75026276263c2c0ed3af21b00e01/Trevor%20Suter%20Updated%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a passionate developer who intends to make immediate impact in every facet of life. Through my previous experiences as a Chef, Hockey player, and Equine trainer, I possess a diverse set of personal and professional skills that are valuable in...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Hospitality
                    </span>
                    <span class="profile-card-tag-item ">
                      Sports
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/786-trevor-suter">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Jeremiah Michlitsch" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbmtKIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--3d4f5729fa96c0333d95564c9ad3a3d6b20b2534/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/T029P2S9M-U01BCHHQUQJ-59d8577da938-512.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/776-jeremiah-michlitsch">
                  <h2 class="profile-card-name">
                    Jeremiah Michlitsch
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Enigneer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Jeremiah Michlitsch" class="profile-social-link" href="https://github.com/Jmichlitsch">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Jeremiah Michlitsch" class="profile-social-link" href="https://linkedin.com/in/jeremiah-michlitsch-49048a206">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Jeremiah Michlitsch" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbm9KIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--de01d36458c5e4d8f9335d6a06cdad091d316690/My%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Recent Turing Graduate, June 2021. Currently open to work, seeking opportunities in Java, Ruby, Back End Web Development, and Full Stack Web Development. Making a change from personal training to software development, I appreciate  the structure a...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    jQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    Java
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Environmental Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Health, Wellness and Fitness
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/776-jeremiah-michlitsch">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Aaron Foucheaux" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdThGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--427bb91747466b84f6640ad985256768767b3aef/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/aaron.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/788-aaron-foucheaux">
                  <h2 class="profile-card-name">
                    Aaron Foucheaux
                  </h2>
</a>
                <span class="profile-card-title">
                  Front End Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Aaron Foucheaux" class="profile-social-link" href="https://github.com/Afoucheaux">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Aaron Foucheaux" class="profile-social-link" href="https://linkedin.com/in/aaron-foucheaux-891626207">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Aaron Foucheaux" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcW9LIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9a0bedaa7a339066277dfb92601a69b5c9bc06cd/AF%20resume2021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Over the last 15 years I have worked primarily as a GM for larger retailers like Home Depot and Lowes. In that time I have focused on developing my skill set in project management by leading multiple store openings/ remodels and large scale compan...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Jetbrains
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Product Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Mentorship
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Human Resources
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/788-aaron-foucheaux">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Paige  Vannelli" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdVFFIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e2a52375a598abb78e17abd44db747dd3358d5f5/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Zoomed%20in%20headshot.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/805-paige-vannelli">
                  <h2 class="profile-card-name">
                    Paige  Vannelli
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer 
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Paige  Vannelli" class="profile-social-link" href="https://github.com/PaigeVannelli">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Paige  Vannelli" class="profile-social-link" href="https://linkedin.com/in/paigevannelli">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Paige  Vannelli" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaWtLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--6b25fc1fd1dc9e9ea3f33ebb1941e46296681fa9/Paige%20Vannelli%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                As a software engineer, I am very organized and love bigger-picture strategy and planning. I have always been a fast learner and have a strong innate curiosity which pairs nicely with the ever-evolving tech industry. As a former researcher at Tesl...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Automotive
                    </span>
                    <span class="profile-card-tag-item ">
                      Computer Software
                    </span>
                    <span class="profile-card-tag-item ">
                      Renewables &amp; Environment
                    </span>
                    <span class="profile-card-tag-item ">
                      Research
                    </span>
                    <span class="profile-card-tag-item ">
                      Staffing and Recruiting
                    </span>
                    <span class="profile-card-tag-item ">
                      Transportation/Trucking/Railroad
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/805-paige-vannelli">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Max Bregman" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcW9DIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--f411062fe5655e758f80a1d08fb2bd3b3390b35c/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Profile-pic-one.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/750-max-bregman">
                  <h2 class="profile-card-name">
                    Max Bregman
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Max Bregman" class="profile-social-link" href="https://github.com/Max9545">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Max Bregman" class="profile-social-link" href="https://linkedin.com/in/max-bregman">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Max Bregman" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbkVKIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9b8726f0fb41f37a86c22cf25cd12807b6420037/Max%20Bregman%20Resume%207_13.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Philosophy is the art of learning and I have been immensely lucky to find another field in software development that rests on that same core principle. Development is similar to philosophy in that it is often learning about learning. As a lifelong...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Software Architecture
                  </span>
                  <span class="profile-card-tag-item ">
                    Bash
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    jQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Google
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Entertainment
                    </span>
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Legal Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Performing Arts
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/750-max-bregman">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Elizabeth Hahn" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdm9GIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--646d7956605fbecea847e6b31d2f894dac3cad40/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Screen%20Shot%202021-04-06%20at%209.32.58%20AM.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/794-elizabeth-hahn">
                  <h2 class="profile-card-name">
                    Elizabeth Hahn
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Elizabeth Hahn" class="profile-social-link" href="https://github.com/elizhahn">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Elizabeth Hahn" class="profile-social-link" href="https://linkedin.com/in/elizabeth-s-hahn">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Elizabeth Hahn" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbzhJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--2334d1b490e1b0cf2b60e73a623be87d7efb1357/Elizabeth_Hahn_Software_Engineer6_6.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                  As a developer, I have a large focus on people first and foremost. I consider the users of the products I work on and the team that I work with to build these products. I want to bring inclusivity and empathy into my work with teams and help fos...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Education Management
                    </span>
                    <span class="profile-card-tag-item ">
                      Individual &amp; Family Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Recreational Facilities and Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Staffing and Recruiting
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/794-elizabeth-hahn">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Ben Fulton" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdFlEIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7f153f18e94bb1ca28f21865847cdd01241afcfd/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_2738.JPG" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/767-ben-fulton">
                  <h2 class="profile-card-name">
                    Ben Fulton
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Ben Fulton" class="profile-social-link" href="https://github.com/b-enji-cmd">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Ben Fulton" class="profile-social-link" href="https://linkedin.com/in/ben-fulton-b29277206">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Ben Fulton" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBa1FJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d741b31cc5a2020c3cba4b5acf20ab91999dc281/BensResume2021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Software Developer with a first instinct to 
- Jump in
- Get stuck
- Push through
My biggest passion is learning, first and foremost. The bigger the challenge, the more I love getting invested and integrating myself into the team

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    C++
                  </span>
                  <span class="profile-card-tag-item ">
                    Java
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Kubernetes
                  </span>
                  <span class="profile-card-tag-item ">
                    Docker
                  </span>
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                  None listed
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/767-ben-fulton">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Adam Bowers" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbndJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ac0a616db817ae84407d7598c7dfb50d47549f0b/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_20210319_080209.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/761-adam-bowers">
                  <h2 class="profile-card-name">
                    Adam Bowers
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Adam Bowers" class="profile-social-link" href="https://github.com/Pragmaticpraxis37">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Adam Bowers" class="profile-social-link" href="https://linkedin.com/in/adam-bowers-06a871209/">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Adam Bowers" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbjBJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--eaf26cf6510f39368d558f0527c6af879bc70b54/ADAM%20BOWERS.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a lawyer turned software developer who enjoys pushing myself to learn new concepts. I find coding exciting because it continually builds off of core concepts to apply them to novel environments and more complex problems. I see development as ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Elixir
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Law Practice
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/761-adam-bowers">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Trevor Robinson" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbmdHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e5677e4525ac7f026a744d4deb31e94a46259385/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/8126946780033939902%20(1).jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/785-trevor-robinson">
                  <h2 class="profile-card-name">
                    Trevor Robinson
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Trevor Robinson" class="profile-social-link" href="https://github.com/Trevor-Robinson">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Trevor Robinson" class="profile-social-link" href="https://linkedin.com/in/trevor-robinson1254/">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Trevor Robinson" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcElJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--8c44f5d1e9b7a5cb43ab3073de5f638b25036ab1/Trevor_Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Back-end Developer with a passion for, and history of, work in the education and non-profit sectors. My previous roles has given me experience in working with teams in many different environments, designing efficient and cost effective solutions t...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Django
                  </span>
                  <span class="profile-card-tag-item ">
                    Wordpress
                  </span>
                  <span class="profile-card-tag-item ">
                    Windows 8
                  </span>
                  <span class="profile-card-tag-item ">
                    Cybersecurity
                  </span>
                  <span class="profile-card-tag-item ">
                    AR
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Google
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    Gimp
                  </span>
                  <span class="profile-card-tag-item ">
                    VR
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Information Technology and Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Museums and Institutions
                    </span>
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/785-trevor-robinson">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Megan Gonzales" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaUVJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--af863e2d29f47f7db3bfabec47a2a76db9cede56/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_6181.JPG" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/784-megan-gonzales">
                  <h2 class="profile-card-name">
                    Megan Gonzales
                  </h2>
</a>
                <span class="profile-card-title">
                  Full Stack Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Megan Gonzales" class="profile-social-link" href="https://github.com/MGonzales26">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Megan Gonzales" class="profile-social-link" href="https://linkedin.com/in/megan-e-gonzales">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Megan Gonzales" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaVFJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--524a5769164e65fd38b3d44f88fc3ffa89b16785/mg_resume.docx">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I have always been a data nerd. I am simply mesmerized by all the ways data can be interacted with and manipulated. Even with this love I took a long and winding road to Software Development. When I was in college I majored in Interdisciplinary st...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Health, Wellness and Fitness
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/784-megan-gonzales">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Douglas Welchons II" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbjBHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--278c5a8f083de91d8eb96902c67e6e1f929a7447/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/FINAL%20Doug%20-%20S.E..jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/770-douglas-welchons-ii">
                  <h2 class="profile-card-name">
                    Douglas Welchons II
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer / Backend Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Douglas Welchons II" class="profile-social-link" href="https://github.com/DougWelchons">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Douglas Welchons II" class="profile-social-link" href="https://linkedin.com/in/DouglasWelchons">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Douglas Welchons II" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcE1JIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--8a55894e3e374869bb4a3eac67cc0e0b6d353432/Douglas%20Welchons%20II%20resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Formerly an Electrical Project Manager for Rowan Electric in San Diego, CA. I worked my way up from apprentice to project manager over the 9+ years I was there.
I was originally drawn to programming in high school when gave me an HTML/CSS codin...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Construction
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/770-douglas-welchons-ii">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Garrett Cottrell" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcFlKIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c13c93ad448ab098e433cff99e068c9788928936/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/linkedinpic.jfif" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/929-garrett-cottrell">
                  <h2 class="profile-card-name">
                    Garrett Cottrell
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Garrett Cottrell" class="profile-social-link" href="https://github.com/GarrettCottrell">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Garrett Cottrell" class="profile-social-link" href="https://linkedin.com/in/garrettcottrell">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Garrett Cottrell" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdG9KIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--5d7df477f9cd480960855a1067078c49e1c44bec/Updated%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                As a Back-End Developer, I enjoy the challenging puzzles that I get to solve on a daily basis, as well as creating user and developer-friendly code I have a strong curiosity that drives my interest in new languages and am always looking for a bett...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Salesforce
                  </span>
                  <span class="profile-card-tag-item ">
                    Saas
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    MySQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Mentorship
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Information Technology and Services
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/929-garrett-cottrell">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Jackson McGuire" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBa3dJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--06f1b409eb079f244232a125581d4e44351f6465/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_2273.PNG" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/795-jackson-mcguire">
                  <h2 class="profile-card-name">
                    Jackson McGuire
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Jackson McGuire" class="profile-social-link" href="https://github.com/Jacksonmcguire">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Jackson McGuire" class="profile-social-link" href="https://linkedin.com/in/jackson-mcguire">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Jackson McGuire" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBallNIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4a29acc344fe4bb811d0ea2c5193cebce7fa3a69/Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                While backpacking through Australia in 2019, I met an array of "nomad" software engineers and became immediately enamored with the work and the opportunities it provided. After returning to the U.S. I began seeking out programs to get involved, an...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Babel
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    jQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Golang
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                  None listed
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/795-jackson-mcguire">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Joshua Aragon" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcE1KIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--25f439001bc2a32d6d4f3fe19e852cf0ae977ef3/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/DSC06252%202.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/798-joshua-aragon">
                  <h2 class="profile-card-name">
                    Joshua Aragon
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Joshua Aragon" class="profile-social-link" href="https://github.com/josharagon">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Joshua Aragon" class="profile-social-link" href="https://linkedin.com/in/joshua-aragon-854275206">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Joshua Aragon" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaW9MIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--55a802d7440f9776cbfcba865edb47b89aeddb00/JoshuaAragonResume%20(3).pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I have always been on computers learning new tech since middle school. Adobe Creative Suite was the first thing I got really good at on my own. I knew I wanted a career that had to do with computers, but I didn't know what. My freshman year I took...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    AngularJS
                  </span>
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Java
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React Native
                  </span>
                  <span class="profile-card-tag-item ">
                    MongoDB
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Construction
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/798-joshua-aragon">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Marika Shanahan" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcllIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ebca8d7ec4ecc77c9dd38f7a0d993be8433bfcbe/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/7CAD2CDD-AD26-44C1-8946-602B1F4E1B4B.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/801-marika-shanahan">
                  <h2 class="profile-card-name">
                    Marika Shanahan
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Marika Shanahan" class="profile-social-link" href="https://github.com/monshan">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Marika Shanahan" class="profile-social-link" href="https://linkedin.com/in/marika-shanahan">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Marika Shanahan" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcmNLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9939e07606b179c5b56f7e646ef9fc14ead43acd/210709_Resume_Shanahan.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                  In 2018 I packed my life in a suitcase to move to China to follow my desire for mastery of the language and dive into the expat lifestyle. As an ESL Teacher (English as a Second Language) in Beijing, I equipped my students with functional langua...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Apparel &amp; Fashion
                    </span>
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/801-marika-shanahan">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Hope McGee" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBa0lDIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--4c3e5601a0218471f91cc80630c747b4bfab2e36/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/photo_2020-11-02-2011.28.07.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/729-hope-mcgee">
                  <h2 class="profile-card-name">
                    Hope McGee
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Hope McGee" class="profile-social-link" href="https://github.com/hopesgit">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Hope McGee" class="profile-social-link" href="https://linkedin.com/in/hope-mcgee">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Hope McGee" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdXdJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ff4fc2a543252fbc8b5f0fa31f5160c663bdcebd/HopeAranMcgeeResume(PDF).pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I'm a trans woman from Texas, living in Colorado. I've always been interested in tech and what I can do with it. I've been playing video games since before I could read, and learned to read thanks to them. I found inspiration for how I wanted to l...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Django
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    C++
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Hospital &amp; Health Care
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/729-hope-mcgee">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Cameron Mackintosh" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdDhEIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--19a7c68f682ff88506a037eceb178ebf1d76a0a1/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/cam%20headshot.JPG" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/791-cameron-mackintosh">
                  <h2 class="profile-card-name">
                    Cameron Mackintosh
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Cameron Mackintosh" class="profile-social-link" href="https://github.com/cbmackintosh">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Cameron Mackintosh" class="profile-social-link" href="https://linkedin.com/in/cameron-mackintosh-1341b173">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Cameron Mackintosh" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdHdJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c307dc1528a45372e39b8a6d82b5d8ec41dcb625/Cameron%20B%20Mackintosh%20RESUME.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I remember very clearly the day I wrote my first lines of HTML on an eMac during my 7th grade IT class. I remember exactly where I was sitting in the computer lab, who the teacher was and the name of the student sitting right next to me. I remembe...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Salesforce
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Broadcast Media
                    </span>
                    <span class="profile-card-tag-item ">
                      Marketing and Advertising
                    </span>
                    <span class="profile-card-tag-item ">
                      Online Media
                    </span>
                    <span class="profile-card-tag-item ">
                      Public Relations and Communications
                    </span>
                    <span class="profile-card-tag-item ">
                      Research
                    </span>
                    <span class="profile-card-tag-item ">
                      Writing and Editing
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/791-cameron-mackintosh">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Jordan Beck" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb3dFIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--3d80441685b2179b4a8626746b53c16738ce65eb/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/braids.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/778-jordan-beck">
                  <h2 class="profile-card-name">
                    Jordan Beck
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Developer BE Program
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Jordan Beck" class="profile-social-link" href="https://github.com/jordanfbeck0528">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Jordan Beck" class="profile-social-link" href="https://linkedin.com/in/jordan-f-beck">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Jordan Beck" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZ0lMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--82f0865ca0cfa1e679d97f9bca44dfe1a1d9d79a/Jordan%20Beck%20Resume%202021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I love learning about new things, and diving deep into the multiple processes that can make a thing complex. The movements that make a thing a process, not an event. So, what similar lessons can be learned from writing a song, and all its cohesive...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    SSH
                  </span>
                  <span class="profile-card-tag-item ">
                    Safari
                  </span>
                  <span class="profile-card-tag-item ">
                    Apple
                  </span>
                  <span class="profile-card-tag-item ">
                    AR
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    SaaS
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    Saas
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    MySQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Cybersecurity
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Events Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Farming
                    </span>
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Food Production
                    </span>
                    <span class="profile-card-tag-item ">
                      Hospitality
                    </span>
                    <span class="profile-card-tag-item ">
                      Leisure, Travel &amp; Tourism
                    </span>
                    <span class="profile-card-tag-item ">
                      Music
                    </span>
                    <span class="profile-card-tag-item ">
                      Renewables &amp; Environment
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
                    <span class="profile-card-tag-item ">
                      Wine and Spirits
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/778-jordan-beck">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Connor Anderson-Larson" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdUlGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9afad1cfa2cbb2b8d9cb868efd7f9a38953abfbc/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/headshot.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/793-connor-anderson-larson">
                  <h2 class="profile-card-name">
                    Connor Anderson-Larson
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Connor Anderson-Larson" class="profile-social-link" href="https://github.com/ConnorAndersonLarson">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Connor Anderson-Larson" class="profile-social-link" href="https://linkedin.com/in/connor-anderson-larson">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Connor Anderson-Larson" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc3NJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9f472e16b88d313761f04767d98d52b75b4751a0/Connor%20Anderson-Larson%20Resume%206-8.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                After 5 years of problem solving and process optimization via jobs in facilities maintenance and industrial production I am utilizing my skills to help design and implement efficient, creative user experiences.

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Enzyme
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Facilities Services
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/793-connor-anderson-larson">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Nikki Petersen" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdVFGIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--55b44a310e12338f0523b4dfe42117feee891b1c/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/14424911_10208887427360423_4177897103286278728_o.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/400-nikki-petersen">
                  <h2 class="profile-card-name">
                    Nikki Petersen
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Nikki Petersen" class="profile-social-link" href="https://github.com/Piknikki">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Nikki Petersen" class="profile-social-link" href="https://linkedin.com/in/Nikkipetersencsm">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Nikki Petersen" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdU1GIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--f5b9237dbcb8c27be3de154f3af2236677044efc/Nikki%20Petersen%20Eng%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Working as a full stack engineer previously (specializing in React frontend and Ruby/Rails backend), Nikki gained valuable skills in TDD, deploying monthly, working on a distributed team, and as a periodic Scrum Master (CSM). Attending Turing was ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Vue.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Confluence
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Medical Practice
                    </span>
                    <span class="profile-card-tag-item ">
                      Non-Profit Organization Management
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/400-nikki-petersen">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Kendall Haworth" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBam9KIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--86b3ccf9dd2bbc5b57292aaa5109443d9bf8fcff/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/kendall.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/877-kendall-haworth">
                  <h2 class="profile-card-name">
                    Kendall Haworth
                  </h2>
</a>
                <span class="profile-card-title">
                  Full Stack Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Kendall Haworth" class="profile-social-link" href="https://github.com/kendallha">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Kendall Haworth" class="profile-social-link" href="https://linkedin.com/in/kendallhaworth">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Kendall Haworth" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBajhMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c45117ee58b611d68a3d525cbdc8cff516cdfab0/kendallhaworth-resume-2021-pdf.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I'm a Customer Success Manager turned Software Engineer with a passion for building user-friendly, impactful products. I thrive on learning new skills and was drawn to software engineering because I enjoy puzzling through complex problems. I am lo...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Babel
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    SaaS
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Computer Software
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/877-kendall-haworth">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Ryan Miller" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBczRJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--2d7d7669e9668366f71bc813c80c359ed8df0638/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/MeWedding.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/886-ryan-miller">
                  <h2 class="profile-card-name">
                    Ryan Miller
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-end Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Ryan Miller" class="profile-social-link" href="https://github.com/ryan-d-miller">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Ryan Miller" class="profile-social-link" href="https://linkedin.com/in/ryan-miller-5280">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Ryan Miller" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZzBMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--3cee0b09795cfbaa396829bcec8ef7850c09e971/Ryan_Miller_resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Possessing an Associate of Arts with a designation in Game Design and Development, I am extremely passionate about programming and the computer sciences. I have 8+ years of working within teams to reach a common goal in a high stress and passionat...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    jQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    Drupal
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Java
                  </span>
                  <span class="profile-card-tag-item ">
                    C#
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Illustrator
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    C++
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Computer Games
                    </span>
                    <span class="profile-card-tag-item ">
                      Construction
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/886-ryan-miller">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Caroline Eubanks" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbWdMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7a821efabedac34e3a21c36ff15c7051abb98f7b/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/5598FE0E-3C52-46D0-8E9D-9F20F094CEA5_1_201_a.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/871-caroline-eubanks">
                  <h2 class="profile-card-name">
                    Caroline Eubanks
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Caroline Eubanks" class="profile-social-link" href="https://github.com/cmeubanks">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Caroline Eubanks" class="profile-social-link" href="https://linkedin.com/in/eubankscaroline">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Caroline Eubanks" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbklMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--a190a1701f977b7087402a8cddb847012ac05c64/Caroline%20Eubanks%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                With a background in Sales &amp; Marketing, I have developed a deep understanding for customer needs and design UI/UX to reflect that. I enjoy bringing creativity to a project, collaborating with team members and working with new technologies. My pass...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Business Development
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Salesforce
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Firebase
                  </span>
                  <span class="profile-card-tag-item ">
                    User Authentication
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Events Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Hospitality
                    </span>
                    <span class="profile-card-tag-item ">
                      Leisure, Travel &amp; Tourism
                    </span>
                    <span class="profile-card-tag-item ">
                      Marketing and Advertising
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/871-caroline-eubanks">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Jon Schlandt" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbklLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--20db7f3ccd31d251d36c32c701e46ecfcee60741/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/terminal_profile_img.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/876-jon-schlandt">
                  <h2 class="profile-card-name">
                    Jon Schlandt
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Jon Schlandt" class="profile-social-link" href="https://github.com/jon-schlandt">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Jon Schlandt" class="profile-social-link" href="https://linkedin.com/in/jon-schlandt-8479441ab">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Jon Schlandt" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbk1LIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e0610fd0cf4743e0276231e964f084fe665427f3/Jon%20Schlandt%20-%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I’m an experienced problem solver with a background in technical support. As a support specialist, I worked directly with customers to solve a variety of client-side problems, navigating new challenges while gaining insight into the user’s perspec...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    MongoDB
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Computer Hardware
                    </span>
                    <span class="profile-card-tag-item ">
                      Computer Networking
                    </span>
                    <span class="profile-card-tag-item ">
                      Computer Software
                    </span>
                    <span class="profile-card-tag-item ">
                      Information Technology and Services
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/876-jon-schlandt">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Eric  Rabun" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbHdLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--602820ebf66da5fa124a0cdba9464277301ca0cd/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/8EBC9184-B44D-467D-8FBE-CA5A6C6A7AED_1_201_a.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/875-eric-rabun">
                  <h2 class="profile-card-name">
                    Eric  Rabun
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Eric  Rabun" class="profile-social-link" href="https://github.com/errabun">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Eric  Rabun" class="profile-social-link" href="https://linkedin.com/in/eric-rabun">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Eric  Rabun" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbmtNIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7618825411a26deaf2f0494a60e52d78a23cb960/Eric_Rabun_Resume%20(3).PDF">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Hello!  I'm an aspiring Front-End Engineer coming from a long history in the hospitality industry.  Multiple years in hospitality has taught me the values of great communication, leadership, accountability, problem solving and the ability to think...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Hospitality
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/875-eric-rabun">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Rachel Hendricks" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc1FJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--3782c62c3dc5726113f3edfa88aa23ae5ad82877/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG-3276.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/884-rachel-hendricks">
                  <h2 class="profile-card-name">
                    Rachel Hendricks
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Rachel Hendricks" class="profile-social-link" href="https://github.com/rhen92">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Rachel Hendricks" class="profile-social-link" href="https://linkedin.com/in/rachel-hendricks92">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Rachel Hendricks" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcUVLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--44c696f7b09a1f06094b7145a9d00711ad7b5e60/Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                When I attended my first coding workshop, I completed pre-work where I wrote code for an informational site about bears. I typed in the HTML image source, and I saw an image of a bear pop up on my screen. I was hooked; I knew I wanted to pursue be...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Military
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/884-rachel-hendricks">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Keegan O&#39;Shea" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbUVKIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--3bf36ab019ace21453f5899368ff153235fbadb3/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/A452DC8E-0011-4C6A-92DB-275A64033753_1_201_a.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/859-keegan-o-shea">
                  <h2 class="profile-card-name">
                    Keegan O&#39;Shea
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Keegan O&#39;Shea" class="profile-social-link" href="https://github.com/koshea9">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Keegan O&#39;Shea" class="profile-social-link" href="https://linkedin.com/in/keegan-oshea">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Keegan O&#39;Shea" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc0FMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e6a3478590e1ec6af0b98790fd2468e167accf4e/keegan_oshea_resume_2021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                After 10+ years in healthcare I became a software developer because I loved the satisfaction I got from creating tools that allowed my teammates to spend more time on their most important work. I chose to come to Turing so that I could learn with ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    AR
                  </span>
                  <span class="profile-card-tag-item ">
                    Business Development
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    SaaS
                  </span>
                  <span class="profile-card-tag-item ">
                    Quality Assurance / QA
                  </span>
                  <span class="profile-card-tag-item ">
                    Salesforce
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Mentorship
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Health, Wellness and Fitness
                    </span>
                    <span class="profile-card-tag-item ">
                      Hospital &amp; Health Care
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/859-keegan-o-shea">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Ellie Azaveda" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaFFLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--bd486d3d653264faac5cdca79bf3dc9c643f22de/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/30A7994C-8BC3-49BB-8D3F-25FB1D0E365E.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/874-ellie-azaveda">
                  <h2 class="profile-card-name">
                    Ellie Azaveda
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Ellie Azaveda" class="profile-social-link" href="https://github.com/EllieAzaveda">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Ellie Azaveda" class="profile-social-link" href="https://linkedin.com/in/Ellie-Azaveda">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Ellie Azaveda" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaFVLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--38ce68f1c89be9a977a198ca8f18d549fb547726/azaveda_resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I'm a "forever student" looking to continue to learn and build on my software development skills. With a background in sales, a Master's degree in Social Sciences, and experience in University-level teaching, I offer strong skills in customer serv...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Mentorship
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Higher Education
                    </span>
                    <span class="profile-card-tag-item ">
                      Research
                    </span>
                    <span class="profile-card-tag-item ">
                      Wholesale
                    </span>
                    <span class="profile-card-tag-item ">
                      Wine and Spirits
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/874-ellie-azaveda">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Joe Mecha" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdElIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--0adecf1df17fdac3e36739c41ed2a334b09c3500/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Joseph_Mecha_PC0007-sq.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/857-joe-mecha">
                  <h2 class="profile-card-name">
                    Joe Mecha
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Joe Mecha" class="profile-social-link" href="https://github.com/joemecha">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Joe Mecha" class="profile-social-link" href="https://linkedin.com/in/joemecha">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Joe Mecha" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaE1LIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--67c66b4ae32ddfd09371590875ee51dd02ef61b6/joemecha_resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Really, it’s all about exploration. Curious, thoughtful, and resourceful software developer specialized in Backend Engineering with Ruby on Rails.
My love of learning, communicating, and new experiences (and the outdoors) led me to seize opport...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Higher Education
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/857-joe-mecha">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Christopher Anderson" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZzhMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ccc07c876d7403b74e37c4c3a9ec94f873cd41d0/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_20200910_171813.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/872-christopher-anderson">
                  <h2 class="profile-card-name">
                    Christopher Anderson
                  </h2>
</a>
                <span class="profile-card-title">
                  Frontend Web Developer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Christopher Anderson" class="profile-social-link" href="https://github.com/mistercanderson">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Christopher Anderson" class="profile-social-link" href="https://linkedin.com/in/mrchristopheranderson">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Christopher Anderson" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBZzRMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--1474fa7cba9c3df70e367520dfb6406c2dcbf94a/Chris%20Anderson%20Resume%202021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Hi! 👋 My name is Chris
I'm a ✨frontend developer✨ who loves learning &amp; digging into new tech stacks. My background within music and the hospitality industry allows me to bring a unique perspective to the world of web development, using m...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Vim
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Saas
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    MongoDB
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Hospitality
                    </span>
                    <span class="profile-card-tag-item ">
                      Music
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/872-christopher-anderson">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Diana Buffone" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdGdEIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9f70449d01150e9b5f0d74418926f21adc2a132f/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/79471FF4-08ED-4E26-B616-A71273557141.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/768-diana-buffone">
                  <h2 class="profile-card-name">
                    Diana Buffone
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Diana Buffone" class="profile-social-link" href="https://github.com/Diana20920">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Diana Buffone" class="profile-social-link" href="https://linkedin.com/in/dianabuffone">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Diana Buffone" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaWNLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--68261e4e266a726a9a7aee26b92a2c9d0aa96db4/Diana%20Buffone%20CV%202021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                As a Bolivian immigrant with extensive experience in customer service and small business management, I have made the daring and frightening choice to pursue a new career path to become a Software Developer. With the help of Turing School of Softwa...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Health, Wellness and Fitness
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
                    <span class="profile-card-tag-item ">
                      Translation and Localization
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/768-diana-buffone">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Ashish Malla" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdDBMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--8655ca5a0ef66eec8f17a71449a44438a1ae7a13/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Screenshot_20200928-091350_Gallery-01.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/869-ashish-malla">
                  <h2 class="profile-card-name">
                    Ashish Malla
                  </h2>
</a>
                <span class="profile-card-title">
                  Software Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Ashish Malla" class="profile-social-link" href="https://github.com/asiisii">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Ashish Malla" class="profile-social-link" href="https://linkedin.com/in/asiisii">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Ashish Malla" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBajhNIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ecd60dfad23a09d28a9d62e6f229f196f73f3f06/Resume-AshishMalla.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                10 years ago,I had no access to tech! If you are wondering how anyone could make it in the world today without it... so was I. In fact, I realized that I couldn't advance in my life without it. My goal then was to learn everything I could ab...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    User Authentication
                  </span>
                  <span class="profile-card-tag-item ">
                    Firebase
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Java
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    MySQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Mentorship
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    MongoDB
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Information Technology and Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Insurance
                    </span>
                    <span class="profile-card-tag-item ">
                      Professional Training &amp; Coaching
                    </span>
                    <span class="profile-card-tag-item ">
                      Recreational Facilities and Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
                    <span class="profile-card-tag-item ">
                      Telecommunications
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/869-ashish-malla">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Bryan Hohn " src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdmdLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--5f7936b9f56a4f97bcb26b51cf6d85477e169d10/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/profilePicture.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/870-bryan-hohn">
                  <h2 class="profile-card-name">
                    Bryan Hohn 
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Bryan Hohn " class="profile-social-link" href="https://github.com/bhohnco">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Bryan Hohn " class="profile-social-link" href="https://linkedin.com/in/bryanhohn">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Bryan Hohn " class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb0VMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e765b936d3e66079562800a58d4ce15d81e4e110/BryanHohn7.23.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I’ve always had a passion for project planning, problem-solving, and technology. While working in logistics, I used these skills to solve challenging problems for our clients and vendors. But I still felt like I was able to accomplish more, so I b...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Webstorm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jetbrains
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Construction
                    </span>
                    <span class="profile-card-tag-item ">
                      Logistics and Supply Chain
                    </span>
                    <span class="profile-card-tag-item ">
                      Telecommunications
                    </span>
                    <span class="profile-card-tag-item ">
                      Wireless
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/870-bryan-hohn">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Peter Muellerleile" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdFVIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--45983de1857d2d40c1a5c71b7a7dfc868728b24e/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Screen%20Shot%202021-05-12%20at%201.13.53%20PM.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/883-peter-muellerleile">
                  <h2 class="profile-card-name">
                    Peter Muellerleile
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Peter Muellerleile" class="profile-social-link" href="https://github.com/pcmueller">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Peter Muellerleile" class="profile-social-link" href="https://linkedin.com/in/pcmueller">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Peter Muellerleile" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcElMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d44795243ed20fa552e4521025f32ce3bf4bc819/Peter%20Muellerleile%20Tech%20Resume%202021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Former bartender, restaurant manager, and all-around service industry professional now entering the tech workforce as a software engineer. Throughout my life and career I've always held a love of problem-solving, aesthetic design, and interpersona...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Continuous Integration
                  </span>
                  <span class="profile-card-tag-item ">
                    Chai
                  </span>
                  <span class="profile-card-tag-item ">
                    C++
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Cypress
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Hospitality
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/883-peter-muellerleile">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Aidan McGuire-Lester" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaDRJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ebc52f0ec07252203362670915731c40fea197da/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_20201227_164442_01_2.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/849-aidan-mcguire-lester">
                  <h2 class="profile-card-name">
                    Aidan McGuire-Lester
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End-Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Aidan McGuire-Lester" class="profile-social-link" href="https://github.com/A-McGuire">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Aidan McGuire-Lester" class="profile-social-link" href="https://linkedin.com/in/aidanmcguire">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Aidan McGuire-Lester" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaU1MIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c5eade5982bc960f81618d2d37b31674ba4d1991/Aidan%20McGuire-Lester%20-%20Terminal%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I have always had a passion for building. As a child, it was Lincoln Logs and legos, in years past it was Tesla charging infrastructure and commercial establishments, today it is code. 
I get an immense amount of gratification from the entire b...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Construction
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/849-aidan-mcguire-lester">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Dustin Harbaugh" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc1VLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--effa3a0d567cb03a66f1596275279503b6269af1/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/profile_pic.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/873-dustin-harbaugh">
                  <h2 class="profile-card-name">
                    Dustin Harbaugh
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Dustin Harbaugh" class="profile-social-link" href="https://github.com/Thee-Dust">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Dustin Harbaugh" class="profile-social-link" href="https://linkedin.com/in/dustin-harbaugh">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Dustin Harbaugh" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbm9NIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--2f623d3201d91b6b4c78ca4787f3f57aef6057f2/Dustin_H_Resume_Aug_2021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I've been fascinated by technology for the past ten years. It all began when I was 14 and I learned how to build custom PCs. I was much more eager to study more after learning how. I began looking at websites and became interested in how they were...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Sketch
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    C#
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/873-dustin-harbaugh">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Patrick Findley" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbjhJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d2f09041c20e7a6fbfb5398e8629dbb24f87314a/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/smallme.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/882-patrick-findley">
                  <h2 class="profile-card-name">
                    Patrick Findley
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Patrick Findley" class="profile-social-link" href="https://github.com/PatFindley">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Patrick Findley" class="profile-social-link" href="https://linkedin.com/in/PatFindley">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Patrick Findley" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc1lJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--1495c71ee9d8f6800b181927cabe563308e99f04/Pat%20Findley%20Codes.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Problem Solver at heart, Passionate about team building
Past work experience is divided between harmonizing team objectives in customer-centric environments in the service industry, and collaborative writing, booking, managing and production ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Continuous Integration
                  </span>
                  <span class="profile-card-tag-item ">
                    Cypress
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Entertainment
                    </span>
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Hospitality
                    </span>
                    <span class="profile-card-tag-item ">
                      Music
                    </span>
                    <span class="profile-card-tag-item ">
                      Restaurants
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/882-patrick-findley">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Tyson McNutt" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdUlJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--bbd0a246d84f740d8007ed1f212a0a590e398381/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_4546%20copy%202.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/888-tyson-mcnutt">
                  <h2 class="profile-card-name">
                    Tyson McNutt
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Tyson McNutt" class="profile-social-link" href="https://github.com/tysnj">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Tyson McNutt" class="profile-social-link" href="https://linkedin.com/in/tysonmcnutt">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Tyson McNutt" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdVVMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--16b2a92f4dd45f5fe9b820dac4f8d7494e47a586/TM_2021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                With over a decade of experience working with tech/media and the last 6+ years in SaaS operations, I've become a critical thinker who consistently exceeds performance standards by quickly overcoming challenges with a level-headed and calm demeanor...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    SaaS
                  </span>
                  <span class="profile-card-tag-item ">
                    Quality Assurance / QA
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Jest
                  </span>
                  <span class="profile-card-tag-item ">
                    Google
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
                  <span class="profile-card-tag-item ">
                    Enzyme
                  </span>
                  <span class="profile-card-tag-item ">
                    Confluence
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
                  <span class="profile-card-tag-item ">
                    Salesforce
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    MySQL
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Computer Software
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/888-tyson-mcnutt">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Austin Andrade" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcGNJIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--9b82edc16050ae4eef328c03fb24b50f82ee1962/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/headshot.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/852-austin-andrade">
                  <h2 class="profile-card-name">
                    Austin Andrade
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Austin Andrade" class="profile-social-link" href="https://github.com/austinandrade">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Austin Andrade" class="profile-social-link" href="https://linkedin.com/in/austinandrade">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Austin Andrade" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaEVKIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--71c208a8e701e36b6ef4295735f8f8c326118d34/Austin_Andrade_Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am an evolving software developer looking to translate my passion for game development into a fulfilling career. My love for video games has inspired me to pursue a career in software development, garnering the skills necessary for web applicati...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/852-austin-andrade">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Brisa Garcia Gonzales" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaUlKIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--0a7a5cfccb161e35f1910915e0eeab4e3aeedfd8/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Screen%20Shot%202021-06-11%20at%2012.09.59%20PM.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/853-brisa-garcia-gonzales">
                  <h2 class="profile-card-name">
                    Brisa Garcia Gonzales
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Brisa Garcia Gonzales" class="profile-social-link" href="https://github.com/brisag">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Brisa Garcia Gonzales" class="profile-social-link" href="https://linkedin.com/in/brisa-garcia">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Brisa Garcia Gonzales" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcThLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--2b8e4234e54581298ec7296a42431803c983e172/BrisaGG.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Enthusiastic backend software engineer with the skills needed to help develop and maintain software programs and to make improvements that will enhance functionality. I have outstanding problem skills with the ability to work with technical and ab...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Hospital &amp; Health Care
                    </span>
                    <span class="profile-card-tag-item ">
                      Information Technology and Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/853-brisa-garcia-gonzales">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Riley Martin" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdjBIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--91c34a38eba827128203d6d111eb685c284503a3/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/49897639_1012613382281631_5374214658188115968_n.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/757-riley-martin">
                  <h2 class="profile-card-name">
                    Riley Martin
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Riley Martin" class="profile-social-link" href="https://github.com/RMartin0717">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Riley Martin" class="profile-social-link" href="https://linkedin.com/in/rmartin0717">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Riley Martin" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdWtMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--a758c4adc87cee7b4e02f927efeac8704949fb86/Riley%20Martin%20FE%20Engineer%20Resume%202021.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                From educator to software developer, I am driven to make information, resources, and tools more accessible to as many people as possible.
In the classroom, I took complex concepts and broke them down, organized, and delivered them. I was able t...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Continuous Integration
                  </span>
                  <span class="profile-card-tag-item ">
                    Chai
                  </span>
                  <span class="profile-card-tag-item ">
                    Cypress
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/757-riley-martin">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Zach Johnson" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBdGNIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7b903ba7cd8eea4dd5a9489c571b5c15734e4606/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/img_2052_3-min.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/889-zach-johnson">
                  <h2 class="profile-card-name">
                    Zach Johnson
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Zach Johnson" class="profile-social-link" href="https://github.com/zachjjohns">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Zach Johnson" class="profile-social-link" href="https://linkedin.com/in/zachjjohns">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Zach Johnson" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcmdLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--5069bdd21f88bc907820cae1e9e17e6f52f2bcc6/Resume_ZachJohnson1.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I have great love for helping others, bringing 10 years of experience within disability services and mental health. The work provided a solid foundation for developer empathy, accessibility, and focusing on the user experience. 
Software develo...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Gimp
                  </span>
                  <span class="profile-card-tag-item ">
                    VR
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Illustrator
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Hospital &amp; Health Care
                    </span>
                    <span class="profile-card-tag-item ">
                      Mental Health Care
                    </span>
                    <span class="profile-card-tag-item ">
                      Recreational Facilities and Services
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/889-zach-johnson">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Gaelyn Cooper" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcjRMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--fb67c841f368b1e3f8fde73500b01908a9ee20cb/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_1996.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/854-gaelyn-cooper">
                  <h2 class="profile-card-name">
                    Gaelyn Cooper
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Gaelyn Cooper" class="profile-social-link" href="https://github.com/gaelyn">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Gaelyn Cooper" class="profile-social-link" href="https://linkedin.com/in/gaelyn-cooper">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Gaelyn Cooper" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc1lMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--0426e374253e549b09b4756cd8e24bd7629a97d8/Gaelyn%20Cooper%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                My love for logic, equations, and solving complex problems initially led me into the medical field as a pharmacist. Now, I am excited to put my  skills and experience to work as a software developer. I am a detail-oriented, lifelong learner and em...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    GraphQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Hospital &amp; Health Care
                    </span>
                    <span class="profile-card-tag-item ">
                      Medical Practice
                    </span>
                    <span class="profile-card-tag-item ">
                      Pharmaceuticals
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/854-gaelyn-cooper">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Shawn  McMahon" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBalFMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--e26f1501b6c7bb616a269b0cf46b9b0d195c0176/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/headshot_crop.png" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/966-shawn-mcmahon">
                  <h2 class="profile-card-name">
                    Shawn  McMahon
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Shawn  McMahon" class="profile-social-link" href="https://github.com/shawnmcmahon">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Shawn  McMahon" class="profile-social-link" href="https://linkedin.com/in/shawnpmcmahon">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Shawn  McMahon" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbndNIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d7b06b4741420728b21e4e0a90e2b84a7db016a0/Tech%20Resume%202.0%20Dark%20Mode.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a software engineer, snowboarder, and music enthusiast. I believe life is more fun when you follow your passions, regardless of how diverse they may be.
Introduced to programming when I was 16, I found my passion for front-end design durin...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Cypress
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Adobe Photoshop
                  </span>
                  <span class="profile-card-tag-item ">
                    Mentorship
                  </span>
                  <span class="profile-card-tag-item ">
                    Visual Studio
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Food &amp; Beverages
                    </span>
                    <span class="profile-card-tag-item ">
                      Real Estate
                    </span>
                    <span class="profile-card-tag-item ">
                      Retail
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/966-shawn-mcmahon">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Caleb Wittman" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBa3dMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--6d94e2283417e6b52704d4234aa180278b0b91a6/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_6957.JPG" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/971-caleb-wittman">
                  <h2 class="profile-card-name">
                    Caleb Wittman
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Caleb Wittman" class="profile-social-link" href="https://github.com/Caleb1991">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Caleb Wittman" class="profile-social-link" href="https://linkedin.com/in/caleb-wittman">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Caleb Wittman" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBc2NMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--f495424f7b47e4fc805e83e9ac17b560bb13dd98/Resume%20(2).pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                As a backend developer, I pride myself on formulating a solution with both the developer and user in mind. Aided by my leadership experience from previous positions, I am well equipped to be an exceptional teammate in the workplace. The tech field...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Machinery
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/971-caleb-wittman">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Aliya Merali" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbkFLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--b3990b3433d57445a216b4cef8e96368d16de1c4/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/Aliya-4609-784.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/932-aliya-merali">
                  <h2 class="profile-card-name">
                    Aliya Merali
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer,
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Aliya Merali" class="profile-social-link" href="https://github.com/aliyamerali">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Aliya Merali" class="profile-social-link" href="https://linkedin.com/in/aliyamerali">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Aliya Merali" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBczhLIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--511d55a364b3a9edfca06b0f02131cb71d054620/2021%20July%2014%20-%20Aliya%20Merali%20Resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I'm a software engineer with 8 years of experience in project management in tech and science education, and an academic background in physics and data science. 
I'm passionate about creative and elegant problem solving, and I'm excited by missi...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Product Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    Slack
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    SQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Golang
                  </span>
                  <span class="profile-card-tag-item ">
                    Go
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Education Management
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/932-aliya-merali">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Taylor Galloway" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBak1MIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--34c962a8214a9b0737b98db801ee225a29d9c6dc/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/galloway-220%20copy%202.jpg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/970-taylor-galloway">
                  <h2 class="profile-card-name">
                    Taylor Galloway
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Taylor Galloway" class="profile-social-link" href="https://github.com/tylrs">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Taylor Galloway" class="profile-social-link" href="https://linkedin.com/in/taylor-galloway">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Taylor Galloway" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBbjhNIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--68dc37aecc84830bb8de3e4dfb7950821ffeb007/Taylor%20Galloway%20Resume%CC%81.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a Chicago based actor, singer, and pianist studying Front-End Software Engineering at the Turing School of Software and Design. Although it seems like a big change, I am really just moving from one keyboard to another and from performing scri...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Sass
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Express
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Performing Arts
                    </span>
                    <span class="profile-card-tag-item ">
                      Primary/Secondary Education
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/970-taylor-galloway">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Molly Krumholz" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBaklMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--c6e7960ad8c4543a6ee8b080e91a61be5083ede6/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/MKK_headshot_green_square.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/945-molly-krumholz">
                  <h2 class="profile-card-name">
                    Molly Krumholz
                  </h2>
</a>
                <span class="profile-card-title">
                  Back-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Molly Krumholz" class="profile-social-link" href="https://github.com/mkrumholz">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Molly Krumholz" class="profile-social-link" href="https://linkedin.com/in/mkrumholz">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Molly Krumholz" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcHdMIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--8c2816f9579e851539d226046f54f35896451b2a/krumholz_resume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                I am a backend developer with a background in business process automation and data analysis. I've been working in tech startups since 2016, and I came to Turing to expand my technical range and connect my database knowledge with a strong foundatio...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    MySQL
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    Mentorship
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Rails
                  </span>
                  <span class="profile-card-tag-item ">
                    PostgreSQL
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Computer Software
                    </span>
                    <span class="profile-card-tag-item ">
                      Legal Services
                    </span>
                    <span class="profile-card-tag-item ">
                      Marketing and Advertising
                    </span>
                    <span class="profile-card-tag-item ">
                      Sporting Goods
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/945-molly-krumholz">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-be">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Dominic  Padula" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBckVHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--ad3e19d0f702e3198564e8ee1c10481cf1b7130a/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/IMG_4357.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/769-dominic-padula">
                  <h2 class="profile-card-name">
                    Dominic  Padula
                  </h2>
</a>
                <span class="profile-card-title">
                  Back Eng Engineer 
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Dominic  Padula" class="profile-social-link" href="https://github.com/domo2192">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Dominic  Padula" class="profile-social-link" href="https://linkedin.com/in/dominic-padula-5bb5b2179">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Dominic  Padula" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcklHIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7ac3ef8e2ed5b72febde10c57ecaa70a997a5b3e/Red%20and%20Blue%20Modern%20Marketing%20Assistant%20Resume%20(1).pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                Whether I was working on a multi-million dollar construction site or as a 911 dispatch supervisor, I have always been team oriented and community driven. These high stress and high reward situations are where my collected, empathetic, and driven p...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Bootstrap
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    jQuery
                  </span>
                  <span class="profile-card-tag-item ">
                    Quality Assurance / QA
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Management
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    RSpec
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Java
                  </span>
                  <span class="profile-card-tag-item ">
                    Kubernetes
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    AWS
                  </span>
                  <span class="profile-card-tag-item ">
                    Python
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Construction
                    </span>
                    <span class="profile-card-tag-item ">
                      Public Safety
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/769-dominic-padula">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 mb-4">
          <article class="profile-card program-fe">
            <div class="profile-card-header">
              <img class="avatar" alt="Avatar for Matt McVey" src="https://terminal.turing.edu/rails/active_storage/representations/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBcjRIIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7807ba03534a4fa3f2248f4a350647d277e5ea4a/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9UY21WemFYcGxYMkZ1WkY5d1lXUmJCMmxsYVdVNkQySmhZMnRuY205MWJtUTZFSFJ5WVc1emNHRnlaVzUwIiwiZXhwIjpudWxsLCJwdXIiOiJ2YXJpYXRpb24ifX0=--6ac50ecd0d0d8955a7560d4346d4ecb08949181c/me.jpeg" />

              <div class="profile-card-header-right">
                <a class="link-to-block" href="/alumni/802-matt-mcvey">
                  <h2 class="profile-card-name">
                    Matt McVey
                  </h2>
</a>
                <span class="profile-card-title">
                  Front-End Engineer
                </span>

                <ul class="profile-social-links profile-social-links-inline">
                    <li>
                      <a target="_blank" title="GitHub profile for Matt McVey" class="profile-social-link" href="https://github.com/mattmcvey">
                        <i class="fab fa-github profile-social-icon no-left-spacing"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="LinkedIn profile for Matt McVey" class="profile-social-link" href="https://linkedin.com/in/mattmcvey">
                        <i class="fab fa-linkedin profile-social-icon"></i>
</a>                    </li>
                    <li>
                      <a target="_blank" title="Resume for Matt McVey" class="profile-social-link" href="/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBb2dKIiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--64b669c31545ba9a857506d5e802c1bf94ff83cf/MattMcVeyResume.pdf">
                        <svg width="24" height="24" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="profile-social-icon">
  <path d="M8.37242 17.7091H3.63063C2.9527 17.7091 2.58885 18.5358 3.08339 19.0305L7.82518 23.7723C8.3129 24.2599 9.14659 23.912 9.14659 23.2251V18.4833C9.14659 18.0555 8.80015 17.7091 8.37242 17.7091ZM18.8237 0H5.17897C3.89627 0 2.85647 1.03981 2.85647 2.32251V16.2803C2.85647 16.709 3.20484 17.0559 3.63402 17.0544C4.34626 17.0515 5.80314 17.0559 8.8645 17.0559C9.38126 17.0559 9.79979 17.4744 9.79979 17.9912C9.79979 21.053 9.80414 22.5094 9.80124 23.2217C9.79979 23.6508 10.1467 23.9992 10.5754 23.9992H18.8237C20.1064 23.9992 21.1462 22.9594 21.1462 21.6767V2.32251C21.1462 1.03981 20.1064 0 18.8237 0V0ZM11.9694 2.43718C13.4064 2.43718 14.5754 3.60617 14.5754 5.04322C14.5754 6.47979 13.4064 7.64879 11.9694 7.64879C10.5328 7.64879 9.36384 6.47979 9.36384 5.04322C9.36384 3.60617 10.5328 2.43718 11.9694 2.43718ZM8.04969 10.3792C8.04969 9.71001 8.44451 9.10083 9.05562 8.82794C10.4053 8.2254 10.385 8.21248 10.5991 8.21248H13.3223C13.5401 8.21248 13.5312 8.23193 14.8658 8.82794C15.4773 9.10083 15.8722 9.71001 15.8722 10.3792V11.4408C15.8722 11.8685 15.5257 12.2149 15.098 12.2149H8.82385C8.39613 12.2149 8.04969 11.8685 8.04969 11.4408V10.3792ZM16.356 20.3703H11.8562C11.4284 20.3703 11.082 20.0239 11.082 19.5961C11.082 19.1684 11.4284 18.822 11.8562 18.822H16.356C16.7838 18.822 17.1302 19.1684 17.1302 19.5961C17.1302 20.0239 16.7838 20.3703 16.356 20.3703ZM16.356 15.9188H7.59825C7.17052 15.9188 6.82408 15.5724 6.82408 15.1447C6.82408 14.7169 7.17052 14.3705 7.59825 14.3705H16.356C16.7838 14.3705 17.1302 14.7169 17.1302 15.1447C17.1302 15.5724 16.7838 15.9188 16.356 15.9188Z" fill="#BCBEC0"></path>
</svg>

</a>                    </li>
                </ul>
              </div>
            </div>

            <div class="profile-card-body">
              <div class="profile-card-about-me">
                With nearly a decade in the tech space I have grown to love it. Originally on the recruiting side of things I have made the change to the development side. I love problem solving and working as a part of team towards a common goal. During my time ...

              </div>

              <h3 class="profile-card-subheader">
                Skills
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Apple
                  </span>
                  <span class="profile-card-tag-item ">
                    Travis
                  </span>
                  <span class="profile-card-tag-item ">
                    Redux
                  </span>
                  <span class="profile-card-tag-item ">
                    Webpack
                  </span>
                  <span class="profile-card-tag-item ">
                    Npm
                  </span>
                  <span class="profile-card-tag-item ">
                    Google
                  </span>
                  <span class="profile-card-tag-item ">
                    Chrome
                  </span>
                  <span class="profile-card-tag-item ">
                    Saas
                  </span>
                  <span class="profile-card-tag-item ">
                    LinkedIn
                  </span>
                  <span class="profile-card-tag-item ">
                    Trello
                  </span>
                  <span class="profile-card-tag-item ">
                    User Interface Design / UI
                  </span>
                  <span class="profile-card-tag-item ">
                    User Experience Design / UX
                  </span>
                  <span class="profile-card-tag-item ">
                    Mocha
                  </span>
                  <span class="profile-card-tag-item ">
                    Node.js
                  </span>
                  <span class="profile-card-tag-item ">
                    HTML5
                  </span>
                  <span class="profile-card-tag-item ">
                    CSS3
                  </span>
                  <span class="profile-card-tag-item ">
                    JavaScript
                  </span>
                  <span class="profile-card-tag-item ">
                    React
                  </span>
                  <span class="profile-card-tag-item ">
                    Heroku
                  </span>
                  <span class="profile-card-tag-item ">
                    GitHub
                  </span>
                  <span class="profile-card-tag-item ">
                    Git
                  </span>
                  <span class="profile-card-tag-item ">
                    Atom
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Currently learning
              </h3>
              <p class="profile-card-tag-list">
                  <span class="profile-card-tag-item ">
                    Ruby
                  </span>
                  <span class="profile-card-tag-item ">
                    TypeScript
                  </span>
              </p>

              <h3 class="profile-card-subheader">
                Previous Industries
              </h3>
              <p class="profile-card-tag-list">
                    <span class="profile-card-tag-item ">
                      Staffing and Recruiting
                    </span>
              </p>
            </div>

            <div class="profile-card-footer">
              <a class="ds-button ds-button-flat" href="/alumni/802-matt-mcvey">
                See full profile
                <i class="fas fa-arrow-right pl-1"></i>
</a>            </div>
          </article>
        </div>
    </div>
  </section>
</div>

    </main>

    <div class="footer">
  <ul class="container footer-container">
    <li class="footer-left">
      <div class="d-md-block">
        <a href="https://www.facebook.com/turingschool/"
           target="_blank"
           class="social-icon"
           title="Turing's Facebook">
          <i class="fab fa-facebook"></i>
        </a>
        <a href="https://twitter.com/turingschool"
           target="_blank"
           class="social-icon"
           title="Turing's Twitter">
          <i class="fab fa-twitter"></i>
        </a>
        <a href="https://www.linkedin.com/school/turingschool/"
           target="_blank"
           class="social-icon"
           title="Turing's LinkedIn">
          <i class="fab fa-linkedin"></i>
        </a>
        <a href="https://www.instagram.com/turing_school/"
           target="_blank"
           class="social-icon"
           title="Turing's Instagram">
          <i class="fab fa-instagram"></i>
        </a>
      </div>
    </li>

    <li class="list-spacer">
      &nbsp;
    </li>

    <li class="footer-right-padding">
      <div class="d-none d-sm-block">
        <a href="/policy">Privacy Policy</a>
      </div>
    </li>

    <li class="footer-right-padding">
      <div class="d-none d-sm-block">
        <a href="mailto:robyn@turing.edu">Contact</a>
      </div>
    </li>

    <li class="footer-right-padding">
      <div class="d-none d-sm-block">
        <a href="https://writing.turing.edu/tag/for-employers/" target="_blank">Blog</a>
      </div>
    </li>
  </ul>
</div>


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js" integrity="sha384-smHYKdLADwkXOn1EmN1qk/HfnUcbVRZyYmZ4qpPea6sjB/pTJ0euyQp0Mk8ck+5T" crossorigin="anonymous"></script>
    <script src="/assets/application-187f6e3d2d6e0db495b1a6e0b439068b1275a01a2c38c32d9ffc0fe675a84b38.js"></script>
  </div>
</body>
</html>

  recorded_at: Sun, 01 Aug 2021 20:59:05 GMT
recorded_with: VCR 6.0.0
