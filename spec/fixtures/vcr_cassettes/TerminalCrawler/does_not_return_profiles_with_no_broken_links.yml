---
http_interactions:
- request:
    method: get
    uri: https://terminal.turing.edu/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.8.1 Ruby/3.0.0p0 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - terminal.turing.edu
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Sat, 03 Jul 2021 21:18:21 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Content-Type:
      - text/html; charset=utf-8
      Etag:
      - W/"4c56e3b829ed18931a7b3908be76eeb2"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _terminal_session=O6%2FYfHzNr9ZWeojrSguwDHxyXfEnCBHesAPNfub18l97tZvyPeUPe8ruaRDw5w56Gs0hYLYBd897%2BEnlyrlaYZks5XLWLiGZGcoOHMjlf7Q8FtPWlFWGl21RXv%2Fe0U8Zf%2FV1R%2F2b9vDT1kh5P5vP0E489q488aY4NypBjNyomm400cgZ8Xgv7UMp8GsK9pL3ursNnOJKVtdnxJwGhGlPWiswGoIiNC0oILCpZPsdOeBOhbPV5267NSHzPnFqmtP8pt98FZAodip6n1rCBA%2BoB%2FoiMYcnZYvXuA%3D%3D--kmIqVzvCZp6LsiUp--7rYPQXAlNGyCPYshtmGceQ%3D%3D;
        path=/; secure; HttpOnly
      X-Request-Id:
      - cdba872e-c84f-4b25-a8a2-2e27d42f81c8
      X-Runtime:
      - '1.018766'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 03 Jul 2021 21:18:21 GMT
- request:
    method: get
    uri: https://terminal.turing.edu/alumni/675-ben-lee
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.8.1 Ruby/3.0.0p0 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Cookie:
      - _terminal_session=O6%2FYfHzNr9ZWeojrSguwDHxyXfEnCBHesAPNfub18l97tZvyPeUPe8ruaRDw5w56Gs0hYLYBd897%2BEnlyrlaYZks5XLWLiGZGcoOHMjlf7Q8FtPWlFWGl21RXv%2Fe0U8Zf%2FV1R%2F2b9vDT1kh5P5vP0E489q488aY4NypBjNyomm400cgZ8Xgv7UMp8GsK9pL3ursNnOJKVtdnxJwGhGlPWiswGoIiNC0oILCpZPsdOeBOhbPV5267NSHzPnFqmtP8pt98FZAodip6n1rCBA%2BoB%2FoiMYcnZYvXuA%3D%3D--kmIqVzvCZp6LsiUp--7rYPQXAlNGyCPYshtmGceQ%3D%3D
      Host:
      - terminal.turing.edu
      Referer:
      - https://terminal.turing.edu/
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Sat, 03 Jul 2021 21:18:21 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Content-Type:
      - text/html; charset=utf-8
      Etag:
      - W/"a9e6a8654ac09b8dd1885c9564263e3f"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _terminal_session=vlYmWq62o8FuxzG4XESdO9TcfY8JXGFGmcgo5chuN1ExWxMcex%2BwKRnywxB4iTVVPNQ6%2BtYqwZypSl8wYI2bwP025hujAoHkBacZno2XJPPSxMVTMuhWssnVYjl%2BbXlbWTj%2BL9d%2FhN040KhD0SQe0cBqcix3PiJTde9Kt3MHxCQcIY4%2BpRvdZaZtU%2BTgzg7cG5AxcvC0g1eBvvOuQunrJDE0drQHeU2vL3rrDa1HntF7XYIsJRQcI0Pe4FeAXspVfvArcjA8KYV7JPiJdEavN0jFxDIBsTHPqQ%3D%3D--V2sH%2BoLeF85ADB9o--8sWvex5iwNEIof6PY6Gthg%3D%3D;
        path=/; secure; HttpOnly
      X-Request-Id:
      - 0cadcb9b-48cf-4027-86b0-8de59de3f856
      X-Runtime:
      - '0.075590'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 03 Jul 2021 21:18:22 GMT
- request:
    method: get
    uri: https://glass-planner-frontend-git-demo-bendelonlee.vercel.app/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.8.1 Ruby/3.0.0p0 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - glass-planner-frontend-git-demo-bendelonlee.vercel.app
      Referer:
      - https://terminal.turing.edu/alumni/675-ben-lee
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 03 Jul 2021 21:18:22 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Robots-Tag:
      - noindex
      Content-Disposition:
      - inline; filename="index.html"
      Cache-Control:
      - public, max-age=0, must-revalidate
      Access-Control-Allow-Origin:
      - "*"
      Etag:
      - W/"95e5bf7c8a327658a14e6b2a6c0ef0614a694d838c5ba76d8adb90aff8d5b1c2"
      X-Vercel-Cache:
      - MISS
      Age:
      - '0'
      Server:
      - Vercel
      X-Vercel-Id:
      - pdx1::t8sxv-1625347102403-6dc27429ff96
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
      Content-Encoding:
      - gzip
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAA4xW+2vjOBD+VxwfGJuVlaT7uDaxcj8eLBy70IPjCGFR7HGsVpGMJLcXUv/vN/IrbW/LtRTrMQ/NfDP6lGxW6Nydaggqd5SbzH8DydWBhaBCXAMvNtkRHA/yihsLjoWNK9PrcL7JpFD3gQHJQpFrFQaVgZKF85I/+DXFj9fqjBU/AgsfBDzW2rgwQLkDhc4eReEqVgCaQNotiFDCCS5Tm3MJbPnKh6vgCGmupTbP3Pyy6P5e6RZgcyNqJ3x0k+5fsA+scBDkBriDImisUIdhleI3dymv65cZ4oaE1Okmr9IX2Up90MubK1qrw0uLI1eiBOsmzXGD3lm0R10nnITN75JbG3xH0BWYbN5v9n4GQ+u4E/k8txZ9CEWvy8Xi14+fSppXjbqnuB/2R1p3kmArAIelm/e12+vitMmU7pHY/K2bQAEm7XQAiu8lBF/5A7/tpH7TNCpwlbABZkyz+WSYFeIhEAULjdade1xvskE4KxuVe5hjSM7jPDCxwZU28QM3gSKScGa2ix2pcVjuSInD1Y7kbEEs2+7WecapBHVw1Tr/8CGRjG/zHfm2v4Pc0dpop32j0orbb4/qu9E1GHei2CQy1kQmUaS3chdFltaNrWK/wMMS4idssfZxqECooE7e5bImCl3GsFU7VuMn6TyIKBKY1dqOkSaW2kqULk7iZG3ANUYFTRcB9S1zihtSPj1tMQ5UaSdocDEhA8RgfCZrRp8Gs5+kjjVbsyOKzRaI33LNMzfqca/ndWrmtny3XswY09saMYhRfZm0CmcNtbXEyxWbNCXLhACTsaQWLRCcpB1ChrarETu3RLPzcrVoSeNrMgUsfS1FGSsMJhmM/JzCP/5G23Ufq99iZ7EyRK5mSzIIV+e2HcEBb9Qh7EZb4shlLhEpKn22014r6ZEBkTRn2EW0YJduI4a45Cyp9tPk6WkobQGlUDAWtFM7g2qOYHzHr9D5AdzKtUmL/gx73r1ho3rrIpwx3x26DG5Px72WUdSP1OlbZ5Ay/uSHKHrrxP/qEqyVbGAV/qGLRkLYJuQt4/DHD7CD2mg2W/Thuhfpd0VZRsa3KlYWkoRcR2asEKxR+slLQ90dFbIxJ4gi/08vJ12M+loOwfW8GKtGysS7Q8Bi91bojiDplryRLnyNeJ8FYNZXXUC2w+UCMiQTVfhrCglWGv0pMqWLyT5ropbuhSq6uPCqTpfPeYzUi5J6n4a9yva3SePilQ6xt6ufCKcO9nEZEvIQ0SfGH6dflWRQfBfPeAPvo0aiDzvkOfP8uw0fYV/z/P4rvhb1wT8Sad0/EilKwt37tDz3IOHynpI6xHiy7pfMIKNwajt66PnNn196trxwcYksY2K+LZECvViweu25LEZSy+bj69CPgTX55cG6s/Mr+vnqav8FvtwMj9Wd9W/H/1h1r9zN52JZLgr+U8N5/6zNu18t/wIAAP//AwCOyJCOxQgAAA==
  recorded_at: Sat, 03 Jul 2021 21:18:22 GMT
- request:
    method: get
    uri: https://thirsty-plants.herokuapp.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.8.1 Ruby/3.0.0p0 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - thirsty-plants.herokuapp.com
      Referer:
      - https://terminal.turing.edu/alumni/675-ben-lee
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Sat, 03 Jul 2021 21:18:41 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Etag:
      - W/"6f3b68abb6c91c0e9597141e0634ac96"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _thirsty_plants_session=QjNqNXFtL2VxbDNuZDVIV2FnTTBQbWxCRCtLY3NTeldPSCtJcUpFSU9LTVFJbDhkSlRhSkNuSlZPSmNJa1FmRldiQ0gyanp0Q3VOTTlWM3N5R0E0c3FSMEE1SWYyS3JMZXlzVjFlVlJwdDE4Um9rTXNtb3d2cjNzRklYTHpyUTREVU8vb0lEZ1ZMTHQyOWIwcmhoZWtBPT0tLWtUbmttZkdGOVVWVWpieVYxZjYrcHc9PQ%3D%3D--7fdf9f7378f381a3d0d53a7e928e883e2a52436c;
        path=/; HttpOnly
      X-Request-Id:
      - cea85744-ae0e-45d6-b372-b9de36e7326d
      X-Runtime:
      - '0.551917'
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: UTF-8
      string: |
        <!DOCTYPE html>
        <html>
          <head>
            <title>Thirsty Plants</title>
            <meta name="csrf-param" content="authenticity_token" />
        <meta name="csrf-token" content="LLagjert9mpUX3hx7ZX8FYGOIKj1JnBgyIs8prXHjnOXdSvvUxd5ED6B/Kt/k/HrntVY97XuZb+07UL1msW0dg==" />
            <link rel="stylesheet" media="all" href="/assets/application.css" />
            <script src="/assets/application.js"></script>
          </head>
          <body class="welcome">
            <h1 class="root_h1">How thirsty are your plants?</h1>

        <a class="nav-link" id="login_link" href="/auth/google_oauth2">Sign in with Google</a>

          </body>
        </html>
  recorded_at: Sat, 03 Jul 2021 21:18:41 GMT
- request:
    method: get
    uri: http://sweater-weather-1.surge.sh/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.8.1 Ruby/3.0.0p0 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - sweater-weather-1.surge.sh
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Surge
      Surge-Cache:
      - HIT
      Surge-Stamp:
      - 13804::1565988165625-937508f57c96154b79981156a0ea02d3
      Age:
      - '698724'
      Date:
      - Sat, 03 Jul 2021 21:18:42 GMT
      Cache-Control:
      - public, max-age=0, must-revalidate
      Etag:
      - '"e8fcb5ee50494e2b99cae280ba7c673d4d7d49f76d909690345c65f11778b2cd"'
      Content-Type:
      - text/html; charset=UTF-8
      Accept-Ranges:
      - bytes
      Response-Time:
      - 2ms
      Content-Length:
      - '856'
      Vary:
      - Accept-Encoding
      Connection:
      - close
    body:
      encoding: UTF-8
      string: |
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <title>Sweater Weather</title>
          <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.2/css/all.css" integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">
        </head>
        <body>
          <div id="flash">
          </div>
          <div id="main-flex">

            <div id="register-dialogue" class="dialogue-box"></div>
            <div id="login-dialogue" class="dialogue-box"></div>
            <div id="current-weather"></div>
            <section id="weather-details-container"></section>
            <section id="forecast-container"></section>

            <section> <div id="favorites-container" class="card dark">
            </div></section>
          </div>
          <script
          src='https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js'>
          </script>
          <script src="main.bundle.js"></script>
        </body>
        </html>
  recorded_at: Sat, 03 Jul 2021 21:18:42 GMT
- request:
    method: get
    uri: https://book-club-project.herokuapp.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip,deflate,identity
      Accept:
      - "*/*"
      User-Agent:
      - Mechanize/2.8.1 Ruby/3.0.0p0 (http://github.com/sparklemotion/mechanize/)
      Accept-Charset:
      - ISO-8859-1,utf-8;q=0.7,*;q=0.7
      Accept-Language:
      - en-us,en;q=0.5
      Host:
      - book-club-project.herokuapp.com
      Referer:
      - https://terminal.turing.edu/alumni/675-ben-lee
      Connection:
      - keep-alive
      Keep-Alive:
      - '300'
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Sat, 03 Jul 2021 21:18:50 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Etag:
      - W/"1ab0ef2714b296d0a4fc1588cda8a031"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _book_club_session=RDhFRmN6dHNvYmIwbGNmbExjUy9NbjdvMjJSaU1IZHBHTEx5bUxMUDQ3ODRLeW8rb2dLR2pINDJaRldDd215MWwwV3NVY1hGOHdHU3J6QVA1OTZkUkRYNHpKR2JIMGxDbVJrSWFsV1REaVFHUUFvcCttMXoyaTlIRUJRa1VmOW52UVRIL0Zoendab2toa3VNNmFEak5BPT0tLWxpYzNvYjZ5UXRtMU5LWXV5YXBwUGc9PQ%3D%3D--fbf9b2072898b6b8d8adee35ae64f5edf12bfaae;
        path=/; HttpOnly
      X-Request-Id:
      - 5991a70a-79e1-48f8-8b1d-8c3589c25571
      X-Runtime:
      - '0.019878'
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: UTF-8
      string: "<!DOCTYPE html>\n<html>\n  <head>\n\n    <title>BookClub</title>\n
        \   <meta name=\"csrf-param\" content=\"authenticity_token\" />\n<meta name=\"csrf-token\"
        content=\"0P1ModtELH0OdrrFwAdDWMXeGEbJMG+1eThx4AmvqAKmryL81x2djl5jHRnpYinaNVsXlpBSdUgcDEAsl3FLhg==\"
        />\n\n    <link rel=\"stylesheet\" media=\"all\" href=\"/assets/reset-e71def02ba902c4b310c83998c74760831d4b8add9d029ff80a7696adf7bce27.css\"
        />\n    <link rel=\"stylesheet\" media=\"all\" href=\"/assets/application-cbe171d2ff27b78b2ff402324bcf2e0f6273f0922486031d38ce53b4829f67ce.css\"
        />\n    <script src=\"/assets/application-fb8981ac1231b8947dac40d05cd006194e44d5087eff64f1418af626d6334c85.js\"></script>\n
        \   <link href=\"https://fonts.googleapis.com/css?family=Mr+De+Haviland\"
        rel=\"stylesheet\">\n  </head>\n\n  <body>\n      <div id=\"color-overlay\"></div>\n
        \     <nav>\n  <div class=\"link-container\">\n    <a href=\"/\">Book Club</a>\n
        \ </div>\n  <div class=\"link-container\">\n    <a href=\"/books\">All Books</a>\n
        \ </div>\n  <div class=\"link-container\">\n    <a href=\"/books/new\">New
        Book</a>\n  </div>\n  <div class=\"link-container\">\n    <a href=\"/authors\">All
        Authors</a>\n  </div>\n</nav>\n\n      \n    <main>\n      \n    <h1>Welcome</h1>\n\n
        \   </main>\n  </body>\n</html>\n"
  recorded_at: Sat, 03 Jul 2021 21:18:51 GMT
recorded_with: VCR 6.0.0
